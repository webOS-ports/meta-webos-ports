From 163333cd51ea3dd9f5f7bd44310b7c4e385865a0 Mon Sep 17 00:00:00 2001
From: "sameer.mulla" <sameer.mulla@lge.com>
Date: Tue, 22 Jan 2019 23:25:18 +0530
Subject: [PATCH] Implementation to get connected profiles uuids

:Release Notes:
Implementation to get connected profiles uuids

:Detailed Notes:
Modified device.c to get connected profiles uuids

:Testing Performed:
Builded and Tested

:QA Notes:

:Issues Addressed:
[PLAT-69336] Implement AVRCP/Connect Disconnect for blueooth-sil-bluez

Change-Id: I72834cc9b4bdd8f086565dc9a2a41006f758ad39
---
Upstream-Status: Inappropriate [webos specific]

 src/device.c | 50 +++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 49 insertions(+), 1 deletion(-)

diff --git a/src/device.c b/src/device.c
index a3c51c0f5..fea01d20a 100644
--- a/src/device.c
+++ b/src/device.c
@@ -215,6 +215,7 @@ struct btd_device {
 	char		*modalias;
 	struct btd_adapter	*adapter;
 	GSList		*uuids;
+	GSList		*connected_uuids;
 	GSList		*primaries;		/* List of primary services */
 	GSList		*services;		/* List of btd_service */
 	GSList		*pending;		/* Pending services */
@@ -996,6 +997,28 @@ static gboolean get_appearance(const GDBusPropertyTable *property, void *data,
 	return FALSE;
 }
 
+static gboolean dev_property_get_connected_uuids(const GDBusPropertyTable *property,
+					DBusMessageIter *iter, void *data)
+{
+	struct btd_device *dev = data;
+	DBusMessageIter entry;
+	GSList *l;
+
+	dbus_message_iter_open_container(iter, DBUS_TYPE_ARRAY,
+				DBUS_TYPE_STRING_AS_STRING, &entry);
+
+	if (dev->connected_uuids) {
+		l = dev->connected_uuids;
+		for (; l != NULL; l = l->next)
+			dbus_message_iter_append_basic(&entry, DBUS_TYPE_STRING,
+								&l->data);
+	}
+
+	dbus_message_iter_close_container(iter, &entry);
+
+	return TRUE;
+}
+
 static gboolean dev_property_exists_appearance(
 			const GDBusPropertyTable *property, void *data)
 {
@@ -1893,8 +1916,14 @@ static void device_profile_connected(struct btd_device *dev,
 
 	DBG("%s %s (%d)", profile->name, strerror(-err), -err);
 
-	if (!err)
+	if (!err) {
 		btd_device_set_temporary(dev, false);
+		dev->connected_uuids = g_slist_insert_sorted(dev->connected_uuids,
+													g_strdup(profile->remote_uuid),
+													bt_uuid_strcmp);
+		g_dbus_emit_property_changed(dbus_conn, dev->path,
+									DEVICE_INTERFACE, "ConnectedUUIDS");
+	}
 
 	if (dev->pending == NULL)
 		goto done;
@@ -2417,6 +2446,14 @@ static DBusMessage *connect_profile(DBusConnection *conn, DBusMessage *msg,
 static void device_profile_disconnected(struct btd_device *dev,
 					struct btd_profile *profile, int err)
 {
+	DBG("%s %s (%d)", profile->name, strerror(-err), -err);
+	if (!err) {
+		if (dev->connected_uuids)
+		dev->connected_uuids = g_slist_remove (dev->connected_uuids, profile->remote_uuid);
+		g_dbus_emit_property_changed(dbus_conn, dev->path,
+						DEVICE_INTERFACE, "ConnectedUUIDS");
+	}
+
 	if (!dev->disconnect)
 		return;
 
@@ -3022,6 +3059,7 @@ static const GDBusPropertyTable device_properties[] = {
 	{ "RSSI", "n", dev_property_get_rssi, NULL, dev_property_exists_rssi },
 	{ "Connected", "b", dev_property_get_connected },
 	{ "UUIDs", "as", dev_property_get_uuids },
+	{ "ConnectedUUIDS", "as", dev_property_get_connected_uuids },
 	{ "Modalias", "s", dev_property_get_modalias, NULL,
 						dev_property_exists_modalias },
 	{ "Adapter", "o", dev_property_get_adapter },
@@ -3129,8 +3167,18 @@ void device_remove_connection(struct btd_device *device, uint8_t bdaddr_type,
 	if (!state->connected)
 		return;
 
+	DBG("");
+
 	state->connected = false;
 	state->initiator = false;
+
+	if (device->connected_uuids) {
+		g_slist_free (device->connected_uuids);
+		device->connected_uuids = NULL;
+		g_dbus_emit_property_changed(dbus_conn, device->path,
+						DEVICE_INTERFACE, "ConnectedUUIDS");
+	}
+
 	device->general_connect = FALSE;
 
 	device_set_svc_refreshed(device, false);

From e9d935820d96845b0a79a59c4483834bc2c51c72 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sun, 29 May 2022 15:28:19 +0000
Subject: [PATCH] (minimal) migration to Qt6

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 bluez-qt/src/adapter.h                        |  2 +-
 bluez-qt/src/adapter_p.cpp                    | 12 ++++----
 bluez-qt/src/device.h                         |  5 +++-
 bluez-qt/src/device_p.cpp                     | 30 +++++++++----------
 bluez-qt/src/imports/declarativedevice.h      |  7 ++---
 .../src/imports/declarativedevicesmodel.h     |  3 +-
 bluez-qt/src/imports/declarativemanager.h     |  5 ++--
 bluez-qt/src/imports/imports.pro              |  2 +-
 bluez-qt/src/initmanagerjob.h                 |  3 +-
 bluez-qt/src/initobexmanagerjob.h             |  3 +-
 bluez-qt/src/macros.h                         | 12 ++++----
 bluez-qt/src/manager.h                        |  4 +--
 bluez-qt/src/mediaplayer_p.cpp                |  4 +--
 bluez-qt/src/obexmanager.h                    |  1 +
 bluez-qt/src/obextransfer.cpp                 |  2 +-
 bluez-qt/src/utils.h                          |  4 +--
 16 files changed, 49 insertions(+), 50 deletions(-)

diff --git a/bluez-qt/src/adapter.h b/bluez-qt/src/adapter.h
index a19c129..2a15588 100644
--- a/bluez-qt/src/adapter.h
+++ b/bluez-qt/src/adapter.h
@@ -27,13 +27,13 @@
 #include <QList>
 #include <QStringList>
 
+#include "device.h"
 #include "types.h"
 #include "bluezqt_export.h"
 
 namespace BluezQt
 {
 
-class Device;
 class PendingCall;
 
 /**
diff --git a/bluez-qt/src/adapter_p.cpp b/bluez-qt/src/adapter_p.cpp
index 191c272..346c99b 100644
--- a/bluez-qt/src/adapter_p.cpp
+++ b/bluez-qt/src/adapter_p.cpp
@@ -87,22 +87,22 @@ void AdapterPrivate::init(const QVariantMap &properties)
 void AdapterPrivate::addDevice(const DevicePtr &device)
 {
     m_devices.append(device);
-    Q_EMIT q.data()->deviceAdded(device);
+    Q_EMIT q.toStrongRef()->deviceAdded(device);
 
     deviceConnectedChanged();
     connect(device.data(), &Device::connectedChanged, this, &AdapterPrivate::deviceConnectedChanged);
-    connect(device.data(), &Device::deviceChanged, q.data(), &Adapter::deviceChanged);
+    connect(device.data(), &Device::deviceChanged, q.toStrongRef().data(), &Adapter::deviceChanged);
 }
 
 void AdapterPrivate::removeDevice(const DevicePtr &device)
 {
     m_devices.removeOne(device);
     Q_EMIT device->deviceRemoved(device);
-    Q_EMIT q.data()->deviceRemoved(device);
+    Q_EMIT q.toStrongRef()->deviceRemoved(device);
 
     deviceConnectedChanged();
     disconnect(device.data(), &Device::connectedChanged, this, &AdapterPrivate::deviceConnectedChanged);
-    disconnect(device.data(), &Device::deviceChanged, q.data(), &Adapter::deviceChanged);
+    disconnect(device.data(), &Device::deviceChanged, q.toStrongRef().data(), &Adapter::deviceChanged);
 }
 
 QDBusPendingReply<> AdapterPrivate::setDBusProperty(const QString &name, const QVariant &value)
@@ -156,7 +156,7 @@ void AdapterPrivate::propertiesChanged(const QString &interface, const QVariantM
         }
     }
 
-    Q_EMIT q.data()->adapterChanged(q.toStrongRef());
+    Q_EMIT q.toStrongRef()->adapterChanged(q.toStrongRef());
 }
 
 void AdapterPrivate::deviceConnectedChanged()
@@ -171,7 +171,7 @@ void AdapterPrivate::deviceConnectedChanged()
 
     if (m_connected != newConnected) {
         m_connected = newConnected;
-        Q_EMIT q.data()->connectedChanged(m_connected);
+        Q_EMIT q.toStrongRef()->connectedChanged(m_connected);
     }
 }
 
diff --git a/bluez-qt/src/device.h b/bluez-qt/src/device.h
index aadc2cf..663d24c 100644
--- a/bluez-qt/src/device.h
+++ b/bluez-qt/src/device.h
@@ -25,13 +25,16 @@
 
 #include <QObject>
 
+#include "adapter.h"
+#include "input.h"
+#include "mediaplayer.h"
+#include "mediatransport.h"
 #include "types.h"
 #include "bluezqt_export.h"
 
 namespace BluezQt
 {
 
-class Adapter;
 class PendingCall;
 
 /**
diff --git a/bluez-qt/src/device_p.cpp b/bluez-qt/src/device_p.cpp
index 9da198d..b92acf7 100644
--- a/bluez-qt/src/device_p.cpp
+++ b/bluez-qt/src/device_p.cpp
@@ -106,23 +106,23 @@ void DevicePrivate::interfacesAdded(const QString &path, const QVariantMapMap &i
         if (it.key() == Strings::orgBluezInput1() && !m_input) {
             m_input = InputPtr(new Input(path, it.value()));
             m_input->d->q = m_input.toWeakRef();
-            Q_EMIT q.data()->inputChanged(m_input);
+            Q_EMIT q.toStrongRef()->inputChanged(m_input);
             changed = true;
         } else if (it.key() == Strings::orgBluezMediaPlayer1() && !m_mediaPlayer) {
             m_mediaPlayer = MediaPlayerPtr(new MediaPlayer(path, it.value()));
             m_mediaPlayer->d->q = m_mediaPlayer.toWeakRef();
-            Q_EMIT q.data()->mediaPlayerChanged(m_mediaPlayer);
+            Q_EMIT q.toStrongRef()->mediaPlayerChanged(m_mediaPlayer);
             changed = true;
         } else if (it.key() == Strings::orgBluezMediaTransport1() && !m_mediaTransport) {
             m_mediaTransport = MediaTransportPtr(new MediaTransport(path, it.value()));
             m_mediaTransport->d->q = m_mediaTransport.toWeakRef();
-            Q_EMIT q.data()->mediaTransportChanged(m_mediaTransport);
+            Q_EMIT q.toStrongRef()->mediaTransportChanged(m_mediaTransport);
             changed = true;
         }
     }
 
     if (changed) {
-        Q_EMIT q.data()->deviceChanged(q.toStrongRef());
+        Q_EMIT q.toStrongRef()->deviceChanged(q.toStrongRef());
     }
 }
 
@@ -134,21 +134,21 @@ void DevicePrivate::interfacesRemoved(const QString &path, const QStringList &in
     Q_FOREACH (const QString &interface, interfaces) {
         if (interface == Strings::orgBluezInput1()) {
             m_input.clear();
-            Q_EMIT q.data()->inputChanged(m_input);
+            Q_EMIT q.toStrongRef()->inputChanged(m_input);
             changed = true;
         } else if (interface == Strings::orgBluezMediaPlayer1()) {
             m_mediaPlayer.clear();
-            Q_EMIT q.data()->mediaPlayerChanged(m_mediaPlayer);
+            Q_EMIT q.toStrongRef()->mediaPlayerChanged(m_mediaPlayer);
             changed = true;
         } else if (interface == Strings::orgBluezMediaTransport1()) {
             m_mediaTransport.clear();
-            Q_EMIT q.data()->mediaTransportChanged(m_mediaTransport);
+            Q_EMIT q.toStrongRef()->mediaTransportChanged(m_mediaTransport);
             changed = true;
         }
     }
 
     if (changed) {
-        Q_EMIT q.data()->deviceChanged(q.toStrongRef());
+        Q_EMIT q.toStrongRef()->deviceChanged(q.toStrongRef());
     }
 }
 
@@ -219,15 +219,15 @@ void DevicePrivate::propertiesChanged(const QString &interface, const QVariantMa
         }
     }
 
-    Q_EMIT q.data()->deviceChanged(q.toStrongRef());
+    Q_EMIT q.toStrongRef()->deviceChanged(q.toStrongRef());
 }
 
 void DevicePrivate::namePropertyChanged(const QString &value)
 {
     if (m_name != value) {
         m_name = value;
-        Q_EMIT q.data()->remoteNameChanged(m_name);
-        Q_EMIT q.data()->friendlyNameChanged(q.data()->friendlyName());
+        Q_EMIT q.toStrongRef()->remoteNameChanged(m_name);
+        Q_EMIT q.toStrongRef()->friendlyNameChanged(q.toStrongRef()->friendlyName());
     }
 }
 
@@ -235,8 +235,8 @@ void DevicePrivate::aliasPropertyChanged(const QString &value)
 {
     if (m_alias != value) {
         m_alias = value;
-        Q_EMIT q.data()->nameChanged(m_alias);
-        Q_EMIT q.data()->friendlyNameChanged(q.data()->friendlyName());
+        Q_EMIT q.toStrongRef()->nameChanged(m_alias);
+        Q_EMIT q.toStrongRef()->friendlyNameChanged(q.toStrongRef()->friendlyName());
     }
 }
 
@@ -244,8 +244,8 @@ void DevicePrivate::classPropertyChanged(quint32 value)
 {
     if (m_deviceClass != value) {
         m_deviceClass = value;
-        Q_EMIT q.data()->deviceClassChanged(m_deviceClass);
-        Q_EMIT q.data()->typeChanged(q.data()->type());
+        Q_EMIT q.toStrongRef()->deviceClassChanged(m_deviceClass);
+        Q_EMIT q.toStrongRef()->typeChanged(q.toStrongRef()->type());
     }
 }
 
diff --git a/bluez-qt/src/imports/declarativedevice.h b/bluez-qt/src/imports/declarativedevice.h
index d6731b5..481d380 100644
--- a/bluez-qt/src/imports/declarativedevice.h
+++ b/bluez-qt/src/imports/declarativedevice.h
@@ -24,10 +24,9 @@
 #define DECLARATIVEDEVICE_H
 
 #include "device.h"
-
-class DeclarativeAdapter;
-class DeclarativeInput;
-class DeclarativeMediaPlayer;
+#include "declarativeinput.h"
+#include "declarativemediaplayer.h"
+#include "declarativeadapter.h"
 
 class DeclarativeDevice : public QObject
 {
diff --git a/bluez-qt/src/imports/declarativedevicesmodel.h b/bluez-qt/src/imports/declarativedevicesmodel.h
index 3084ed5..cd78b05 100644
--- a/bluez-qt/src/imports/declarativedevicesmodel.h
+++ b/bluez-qt/src/imports/declarativedevicesmodel.h
@@ -26,8 +26,7 @@
 #include <QSortFilterProxyModel>
 
 #include "devicesmodel.h"
-
-class DeclarativeManager;
+#include "declarativemanager.h"
 
 class DeclarativeDevicesModel : public QSortFilterProxyModel
 {
diff --git a/bluez-qt/src/imports/declarativemanager.h b/bluez-qt/src/imports/declarativemanager.h
index 61985d1..857c6f9 100644
--- a/bluez-qt/src/imports/declarativemanager.h
+++ b/bluez-qt/src/imports/declarativemanager.h
@@ -26,11 +26,10 @@
 #include <QHash>
 #include <QQmlListProperty>
 
+#include "declarativeadapter.h"
+#include "declarativedevice.h"
 #include "manager.h"
 
-class DeclarativeDevice;
-class DeclarativeAdapter;
-
 class DeclarativeManager : public BluezQt::Manager
 {
     Q_OBJECT
diff --git a/bluez-qt/src/imports/imports.pro b/bluez-qt/src/imports/imports.pro
index 27bcf29..ac00703 100644
--- a/bluez-qt/src/imports/imports.pro
+++ b/bluez-qt/src/imports/imports.pro
@@ -1,7 +1,7 @@
 TARGET = bluezqtextensionplugin
 TEMPLATE = lib
 CONFIG += c++11 plugin
-QMAKE_CXXFLAGS += -Wno-unused-parameter -Wno-psabi
+QMAKE_CXXFLAGS += -Wno-unused-parameter -Wno-psabi -fpermissive
 
 QT_VERSION=$$[QT_VERSION]
 
diff --git a/bluez-qt/src/initmanagerjob.h b/bluez-qt/src/initmanagerjob.h
index 829d7f1..2f4ac51 100644
--- a/bluez-qt/src/initmanagerjob.h
+++ b/bluez-qt/src/initmanagerjob.h
@@ -25,14 +25,13 @@
 
 #include <QObject>
 
+#include "manager.h"
 #include "job.h"
 #include "bluezqt_export.h"
 
 namespace BluezQt
 {
 
-class Manager;
-
 /**
  * Init manager job.
  *
diff --git a/bluez-qt/src/initobexmanagerjob.h b/bluez-qt/src/initobexmanagerjob.h
index 96cf61a..074dce8 100644
--- a/bluez-qt/src/initobexmanagerjob.h
+++ b/bluez-qt/src/initobexmanagerjob.h
@@ -25,14 +25,13 @@
 
 #include <QObject>
 
+#include "obexmanager.h"
 #include "job.h"
 #include "bluezqt_export.h"
 
 namespace BluezQt
 {
 
-class ObexManager;
-
 /**
  * Init obex manager job.
  *
diff --git a/bluez-qt/src/macros.h b/bluez-qt/src/macros.h
index bdbe70d..b99ab6b 100644
--- a/bluez-qt/src/macros.h
+++ b/bluez-qt/src/macros.h
@@ -27,8 +27,8 @@
 #define PROPERTY_CHANGED(var, type_cast, signal) \
     if (var != value.type_cast()) { \
         var = value.type_cast(); \
-        if (q.data()) { \
-            Q_EMIT q.data()->signal(var); \
+        if (q) { \
+            Q_EMIT q.toStrongRef()->signal(var); \
         } \
     }
 
@@ -36,8 +36,8 @@
     const auto &val = value; \
     if (var != val) { \
         var = val; \
-        if (q.data()) { \
-            Q_EMIT q.data()->signal(var); \
+        if (q) { \
+            Q_EMIT q.toStrongRef()->signal(var); \
         } \
     }
 
@@ -45,8 +45,8 @@
 #define PROPERTY_INVALIDATED(var, empty, signal) \
     if (var != empty) { \
         var = empty; \
-        if (q.data()) { \
-            Q_EMIT q.data()->signal(var); \
+        if (q) { \
+            Q_EMIT q.toStrongRef()->signal(var); \
         } \
     }
 
diff --git a/bluez-qt/src/manager.h b/bluez-qt/src/manager.h
index 8cbaf09..a9e71ad 100644
--- a/bluez-qt/src/manager.h
+++ b/bluez-qt/src/manager.h
@@ -25,14 +25,14 @@
 
 #include <QObject>
 
+#include "adapter.h"
+#include "device.h"
 #include "types.h"
 #include "bluezqt_export.h"
 
 namespace BluezQt
 {
 
-class Device;
-class Adapter;
 class Agent;
 class Profile;
 class PendingCall;
diff --git a/bluez-qt/src/mediaplayer_p.cpp b/bluez-qt/src/mediaplayer_p.cpp
index eb70779..7995afb 100644
--- a/bluez-qt/src/mediaplayer_p.cpp
+++ b/bluez-qt/src/mediaplayer_p.cpp
@@ -151,7 +151,7 @@ void MediaPlayerPrivate::propertiesChanged(const QString &interface, const QVari
             PROPERTY_CHANGED(m_position, toUInt, positionChanged);
         } else if (property == QLatin1String("Track")) {
             m_track = variantToTrack(value);
-            Q_EMIT q.data()->trackChanged(m_track);
+            Q_EMIT q.toStrongRef()->trackChanged(m_track);
         }
     }
 
@@ -170,7 +170,7 @@ void MediaPlayerPrivate::propertiesChanged(const QString &interface, const QVari
             PROPERTY_INVALIDATED(m_position, 0, positionChanged);
         } else if (property == QLatin1String("Track")) {
             m_track = variantToTrack(QVariant());
-            Q_EMIT q.data()->trackChanged(m_track);
+            Q_EMIT q.toStrongRef()->trackChanged(m_track);
         }
     }
 }
diff --git a/bluez-qt/src/obexmanager.h b/bluez-qt/src/obexmanager.h
index 5102289..062edcb 100644
--- a/bluez-qt/src/obexmanager.h
+++ b/bluez-qt/src/obexmanager.h
@@ -25,6 +25,7 @@
 
 #include <QObject>
 
+#include "obexsession.h"
 #include "types.h"
 #include "bluezqt_export.h"
 
diff --git a/bluez-qt/src/obextransfer.cpp b/bluez-qt/src/obextransfer.cpp
index 7dd2e74..3c7d0c8 100644
--- a/bluez-qt/src/obextransfer.cpp
+++ b/bluez-qt/src/obextransfer.cpp
@@ -131,7 +131,7 @@ void ObexTransferPrivate::sessionRemoved(const ObexSessionPtr &session)
     // Change status to Error if org.bluez.obex crashes
     if (m_status != ObexTransfer::Complete && m_status != ObexTransfer::Error) {
         m_status = ObexTransfer::Error;
-        Q_EMIT q.data()->statusChanged(m_status);
+        Q_EMIT q.toStrongRef()->statusChanged(m_status);
     }
 }
 
diff --git a/bluez-qt/src/utils.h b/bluez-qt/src/utils.h
index 0f3f4ed..20fa72f 100644
--- a/bluez-qt/src/utils.h
+++ b/bluez-qt/src/utils.h
@@ -24,9 +24,9 @@
 #define BLUEZQT_UTILS_H
 
 #include "device.h"
+#include <QString>
+#include <QtCore/qglobal.h>
 
-class QString;
-class QStringList;
 class QDBusConnection;
 
 namespace BluezQt

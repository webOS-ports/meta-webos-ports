From 3472cdcdfbfa953e77c1b5722a786f3b703843a9 Mon Sep 17 00:00:00 2001
From: "piyush10.asalmol" <piyush10.asalmol@lge.com>
Date: Thu, 27 Oct 2022 19:23:51 +0530
Subject: [PATCH] Add Changes for tethering setState api

:Release Notes:
Add Changes for tethering setState api

:Detailed Notes:
Add Changes for tethering setState api

:Testing Performed:
Tested locally

:QA Notes:
NA

:Issues Addressed:
[WRO-11079] - Add Changes for tethering setState

Change-Id: Id25f43498b0320c2761791660d78408fcf0a4965
Reviewed-on: http://gpro.lge.com/c/webosose/connman-webos/+/338047
Reviewed-by: Commit Msg Checker <commit_msg@lge.com>
Reviewed-by: Ban Word Checker <ban_word@lge.com>
Reviewed-by: <muralidhar.n@lge.com>
Tested-by: <muralidhar.n@lge.com>
---
 gsupplicant/supplicant.c | 23 +++++++++++++++++++++++
 include/technology.h     |  1 +
 src/technology.c         |  7 ++++---
 src/tethering.c          | 19 +++++++++++++++++++
 4 files changed, 47 insertions(+), 3 deletions(-)

diff --git a/gsupplicant/supplicant.c b/gsupplicant/supplicant.c
index 5e37e33b..353fe9d6 100644
--- a/gsupplicant/supplicant.c
+++ b/gsupplicant/supplicant.c
@@ -4819,6 +4819,20 @@ go_next:
 
 	return;
 }
+
+static void signal_invitation_received(const char *path, DBusMessageIter *iter)
+{
+	GSupplicantInterface *interface;
+
+	SUPPLICANT_DBG("signal invitation received");
+
+	interface = g_hash_table_lookup(interface_table, path);
+	if (!interface)
+		return;
+
+	interface_p2p_invitation_received(iter, interface);
+}
+
 static void empty_free_function(void* ptr)
 {
 	// Does nothing
@@ -5787,11 +5801,20 @@ static struct {
 
 	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "GONegotiationSuccess", signal_group_success },
 	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "GONegotiationFailure", signal_group_failure },
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "PersistentGroupAdded", signal_persistent_group_added	},
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "PersistentGroupRemoved", signal_persistent_group_removed	},
 	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "GroupStarted", signal_group_started },
 	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "GroupFinished", signal_group_finished },
 	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "GONegotiationRequest", signal_group_request },
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "ServiceDiscoveryResponse", signal_sd_response	},
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "ServiceDiscoveryASPResponse", signal_sd_asp_response	},
 
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "P2PSProvisionStart", signal_p2ps_prov_start	},
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "P2PSProvisionDone",	 signal_p2ps_prov_done	},
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "InvitationResult", signal_invitation_result },
+	{ SUPPLICANT_INTERFACE ".Interface.P2PDevice", "InvitationReceived", signal_invitation_received	},
 	{ SUPPLICANT_INTERFACE ".Group", "PeerJoined", signal_group_peer_joined },
+	{ SUPPLICANT_INTERFACE ".Group", "PeerJoinedWithIP", signal_peer_joined_with_ip },
 	{ SUPPLICANT_INTERFACE ".Group", "PeerDisconnected", signal_group_peer_disconnected },
 
 	{ }
diff --git a/include/technology.h b/include/technology.h
index 4accc58d..6f721ee5 100644
--- a/include/technology.h
+++ b/include/technology.h
@@ -77,6 +77,7 @@ struct connman_technology_driver {
 	int (*set_p2p_enable) (struct connman_technology *technology,
 								bool status);
 	int (*set_tethering) (struct connman_technology *technology,
+				const char *identifier, const char *passphrase,
 				const char *bridge, bool enabled);
 	int (*set_regdom) (struct connman_technology *technology,
 						const char *alpha2);
diff --git a/src/technology.c b/src/technology.c
index b048c62e..535a9040 100644
--- a/src/technology.c
+++ b/src/technology.c
@@ -304,8 +304,7 @@ static int set_tethering(struct connman_technology *technology,
 	if (!bridge)
 		return -EOPNOTSUPP;
 
-	if (technology->type == CONNMAN_SERVICE_TYPE_WIFI &&
-	    (!ident || !passphrase))
+	if (technology->type == CONNMAN_SERVICE_TYPE_WIFI && !ident)
 		return -EINVAL;
 
 	for (tech_drivers = technology->driver_list; tech_drivers;
@@ -315,7 +314,8 @@ static int set_tethering(struct connman_technology *technology,
 		if (!driver || !driver->set_tethering)
 			continue;
 
-		err = driver->set_tethering(technology, bridge, enabled);
+		err = driver->set_tethering(technology, ident, passphrase,
+				bridge, enabled);
 
 		if (result == -EINPROGRESS)
 			continue;
@@ -2150,6 +2150,7 @@ static void technology_put(struct connman_technology *technology)
 	g_free(technology->regdom);
 	g_free(technology->tethering_ident);
 	g_free(technology->tethering_passphrase);
+	g_free(technology->tethering_ipaddress);
 	g_free(technology->p2p_identifier);
 	g_free(technology);
 }
diff --git a/src/tethering.c b/src/tethering.c
index 8e847a7e..8351b2d1 100644
--- a/src/tethering.c
+++ b/src/tethering.c
@@ -88,6 +88,20 @@ struct connman_private_network {
 	char *primary_dns;
 	char *secondary_dns;
 };
+
+static void destroy_station(gpointer key, gpointer value, gpointer user_data)
+{
+	struct connman_station_info *station_info;
+
+	__sync_synchronize();
+
+	station_info = value;
+
+	g_free(station_info->path);
+	g_free(station_info->type);
+	g_free(station_info);
+}
+
 int connman_technology_tethering_add_station(enum connman_service_type type,
                                                const char *mac)
 {
@@ -805,6 +819,9 @@ int __connman_private_network_request(DBusMessage *msg, const char *owner)
 
 	g_hash_table_insert(pn_hash, pn->path, pn);
 
+	sta_hash = g_hash_table_new_full(g_str_hash, g_str_equal,
+						NULL, NULL);
+
 	return 0;
 
 error:
@@ -880,6 +897,8 @@ void __connman_tethering_cleanup(void)
 		return;
 
 	g_hash_table_destroy(pn_hash);
+	g_hash_table_foreach(sta_hash, destroy_station, NULL);
+	g_hash_table_destroy(sta_hash);
 
 	g_hash_table_destroy(clients_notify->remove);
 	g_free(clients_notify);

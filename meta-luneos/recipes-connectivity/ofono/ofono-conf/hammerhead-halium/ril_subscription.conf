# This is a sample configuration file for LuneOS ril driver
#
# This file is expected to be installed in /etc/ofono
#
# Configuration for each modem is defined in its own [ril_x] section,
# common settings are in the [Settings] section, all other sections
# are ignored.
#
# If any value from [ril_x] section (except "socket") is defined
# in the [Settings] section, it becomes the default for all modems.
# Default values can still be redefined at [ril_x] level.
#

[Settings]

# If the phone has more than one SIM slot, the 3G/LTE module may be
# shared by all modems, meaning that only one of the slots can use
# 3G/LTE. In order to "hand 4G over" to the other slot, the modem
# currently using 3G/LTE has to drop to GSM, release 3G/LTE module
# and only then 3G/LTE can be used by the other modem. This setting
# allows to disable this behaviour (say, if your phone has independent
# 3G/LTE modules for each slot or you don't need 4G for both slots).
# Obviously, it only has any effect if you have more than one SIM.
#
# Default is true (switch the current data modem to 2G when changing
# the data modems)
#
#3GLTEHandover=true

[ril_0]

# Required entry, defines the RIL socket path
# socket=/dev/socket/rild

# Subscription string. Some (mostly, older) RILs require that 4 bytes
# (usually SUB1 or SUB2) are written to the socket before rild starts
# talking to us.
#
# Not sent by default.
#
#sub=SUB1

# RIL logging prefix, to tell one socket from another in the log.
# Makes sense if you have more than one modem configured.
#
# No prefix by default.
#
transport=binder:name=slot1
name=slot1

# Slot id for SET_UICC_SUBSCRIPTION request.
#
# By default the first modem becomes slot 0, the next one slot 1 and so on.
#
#slot=0

# RIL request timeout, in milliseconds.
#
# The default is zero (no timeout)
#
#timeout=0

# Setting this one to false would disable 4G technology selection.
#
# By default 4G is enabled
#
#enable4G=true

# RIL_REQUEST_SET_UICC_SUBSCRIPTION is 115 in RIL version 9 (or earlier)
# and 122 in RIL version 10 and later. Since ofono doesn't know in advance
# which RIL version it's dealing with, it makes the decision at runtime.
# Settings it to false disables the workaround and always sends 122.
#
# Default is true (select SET_UICC_SUBSCRIPTION based on the RIL version)
#
#uiccWorkaround=true

# Points to the file containing comma-separated ECC (Emergency List Codes)
# list, e.g. 911,112,*911,#911. The file is tracked by ofono and when its
# contents changes, it's reflected in the EmergencyNumbers property of
# org.ofono.VoiceCallManager.
#
# If necessary, the contents of the file can be synchronized with the
# Android system property by adding something like this to /init.rc:
#
# on property:ril.ecclist=*
#     write /var/lib/ofono/ril.ecclist ${ril.ecclist}
#     chmod 0644 /var/lib/ofono/ril.ecclist
#
#ecclistFile=/var/lib/ofono/ril.ecclist

# RIL_REQUEST_ALLOW_DATA may or may not be supported by your RIL.
# This option allows you to forcibly enable or disable use of this request.
# Possible values are auto, on and off
#
# Default is auto (usage based on the RIL version)
#
allowDataReq=off

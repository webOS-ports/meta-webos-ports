diff --git a/src/quick/scenegraph/shaders_ng/24bittextmask.frag b/src/quick/scenegraph/shaders_ng/24bittextmask.frag
index ed8da4cd30..07dcc20ccd 100644
--- a/src/quick/scenegraph/shaders_ng/24bittextmask.frag
+++ b/src/quick/scenegraph/shaders_ng/24bittextmask.frag
@@ -6,8 +6,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/32bitcolortext.frag b/src/quick/scenegraph/shaders_ng/32bitcolortext.frag
index 4198a4d339..0ed0002dd1 100644
--- a/src/quick/scenegraph/shaders_ng/32bitcolortext.frag
+++ b/src/quick/scenegraph/shaders_ng/32bitcolortext.frag
@@ -6,8 +6,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/8bittextmask.frag b/src/quick/scenegraph/shaders_ng/8bittextmask.frag
index a06743876d..22957c00a7 100644
--- a/src/quick/scenegraph/shaders_ng/8bittextmask.frag
+++ b/src/quick/scenegraph/shaders_ng/8bittextmask.frag
@@ -6,8 +6,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/8bittextmask_a.frag b/src/quick/scenegraph/shaders_ng/8bittextmask_a.frag
index f725cbc5e7..a829414f12 100644
--- a/src/quick/scenegraph/shaders_ng/8bittextmask_a.frag
+++ b/src/quick/scenegraph/shaders_ng/8bittextmask_a.frag
@@ -6,8 +6,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.frag b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.frag
index b1551d8ef4..b9e7667fda 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.vert b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.vert
index 8f0d618503..552f647c3e 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.vert
+++ b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec2 tCoord;
 layout(location = 0) out vec2 sampleCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
@@ -22,5 +22,5 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
      sampleCoord = tCoord * ubuf.textureScale;
-     gl_Position = ubuf.matrix * vCoord;
+     gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 }
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a.frag b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a.frag
index 7c6bd9a493..87a0d86ef9 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a_fwidth.frag
index 30ec465791..7b718bc6f1 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_a_fwidth.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_fwidth.frag
index 511bffb09a..3a59dc6b24 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldoutlinetext_fwidth.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.frag b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.frag
index aa3390094b..75e4628c23 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.vert b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.vert
index f3a7671435..2eab188544 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.vert
+++ b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext.vert
@@ -7,7 +7,7 @@ layout(location = 0) out vec2 sampleCoord;
 layout(location = 1) out vec2 shiftedSampleCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
@@ -23,5 +23,5 @@ void main()
 {
      sampleCoord = tCoord * ubuf.textureScale;
      shiftedSampleCoord = (tCoord - ubuf.shift) * ubuf.textureScale;
-     gl_Position = ubuf.matrix * vCoord;
+     gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 }
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a.frag b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a.frag
index ab3a5f63ff..24cad70696 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a_fwidth.frag
index 8f528fea1e..1ab23cf7f6 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_a_fwidth.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_fwidth.frag
index a71cc1d9b0..2dfd8a5a4e 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldshiftedtext_fwidth.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldtext.frag b/src/quick/scenegraph/shaders_ng/distancefieldtext.frag
index d594207567..e1f66ebf7a 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldtext.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldtext.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldtext.vert b/src/quick/scenegraph/shaders_ng/distancefieldtext.vert
index d56ddddd24..5a407979d6 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldtext.vert
+++ b/src/quick/scenegraph/shaders_ng/distancefieldtext.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec2 tCoord;
 layout(location = 0) out vec2 sampleCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
@@ -18,5 +18,5 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
      sampleCoord = tCoord * ubuf.textureScale;
-     gl_Position = ubuf.matrix * vCoord;
+     gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 }
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldtext_a.frag b/src/quick/scenegraph/shaders_ng/distancefieldtext_a.frag
index bb807d86d8..5aa8356d07 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldtext_a.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldtext_a_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldtext_a_fwidth.frag
index 1aa1175b57..bd07bf35b8 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldtext_a_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldtext_a_fwidth.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/distancefieldtext_fwidth.frag b/src/quick/scenegraph/shaders_ng/distancefieldtext_fwidth.frag
index a698c19550..2bf5f457fa 100644
--- a/src/quick/scenegraph/shaders_ng/distancefieldtext_fwidth.frag
+++ b/src/quick/scenegraph/shaders_ng/distancefieldtext_fwidth.frag
@@ -6,7 +6,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/flatcolor.frag b/src/quick/scenegraph/shaders_ng/flatcolor.frag
index 3a677b7c93..1c4e28db23 100644
--- a/src/quick/scenegraph/shaders_ng/flatcolor.frag
+++ b/src/quick/scenegraph/shaders_ng/flatcolor.frag
@@ -3,7 +3,7 @@
 layout(location = 0) out vec4 fragColor;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec4 color;
 } ubuf;
 
diff --git a/src/quick/scenegraph/shaders_ng/flatcolor.vert b/src/quick/scenegraph/shaders_ng/flatcolor.vert
index b5dfd32197..c374fc3d04 100644
--- a/src/quick/scenegraph/shaders_ng/flatcolor.vert
+++ b/src/quick/scenegraph/shaders_ng/flatcolor.vert
@@ -3,7 +3,7 @@
 layout(location = 0) in vec4 vertexCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec4 color;
 } ubuf;
 
@@ -11,5 +11,5 @@ out gl_PerVertex { vec4 gl_Position; };
 
 void main()
 {
-    gl_Position = ubuf.matrix * vertexCoord;
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vertexCoord;
 }
diff --git a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.frag b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.frag
index 723227a04d..27257c3521 100644
--- a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.frag
+++ b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.frag
@@ -11,7 +11,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.vert b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.vert
index 9c7281c31c..e3b6d8b717 100644
--- a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.vert
+++ b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.vert
@@ -10,7 +10,7 @@ layout(location = 3) out vec3 sampleNearRight;
 layout(location = 4) out vec3 sampleFarRight;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
@@ -25,7 +25,7 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
     sampleCoord = tCoord * ubuf.textureScale;
-    gl_Position = ubuf.matrix * vCoord;
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 
     // Calculate neighbor pixel position in item space.
     vec3 wDelta = gl_Position.w * ubuf.vecDelta.xyw;
diff --git a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext_a.frag b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext_a.frag
index a9d56f6380..6a409fa8e9 100644
--- a/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext_a.frag
@@ -11,7 +11,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.frag b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.frag
index 08b2ce5187..d79da38d45 100644
--- a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.frag
+++ b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.vert b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.vert
index 187c384959..845a8831c5 100644
--- a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.vert
+++ b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.vert
@@ -7,7 +7,7 @@ layout(location = 0) out vec3 sampleNearLeft;
 layout(location = 1) out vec3 sampleNearRight;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
@@ -22,7 +22,7 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
     vec2 sampleCoord = tCoord * ubuf.textureScale;
-    gl_Position = ubuf.matrix * vCoord;
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 
     // Calculate neighbor pixel position in item space.
     vec3 wDelta = gl_Position.w * ubuf.vecDelta.xyw;
diff --git a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext_a.frag b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext_a.frag
index ef9407491b..70bf944abe 100644
--- a/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/loqsubpixeldistancefieldtext_a.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 textureScale;
     vec4 color;
     float alphaMin;
diff --git a/src/quick/scenegraph/shaders_ng/opaquetexture.vert b/src/quick/scenegraph/shaders_ng/opaquetexture.vert
index 5b52a59004..6f49eed2f5 100644
--- a/src/quick/scenegraph/shaders_ng/opaquetexture.vert
+++ b/src/quick/scenegraph/shaders_ng/opaquetexture.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec2 qt_VertexTexCoord;
 layout(location = 0) out vec2 qt_TexCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
 } ubuf;
 
 out gl_PerVertex { vec4 gl_Position; };
@@ -14,5 +14,5 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
     qt_TexCoord = qt_VertexTexCoord;
-    gl_Position = ubuf.qt_Matrix * qt_VertexPosition;
+    gl_Position = mat4(ubuf.qt_Matrix[0],ubuf.qt_Matrix[1],ubuf.qt_Matrix[2],ubuf.qt_Matrix[3]) * qt_VertexPosition;
 }
diff --git a/src/quick/scenegraph/shaders_ng/outlinedtext.frag b/src/quick/scenegraph/shaders_ng/outlinedtext.frag
index e2f82d3845..af0ed97690 100644
--- a/src/quick/scenegraph/shaders_ng/outlinedtext.frag
+++ b/src/quick/scenegraph/shaders_ng/outlinedtext.frag
@@ -11,8 +11,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/outlinedtext.vert b/src/quick/scenegraph/shaders_ng/outlinedtext.vert
index 4068e42f28..ee18b7d6ba 100644
--- a/src/quick/scenegraph/shaders_ng/outlinedtext.vert
+++ b/src/quick/scenegraph/shaders_ng/outlinedtext.vert
@@ -10,8 +10,8 @@ layout(location = 3) out vec2 sCoordLeft;
 layout(location = 4) out vec2 sCoordRight;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
@@ -29,6 +29,6 @@ void main()
      sCoordDown = (tCoord - vec2(0.0, 1.0)) * ubuf.textureScale;
      sCoordLeft = (tCoord - vec2(-1.0, 0.0)) * ubuf.textureScale;
      sCoordRight = (tCoord - vec2(1.0, 0.0)) * ubuf.textureScale;
-     vec4 xformed = ubuf.modelViewMatrix * vCoord;
-     gl_Position = ubuf.projectionMatrix * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
+     vec4 xformed = mat4(ubuf.modelViewMatrix[0],ubuf.modelViewMatrix[1],ubuf.modelViewMatrix[2],ubuf.modelViewMatrix[3]) * vCoord;
+     gl_Position = mat4(ubuf.projectionMatrix[0],ubuf.projectionMatrix[1],ubuf.projectionMatrix[2],ubuf.projectionMatrix[3]) * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
 }
diff --git a/src/quick/scenegraph/shaders_ng/outlinedtext_a.frag b/src/quick/scenegraph/shaders_ng/outlinedtext_a.frag
index 274d891a3c..98934e88fc 100644
--- a/src/quick/scenegraph/shaders_ng/outlinedtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/outlinedtext_a.frag
@@ -11,8 +11,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/shadereffect.frag b/src/quick/scenegraph/shaders_ng/shadereffect.frag
index bde493f6ce..2fc250a2b7 100644
--- a/src/quick/scenegraph/shaders_ng/shadereffect.frag
+++ b/src/quick/scenegraph/shaders_ng/shadereffect.frag
@@ -4,7 +4,7 @@ layout(location = 0) in vec2 qt_TexCoord0;
 layout(location = 0) out vec4 fragColor;
 
 layout(std140, binding = 0) uniform qt_buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
     float qt_Opacity;
 } qt_ubuf;
 
diff --git a/src/quick/scenegraph/shaders_ng/shadereffect.vert b/src/quick/scenegraph/shaders_ng/shadereffect.vert
index ae65059f19..aef69b466d 100644
--- a/src/quick/scenegraph/shaders_ng/shadereffect.vert
+++ b/src/quick/scenegraph/shaders_ng/shadereffect.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec2 qt_MultiTexCoord0;
 layout(location = 0) out vec2 qt_TexCoord0;
 
 layout(std140, binding = 0) uniform qt_buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
     float qt_Opacity;
 } qt_ubuf; // must use a name that does not clash with custom code when no uniform blocks
 
@@ -15,5 +15,5 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
     qt_TexCoord0 = qt_MultiTexCoord0;
-    gl_Position = qt_ubuf.qt_Matrix * qt_Vertex;
+    gl_Position = mat4(qt_ubuf.qt_Matrix[0],qt_ubuf.qt_Matrix[1],qt_ubuf.qt_Matrix[2],qt_ubuf.qt_Matrix[3]) * qt_Vertex;
 }
diff --git a/src/quick/scenegraph/shaders_ng/smoothcolor.vert b/src/quick/scenegraph/shaders_ng/smoothcolor.vert
index 03a3ff8975..6b4ee4fa19 100644
--- a/src/quick/scenegraph/shaders_ng/smoothcolor.vert
+++ b/src/quick/scenegraph/shaders_ng/smoothcolor.vert
@@ -7,7 +7,7 @@ layout(location = 2) in vec4 vertexOffset;
 layout(location = 0) out vec4 color;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec2 pixelSize;
     float opacity;
 } ubuf;
@@ -16,11 +16,12 @@ out gl_PerVertex { vec4 gl_Position; };
 
 void main()
 {
-    vec4 pos = ubuf.matrix * vertex;
+    mat4 matrix = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]);
+    vec4 pos = matrix * vertex;
     gl_Position = pos;
 
     if (vertexOffset.x != 0.) {
-        vec4 delta = ubuf.matrix[0] * vertexOffset.x;
+        vec4 delta = matrix[0] * vertexOffset.x;
         vec2 dir = delta.xy * pos.w - pos.xy * delta.w;
         vec2 ndir = .5 * ubuf.pixelSize * normalize(dir / ubuf.pixelSize);
         dir -= ndir * delta.w * pos.w;
@@ -34,7 +35,7 @@ void main()
     }
 
     if (vertexOffset.y != 0.) {
-        vec4 delta = ubuf.matrix[1] * vertexOffset.y;
+        vec4 delta = matrix[1] * vertexOffset.y;
         vec2 dir = delta.xy * pos.w - pos.xy * delta.w;
         vec2 ndir = .5 * ubuf.pixelSize * normalize(dir / ubuf.pixelSize);
         dir -= ndir * delta.w * pos.w;
diff --git a/src/quick/scenegraph/shaders_ng/smoothtexture.vert b/src/quick/scenegraph/shaders_ng/smoothtexture.vert
index 965c837852..5101b7ee5c 100644
--- a/src/quick/scenegraph/shaders_ng/smoothtexture.vert
+++ b/src/quick/scenegraph/shaders_ng/smoothtexture.vert
@@ -9,7 +9,7 @@ layout(location = 0) out vec2 texCoord;
 layout(location = 1) out float vertexOpacity;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
     float opacity;
     vec2 pixelSize;
 } ubuf;
@@ -18,12 +18,13 @@ out gl_PerVertex { vec4 gl_Position; };
 
 void main()
 {
-    vec4 pos = ubuf.qt_Matrix * vertex;
+    mat4 qt_Matrix = mat4(ubuf.qt_Matrix[0],ubuf.qt_Matrix[1],ubuf.qt_Matrix[2],ubuf.qt_Matrix[3]);
+    vec4 pos = qt_Matrix * vertex;
     gl_Position = pos;
     texCoord = multiTexCoord;
 
     if (vertexOffset.x != 0.) {
-        vec4 delta = ubuf.qt_Matrix[0] * vertexOffset.x;
+        vec4 delta =qt_Matrix[0] * vertexOffset.x;
         vec2 dir = delta.xy * pos.w - pos.xy * delta.w;
         vec2 ndir = .5 * ubuf.pixelSize * normalize(dir / ubuf.pixelSize);
         dir -= ndir * delta.w * pos.w;
@@ -38,7 +39,7 @@ void main()
     }
 
     if (vertexOffset.y != 0.) {
-        vec4 delta = ubuf.qt_Matrix[1] * vertexOffset.y;
+        vec4 delta = qt_Matrix[1] * vertexOffset.y;
         vec2 dir = delta.xy * pos.w - pos.xy * delta.w;
         vec2 ndir = .5 * ubuf.pixelSize * normalize(dir / ubuf.pixelSize);
         dir -= ndir * delta.w * pos.w;
diff --git a/src/quick/scenegraph/shaders_ng/sprite.frag b/src/quick/scenegraph/shaders_ng/sprite.frag
index 338f5e957e..fb61ea1681 100644
--- a/src/quick/scenegraph/shaders_ng/sprite.frag
+++ b/src/quick/scenegraph/shaders_ng/sprite.frag
@@ -8,7 +8,7 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D tex;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec4 animPos;
     vec3 animData;
     float opacity;
diff --git a/src/quick/scenegraph/shaders_ng/sprite.vert b/src/quick/scenegraph/shaders_ng/sprite.vert
index b76e2b206f..19a30bab1f 100644
--- a/src/quick/scenegraph/shaders_ng/sprite.vert
+++ b/src/quick/scenegraph/shaders_ng/sprite.vert
@@ -7,7 +7,7 @@ layout(location = 0) out vec4 fTexS;
 layout(location = 1) out float progress;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     vec4 animPos; // x,y, x,y (two frames for interpolation)
     vec3 animData; // w,h(premultiplied of anim), interpolation progress
     float opacity;
@@ -25,5 +25,5 @@ void main()
     // Next frame is also passed, for interpolation
     fTexS.zw = ubuf.animPos.zw + vTex.xy * ubuf.animData.xy;
 
-    gl_Position = ubuf.matrix * vec4(vPos.x, vPos.y, 0, 1);
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vec4(vPos.x, vPos.y, 0, 1);
 }
diff --git a/src/quick/scenegraph/shaders_ng/stencilclip.vert b/src/quick/scenegraph/shaders_ng/stencilclip.vert
index d8b491f775..31a0eb02d9 100644
--- a/src/quick/scenegraph/shaders_ng/stencilclip.vert
+++ b/src/quick/scenegraph/shaders_ng/stencilclip.vert
@@ -3,12 +3,12 @@
 layout(location = 0) in vec4 vCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
 } ubuf;
 
 out gl_PerVertex { vec4 gl_Position; };
 
 void main()
 {
-    gl_Position = ubuf.matrix * vCoord;
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vCoord;
 }
diff --git a/src/quick/scenegraph/shaders_ng/styledtext.frag b/src/quick/scenegraph/shaders_ng/styledtext.frag
index 2e380dfeae..a5edb190de 100644
--- a/src/quick/scenegraph/shaders_ng/styledtext.frag
+++ b/src/quick/scenegraph/shaders_ng/styledtext.frag
@@ -8,8 +8,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/styledtext.vert b/src/quick/scenegraph/shaders_ng/styledtext.vert
index 271dae8d8a..30e06ebb44 100644
--- a/src/quick/scenegraph/shaders_ng/styledtext.vert
+++ b/src/quick/scenegraph/shaders_ng/styledtext.vert
@@ -7,8 +7,8 @@ layout(location = 0) out vec2 sampleCoord;
 layout(location = 1) out vec2 shiftedSampleCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
@@ -23,6 +23,6 @@ void main()
 {
      sampleCoord = tCoord * ubuf.textureScale;
      shiftedSampleCoord = (tCoord - ubuf.shift) * ubuf.textureScale;
-     vec4 xformed = ubuf.modelViewMatrix * vCoord;
-     gl_Position = ubuf.projectionMatrix * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
+     vec4 xformed = mat4(ubuf.modelViewMatrix[0],ubuf.modelViewMatrix[1],ubuf.modelViewMatrix[2],ubuf.modelViewMatrix[3]) * vCoord;
+     gl_Position = mat4(ubuf.projectionMatrix[0],ubuf.projectionMatrix[1],ubuf.projectionMatrix[2],ubuf.projectionMatrix[3]) * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
 }
diff --git a/src/quick/scenegraph/shaders_ng/styledtext_a.frag b/src/quick/scenegraph/shaders_ng/styledtext_a.frag
index 62e162c851..939f657dba 100644
--- a/src/quick/scenegraph/shaders_ng/styledtext_a.frag
+++ b/src/quick/scenegraph/shaders_ng/styledtext_a.frag
@@ -8,8 +8,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/textmask.frag b/src/quick/scenegraph/shaders_ng/textmask.frag
index ed8da4cd30..07dcc20ccd 100644
--- a/src/quick/scenegraph/shaders_ng/textmask.frag
+++ b/src/quick/scenegraph/shaders_ng/textmask.frag
@@ -6,8 +6,8 @@ layout(location = 0) out vec4 fragColor;
 layout(binding = 1) uniform sampler2D _qt_texture;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
diff --git a/src/quick/scenegraph/shaders_ng/textmask.vert b/src/quick/scenegraph/shaders_ng/textmask.vert
index e0b3c01bce..4c354ae810 100644
--- a/src/quick/scenegraph/shaders_ng/textmask.vert
+++ b/src/quick/scenegraph/shaders_ng/textmask.vert
@@ -6,8 +6,8 @@ layout(location = 1) in vec2 tCoord;
 layout(location = 0) out vec2 sampleCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 modelViewMatrix;
-    mat4 projectionMatrix;
+    vec4 modelViewMatrix[4];
+    vec4 projectionMatrix[4];
     vec4 color;
     vec2 textureScale;
     float dpr;
@@ -18,6 +18,6 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
      sampleCoord = tCoord * ubuf.textureScale;
-     vec4 xformed = ubuf.modelViewMatrix * vCoord;
-     gl_Position = ubuf.projectionMatrix * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
+     vec4 xformed = mat4(ubuf.modelViewMatrix[0],ubuf.modelViewMatrix[1],ubuf.modelViewMatrix[2],ubuf.modelViewMatrix[3]) * vCoord;
+     gl_Position = mat4(ubuf.projectionMatrix[0],ubuf.projectionMatrix[1],ubuf.projectionMatrix[2],ubuf.projectionMatrix[3]) * vec4(floor(xformed.xyz * ubuf.dpr + 0.5) / ubuf.dpr, xformed.w);
 }
diff --git a/src/quick/scenegraph/shaders_ng/texture.frag b/src/quick/scenegraph/shaders_ng/texture.frag
index bd22f817e0..10db31e9b7 100644
--- a/src/quick/scenegraph/shaders_ng/texture.frag
+++ b/src/quick/scenegraph/shaders_ng/texture.frag
@@ -4,7 +4,7 @@ layout(location = 0) in vec2 qt_TexCoord;
 layout(location = 0) out vec4 fragColor;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
     float opacity;
 } ubuf;
 
diff --git a/src/quick/scenegraph/shaders_ng/texture.vert b/src/quick/scenegraph/shaders_ng/texture.vert
index 537852d2bd..df63a9d069 100644
--- a/src/quick/scenegraph/shaders_ng/texture.vert
+++ b/src/quick/scenegraph/shaders_ng/texture.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec2 qt_VertexTexCoord;
 layout(location = 0) out vec2 qt_TexCoord;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 qt_Matrix;
+    vec4 qt_Matrix[4];
     float opacity;
 } ubuf;
 
@@ -15,5 +15,5 @@ out gl_PerVertex { vec4 gl_Position; };
 void main()
 {
     qt_TexCoord = qt_VertexTexCoord;
-    gl_Position = ubuf.qt_Matrix * qt_VertexPosition;
+    gl_Position = mat4(ubuf.qt_Matrix[0],ubuf.qt_Matrix[1],ubuf.qt_Matrix[2],ubuf.qt_Matrix[3]) * qt_VertexPosition;
 }
diff --git a/src/quick/scenegraph/shaders_ng/vertexcolor.vert b/src/quick/scenegraph/shaders_ng/vertexcolor.vert
index bfb9a95073..8b18c6489a 100644
--- a/src/quick/scenegraph/shaders_ng/vertexcolor.vert
+++ b/src/quick/scenegraph/shaders_ng/vertexcolor.vert
@@ -6,7 +6,7 @@ layout(location = 1) in vec4 vertexColor;
 layout(location = 0) out vec4 color;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
+    vec4 matrix[4];
     float opacity;
 } ubuf;
 
@@ -14,6 +14,6 @@ out gl_PerVertex { vec4 gl_Position; };
 
 void main()
 {
-    gl_Position = ubuf.matrix * vertexCoord;
+    gl_Position = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * vertexCoord;
     color = vertexColor * ubuf.opacity;
 }
diff --git a/src/quick/scenegraph/shaders_ng/visualization.frag b/src/quick/scenegraph/shaders_ng/visualization.frag
index 29f718fe5d..08387fa664 100644
--- a/src/quick/scenegraph/shaders_ng/visualization.frag
+++ b/src/quick/scenegraph/shaders_ng/visualization.frag
@@ -4,8 +4,8 @@ layout(location = 0) in vec2 pos;
 layout(location = 0) out vec4 fragColor;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
-    mat4 rotation;
+    vec4 matrix[4];
+    vec4 rotation[4];
     vec4 color;
     float pattern;
     int projection;
diff --git a/src/quick/scenegraph/shaders_ng/visualization.vert b/src/quick/scenegraph/shaders_ng/visualization.vert
index e2447948c2..e7382f5e79 100644
--- a/src/quick/scenegraph/shaders_ng/visualization.vert
+++ b/src/quick/scenegraph/shaders_ng/visualization.vert
@@ -4,8 +4,8 @@ layout(location = 0) in vec4 v;
 layout(location = 0) out vec2 pos;
 
 layout(std140, binding = 0) uniform buf {
-    mat4 matrix;
-    mat4 rotation;
+    vec4 matrix[4];
+    vec4 rotation[4];
     vec4 color;
     float pattern;
     int projection;
@@ -15,10 +15,10 @@ out gl_PerVertex { vec4 gl_Position; float gl_PointSize; };
 
 void main()
 {
-    vec4 p = ubuf.matrix * v;
+    vec4 p = mat4(ubuf.matrix[0],ubuf.matrix[1],ubuf.matrix[2],ubuf.matrix[3]) * v;
 
     if (ubuf.projection != 0) {
-        vec4 proj = ubuf.rotation * p;
+        vec4 proj = mat4(ubuf.rotation[0],ubuf.rotation[1],ubuf.rotation[2],ubuf.rotation[3]) * p;
         gl_Position = vec4(proj.x, proj.y, 0, proj.z);
     } else {
         gl_Position = p;

From 029a79057661e85a22e7786766eabd706ace6a99 Mon Sep 17 00:00:00 2001
From: Funing Wang <funing@google.com>
Date: Wed, 1 Feb 2023 21:59:57 +0000
Subject: [PATCH] More removal of six.py

Bug: chromium:1408280
Change-Id: I8a6c07134433d983086db0b1ee55b3694dad9bf9
Reviewed-on: https://chromium-review.googlesource.com/c/catapult/+/4214427
Reviewed-by: Wenbin Zhang <wenbinzhang@google.com>
Commit-Queue: Funing Wang <funing@google.com>
---
Upstream-Status: Backport [d2c4c24ea616b804869781934eb00ccdfce022b5 http://gpro.lge.com/c/webosose/chromium108/+/389014 More removal of six.py]

 .../py_vulcanize/py_vulcanize/fake_fs.py      | 19 +++-----------
 .../py_vulcanize/html_module_unittest.py      | 12 ++++-----
 .../py_vulcanize/parse_html_deps.py           | 26 +++++++------------
 .../py_vulcanize/resource_loader.py           | 10 +++----
 4 files changed, 22 insertions(+), 45 deletions(-)

diff --git a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/fake_fs.py b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/fake_fs.py
index f4e3512b39..a26b92fc86 100644
--- a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/fake_fs.py
+++ b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/fake_fs.py
@@ -6,16 +6,14 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
+import builtins
 import codecs
 import collections
 import os
 import six
-import sys
 
 from io import BytesIO
 
-if six.PY3:
-  import builtins
 
 class WithableStringIO(six.StringIO):
 
@@ -43,10 +41,7 @@ class FakeFS(object):
 
     self._bound = False
     self._real_codecs_open = codecs.open
-    if six.PY3:
-      self._real_open = builtins.open
-    else:
-      self._real_open = sys.modules['__builtin__'].open
+    self._real_open = builtins.open
 
     self._real_abspath = os.path.abspath
     self._real_exists = os.path.exists
@@ -63,10 +58,7 @@ class FakeFS(object):
   def Bind(self):
     assert not self._bound
     codecs.open = self._FakeCodecsOpen
-    if six.PY3:
-      builtins.open = self._FakeOpen
-    else:
-      sys.modules['__builtin__'].open = self._FakeOpen
+    builtins.open = self._FakeOpen
     os.path.abspath = self._FakeAbspath
     os.path.exists = self._FakeExists
     os.walk = self._FakeWalk
@@ -76,10 +68,7 @@ class FakeFS(object):
   def Unbind(self):
     assert self._bound
     codecs.open = self._real_codecs_open
-    if six.PY3:
-      builtins.open = self._real_open
-    else:
-      sys.modules['__builtin__'].open = self._real_open
+    builtins.open = self._real_open
     os.path.abspath = self._real_abspath
     os.path.exists = self._real_exists
     os.walk = self._real_walk
diff --git a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/html_module_unittest.py b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/html_module_unittest.py
index b6d9f93a5e..25de94f5e8 100644
--- a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/html_module_unittest.py
+++ b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/html_module_unittest.py
@@ -5,7 +5,6 @@
 from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
-from io import BytesIO
 
 import os
 import unittest
@@ -18,9 +17,9 @@ from py_vulcanize import parse_html_deps
 from py_vulcanize import project as project_module
 from py_vulcanize import resource
 from py_vulcanize import resource_loader as resource_loader
+import functools
 import six
-if six.PY3:
-  import functools
+
 
 
 class ResourceWithFakeContents(resource.Resource):
@@ -59,10 +58,9 @@ class FakeLoader(object):
       return None
 
     # Sort by length. Longest match wins.
-    if six.PY3:
-      sorted(candidate_paths, key=functools.cmp_to_key(lambda x, y: len(x) - len(y)), reverse=True)
-    else:
-      candidate_paths.sort(lambda x, y: len(x) - len(y))
+    sorted(candidate_paths,
+           key=functools.cmp_to_key(lambda x, y: len(x) - len(y)), reverse=True)
+
     longest_candidate = candidate_paths[-1]
 
     return ResourceWithFakeContents(
diff --git a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/parse_html_deps.py b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/parse_html_deps.py
index 5fee177425..9c462672f7 100644
--- a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/parse_html_deps.py
+++ b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/parse_html_deps.py
@@ -26,26 +26,20 @@ def _InitBeautifulSoup():
   catapult_path = os.path.abspath(
       os.path.join(os.path.dirname(__file__),
                    os.path.pardir, os.path.pardir, os.path.pardir))
-  if six.PY3:
-    # Filter out warnings related to soupsieve from beautifulsoup.
-    # We do not need it and it generates unnecessary warnings during build.
-    warnings.filterwarnings('ignore', message='.*soupsieve.*',
-        category=UserWarning, module='bs4')
-    bs_path = os.path.join(catapult_path, 'third_party', 'beautifulsoup4-4.9.3', 'py3k')
-  else:
-    bs_path = os.path.join(catapult_path, 'third_party', 'beautifulsoup4')
+  # Filter out warnings related to soupsieve from beautifulsoup.
+  # We do not need it and it generates unnecessary warnings during build.
+  warnings.filterwarnings('ignore', message='.*soupsieve.*',
+      category=UserWarning, module='bs4')
+  bs_path = os.path.join(catapult_path, 'third_party', 'beautifulsoup4-4.9.3',
+                         'py3k')
   _AddToPathIfNeeded(bs_path)
 
-  if six.PY3:
-    html5lib_path = os.path.join(catapult_path, 'third_party', 'html5lib-1.1')
-  else:
-    html5lib_path = os.path.join(catapult_path, 'third_party', 'html5lib-python')
+  html5lib_path = os.path.join(catapult_path, 'third_party', 'html5lib-1.1')
   _AddToPathIfNeeded(html5lib_path)
 
-  if six.PY3:
-    webencodings_path = os.path.join(
-        catapult_path, 'third_party', 'webencodings-0.5.1')
-    _AddToPathIfNeeded(webencodings_path)
+  webencodings_path = os.path.join(
+      catapult_path, 'third_party', 'webencodings-0.5.1')
+  _AddToPathIfNeeded(webencodings_path)
 
   six_path = os.path.join(catapult_path, 'third_party', 'six')
   _AddToPathIfNeeded(six_path)
diff --git a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/resource_loader.py b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/resource_loader.py
index 853069515c..652fa6c1b9 100644
--- a/src/third_party/catapult/common/py_vulcanize/py_vulcanize/resource_loader.py
+++ b/src/third_party/catapult/common/py_vulcanize/py_vulcanize/resource_loader.py
@@ -6,11 +6,9 @@
 
 from __future__ import absolute_import
 import codecs
+import functools
 import os
 import six
-import sys
-if six.PY3:
-  import functools
 
 from py_vulcanize import module
 from py_vulcanize import style_sheet as style_sheet_module
@@ -64,10 +62,8 @@ class ResourceLoader(object):
       return None
 
     # Sort by length. Longest match wins.
-    if six.PY3:
-      sorted(candidate_paths, key=functools.cmp_to_key(lambda x, y: len(x) - len(y)), reverse=True)
-    else:
-      candidate_paths.sort(lambda x, y: len(x) - len(y))
+    sorted(candidate_paths,
+           key=functools.cmp_to_key(lambda x, y: len(x) - len(y)), reverse=True)
     longest_candidate = candidate_paths[-1]
     return resource_module.Resource(longest_candidate, absolute_path, binary)
 

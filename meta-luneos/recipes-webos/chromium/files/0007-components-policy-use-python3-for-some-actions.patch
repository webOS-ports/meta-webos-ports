From 97343907faf8c27c2855d284da226bb6d8272bb0 Mon Sep 17 00:00:00 2001
From: Takuto Ikuta <tikuta@chromium.org>
Date: Wed, 2 Jun 2021 08:59:02 +0000
Subject: [PATCH] components/policy: use python3 for some actions

Bug: 1205599
Change-Id: If014a2f9b42d689414915e62bff3b34aaac2205a
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2932303
Commit-Queue: Julian Pastarmov <pastarmovj@chromium.org>
Auto-Submit: Takuto Ikuta <tikuta@chromium.org>
Reviewed-by: Julian Pastarmov <pastarmovj@chromium.org>
Cr-Commit-Position: refs/heads/master@{#888372}
---
 src/components/policy/BUILD.gn                   |  6 ++----
 .../policy/tools/generate_policy_source.py       | 16 +++++++++++++---
 2 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/src/components/policy/BUILD.gn b/src/components/policy/BUILD.gn
index cff5243301..f3677133fd 100644
--- a/src/components/policy/BUILD.gn
+++ b/src/components/policy/BUILD.gn
@@ -99,8 +99,7 @@ constants_source_path = "$target_gen_dir/policy_constants.cc"
 app_restrictions_path = "$target_gen_dir/app_restrictions.xml"
 risk_tag_header_path = "$target_gen_dir/risk_tag.h"
 
-# TODO(crbug.com/1112471): Get this to run cleanly under Python 3.
-python2_action("policy_code_generate") {
+action("policy_code_generate") {
   script = "tools/generate_policy_source.py"
   chrome_version_abspath = "//chrome/VERSION"
   chrome_version_path = rebase_path(chrome_version_abspath, root_build_dir)
@@ -144,8 +143,7 @@ python2_action("policy_code_generate") {
   ]
 }
 
-# TODO(crbug.com/1112471): Get this to run cleanly under Python 3.
-python2_action("full_runtime_code_generate") {
+action("full_runtime_code_generate") {
   script = "tools/generate_policy_source.py"
   chrome_version_abspath = "//chrome/VERSION"
   chrome_version_path = rebase_path(chrome_version_abspath, root_build_dir)
diff --git a/src/components/policy/tools/generate_policy_source.py b/src/components/policy/tools/generate_policy_source.py
index 154b624322..74c4ad3d96 100755
--- a/src/components/policy/tools/generate_policy_source.py
+++ b/src/components/policy/tools/generate_policy_source.py
@@ -16,10 +16,20 @@ from argparse import ArgumentParser
 from collections import namedtuple
 from collections import OrderedDict
 from functools import partial
+import ast
+import os
 import json
 import re
 import sys
 import textwrap
+
+sys.path.insert(
+    0,
+    os.path.join(os.path.dirname(__file__), os.pardir, os.pardir, os.pardir,
+                 'third_party', 'six', 'src'))
+
+import six
+
 from xml.sax.saxutils import escape as xml_escape
 
 if sys.version_info.major == 2:
@@ -374,7 +384,7 @@ def main():
 
   def GenerateFile(path, writer, sorted=False, xml=False):
     if path:
-      with open(path, 'w') as f:
+      with codecs.open(path, 'w', encoding='utf-8') as f:
         _OutputGeneratedWarningHeader(f, template_file_name, xml)
         writer(sorted and sorted_policy_details or policy_details,
                sorted and sorted_policy_atomic_groups or policy_atomic_groups,
@@ -451,7 +461,7 @@ COMMENT_WRAPPER.replace_whitespace = False
 
 # Writes a comment, each line prefixed by // and wrapped to 80 spaces.
 def _OutputComment(f, comment):
-  for line in comment.splitlines():
+  for line in six.ensure_text(comment).splitlines():
     if len(line) == 0:
       f.write('//')
     else:
@@ -462,7 +472,7 @@ def _OutputComment(f, comment):
 def _LoadJSONFile(json_file):
   with open(json_file, 'r') as f:
     text = f.read()
-  return eval(text)
+  return ast.literal_eval(text)
 
 
 #------------------ policy constants header ------------------------#

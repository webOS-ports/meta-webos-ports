From d778108df2566133fcf65a66870f125cf76acdb8 Mon Sep 17 00:00:00 2001
From: Takuto Ikuta <tikuta@chromium.org>
Date: Tue, 18 May 2021 12:43:40 +0000
Subject: [PATCH] blink: use python3 for instrumentation_probes

Made generated output deterministic.

I confirmed that with following commands.
```
$ rm out/Release/gen/third_party/blink/renderer/core/core_probe*
$ autoninja -C out/Release/ instrumentation_probes
...
$ sha1sum out/Release/gen/third_party/blink/renderer/core/core_probe*
08c191e0d2a54908bb1feeec083ef3aebca99a1b  out/Release/gen/third_party/blink/renderer/core/core_probes_impl.cc
dd860b7a409f5d0053757ce519906aefb7c221e6  out/Release/gen/third_party/blink/renderer/core/core_probe_sink.h
e68863d8eca1cf43bac5cf0f2709668e90047430  out/Release/gen/third_party/blink/renderer/core/core_probes_inl.h
```

Fixed: 1205616
Bug: 1194277
Change-Id: I0fdf74220a5047a6cc76f9a8b2b31041b1743f19
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2902952
Commit-Queue: Nico Weber <thakis@chromium.org>
Auto-Submit: Takuto Ikuta <tikuta@chromium.org>
Reviewed-by: Nico Weber <thakis@chromium.org>
Cr-Commit-Position: refs/heads/master@{#883916}
---
 .../templates/instrumenting_probes_impl.cc.tmpl    | 14 +++++++-------
 .../templates/instrumenting_probes_inl.h.tmpl      |  2 +-
 .../build/scripts/templates/probe_sink.h.tmpl      | 10 +++++-----
 src/third_party/blink/renderer/core/probe/BUILD.gn |  4 +---
 4 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_impl.cc.tmpl b/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_impl.cc.tmpl
index e703c4eed1..f879377e3a 100644
--- a/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_impl.cc.tmpl
+++ b/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_impl.cc.tmpl
@@ -7,11 +7,11 @@
 
 {% set sink_class = (name | to_singular) + "Sink" %}
 {% set sink_class_header = (header | to_singular) + "_sink" %}
-{% for file in files %}
+{% for file in files|sort %}
 #include "{{output_path_in_gen_dir}}{{file.name}}_inl.h"
 {% endfor %}
 #include "{{output_path_in_gen_dir}}{{sink_class_header}}.h"
-{% for agent in agents %}
+{% for agent in agents|sort %}
 #include "{{agent | agent_name_to_include}}"
 {% endfor %}
 #include "third_party/blink/renderer/platform/wtf/threading_primitives.h"
@@ -34,13 +34,13 @@ std::atomic<unsigned> {{sink_class}}::s_existingAgents;
 
 {{sink_class}}::~{{sink_class}}() {
   MutexLocker lock(AgentCountMutex());
-{% for agent in agents %}
+{% for agent in agents|sort %}
   if (Has{{agent}}s() && --s_numSinksWith{{agent}} == 0)
     s_existingAgents &= ~k{{agent}};
 {% endfor %}
 }
 
-{% for agent in agents %}
+{% for agent in agents|sort %}
 {% set class_name = agent | agent_name_to_class %}
 {% set getter_name = agent | to_snake_case %}
 
@@ -80,7 +80,7 @@ void {{sink_class}}::Remove{{agent}}({{class_name}}* agent) {
 
 void {{sink_class}}::Trace(Visitor* visitor) const
 {
-{% for agent in agents %}
+{% for agent in agents|sort %}
 {% set getter_name = agent | to_snake_case %}
   visitor->Trace({{getter_name}}s_);
 {% endfor %}
@@ -98,7 +98,7 @@ namespace probe {
 {% set agent_probe_name = method_name(common_name or probe.name) %}
   if (!probe_sink)
     return;
-{% for agent in probe.agents %}
+{% for agent in probe.agents|sort %}
 {% set class_name = agent | agent_name_to_class %}
   if (probe_sink->Has{{agent}}s()) {
     for ({{class_name}}* agent : probe_sink->{{class_name}}s())
@@ -107,7 +107,7 @@ namespace probe {
 {% endfor %}
 {% endmacro -%}
 
-{% for file in files %}
+{% for file in files|sort %}
 {% for probe in file.declarations %}
 {% if probe.is_scoped %}
 {{probe.name}}::{{probe.name}}({{ params_list(probe) }}) :
diff --git a/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_inl.h.tmpl b/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_inl.h.tmpl
index c10b8a23c2..e85b68ca17 100644
--- a/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_inl.h.tmpl
+++ b/src/third_party/blink/renderer/build/scripts/templates/instrumenting_probes_inl.h.tmpl
@@ -60,7 +60,7 @@ class {{export_symbol}} {{probe.name}} : public ProbeBase {
 {{export_symbol}} void {{probe.name}}Impl({{ params_decl(probe) }});
 inline void {{probe.name}}({{params_list(probe)}}) {
   if (!{{sink_class}}::HasAgentsGlobal(
-    {%- for agent in probe.agents %}
+    {%- for agent in probe.agents|sort %}
     {% if not loop.first %} | {% endif -%}
     {{sink_class}}::k{{agent}}
     {%- endfor %}))
diff --git a/src/third_party/blink/renderer/build/scripts/templates/probe_sink.h.tmpl b/src/third_party/blink/renderer/build/scripts/templates/probe_sink.h.tmpl
index 0cc0ba0d2a..28c3591266 100644
--- a/src/third_party/blink/renderer/build/scripts/templates/probe_sink.h.tmpl
+++ b/src/third_party/blink/renderer/build/scripts/templates/probe_sink.h.tmpl
@@ -19,7 +19,7 @@
 
 namespace blink {
 
-{% for agent in agents %}
+{% for agent in agents|sort %}
 class {{ agent | agent_name_to_class }};
 {% endfor %}
 
@@ -27,7 +27,7 @@ class {{export_symbol}} {{sink_class}} final : public GarbageCollected<{{sink_cl
 
  public:
   enum AgentType : unsigned {
-{% for agent in agents %}
+{% for agent in agents|sort %}
     k{{agent}} = 1u << {{loop.index0}},
 {% endfor %}
   };
@@ -39,7 +39,7 @@ class {{export_symbol}} {{sink_class}} final : public GarbageCollected<{{sink_cl
 
   void Trace(Visitor*) const;
 
-{% for agent in agents %}
+{% for agent in agents|sort %}
 {% set class_name = agent | agent_name_to_class %}
 {% set getter_name = agent | to_snake_case %}
   bool Has{{agent}}s() const { return !{{getter_name}}s_.IsEmpty(); }
@@ -54,7 +54,7 @@ class {{export_symbol}} {{sink_class}} final : public GarbageCollected<{{sink_cl
   }
 
  private:
-{% for agent in agents %}
+{% for agent in agents|sort %}
 {% set class_name = agent | agent_name_to_class %}
 {% set getter_name = agent | to_snake_case %}
   HeapListHashSet<Member<{{class_name}}>> {{getter_name}}s_;
@@ -63,7 +63,7 @@ class {{export_symbol}} {{sink_class}} final : public GarbageCollected<{{sink_cl
   // Number of sinks with an enabled agent of each type, used to keep
   // |s_existingAgents| up to date.
   // Access must be guarded by AgentCountMutex in the source file.
-{% for agent in agents %}
+{% for agent in agents|sort %}
   static unsigned s_numSinksWith{{agent}};
 {% endfor %}
 
diff --git a/src/third_party/blink/renderer/core/probe/BUILD.gn b/src/third_party/blink/renderer/core/probe/BUILD.gn
index 8283599fd4..6944d32431 100644
--- a/src/third_party/blink/renderer/core/probe/BUILD.gn
+++ b/src/third_party/blink/renderer/core/probe/BUILD.gn
@@ -2,11 +2,9 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-import("//build/config/python.gni")
 import("//third_party/blink/renderer/core/core.gni")
 
-# TODO(crbug.com/1194277): Investigate non-determinism in Py3 builds.
-python2_action("instrumentation_probes") {
+action("instrumentation_probes") {
   script = "../../build/scripts/make_instrumenting_probes.py"
 
   inputs = [

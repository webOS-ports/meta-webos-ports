From af2fbbf263ccee8e30c7103bb83edd267e55c47f Mon Sep 17 00:00:00 2001
From: Andrew Grieve <agrieve@chromium.org>
Date: Thu, 20 May 2021 14:06:05 +0000
Subject: [PATCH] Remove run_under_python2 option from grit_rule.gni

Bug: 1205591
Change-Id: I2c4b1a6964f6636b6809019b0d9e13f6273671d7
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2903587
Reviewed-by: Nico Weber <thakis@chromium.org>
Commit-Queue: Andrew Grieve <agrieve@chromium.org>
Cr-Commit-Position: refs/heads/master@{#885005}
---
 src/tools/grit/grit/format/gzip_string.py |  2 +
 src/tools/grit/grit_rule.gni              | 49 +++++++----------------
 2 files changed, 17 insertions(+), 34 deletions(-)

diff --git a/src/tools/grit/grit/format/gzip_string.py b/src/tools/grit/grit/format/gzip_string.py
index 3cd17185c9..002ce43d4a 100644
--- a/src/tools/grit/grit/format/gzip_string.py
+++ b/src/tools/grit/grit/format/gzip_string.py
@@ -37,6 +37,8 @@ def GzipString(data):
   # not have --rsyncable. If used over GzipStringRsyncable, the primary
   # difference of this function's compression will be larger updates every time
   # a compressed resource is changed.
+  if isinstance(data, str):
+    data = data.encode('utf8')
   gzip_output = io.BytesIO()
   with gzip.GzipFile(mode='wb', compresslevel=9, fileobj=gzip_output,
                      mtime=0) as gzip_file:
diff --git a/src/tools/grit/grit_rule.gni b/src/tools/grit/grit_rule.gni
index 8a87ce6d24..dfa20aff6c 100644
--- a/src/tools/grit/grit_rule.gni
+++ b/src/tools/grit/grit_rule.gni
@@ -67,11 +67,6 @@
 #   configs (optional)
 #       List of additional configs to be applied to the generated target.
 #
-#   run_under_python2 (optional)
-#       If true, this is always run under Python2; if false (the default),
-#       will be run under whatever script_executable actually is.
-#       TODO(crbug.com/1112471): Find all users of this and get them to
-#       run cleanly under Python3, then remove this option.
 #   deps  (optional)
 #   testonly (optional)
 #   visibility  (optional)
@@ -144,22 +139,8 @@ template("grit") {
 
   _grit_custom_target = target_name + "_grit"
   action(_grit_custom_target) {
-    # TODO(crbug.com/1112471): Remove the 'true' branch so that we can start
-    # running *some* grit invocations under python3, and then get them
-    # all to work under python3.
-    if ((defined(invoker.run_under_python2) && invoker.run_under_python2) ||
-        true) {
-      script = "//build/util/python2_action.py"
-      args = [ rebase_path("//tools/grit/grit.py", root_build_dir) ]
-      inputs = [
-        "//tools/grit/grit.py",
-        invoker.source,
-      ]
-    } else {
-      script = "//tools/grit/grit.py"
-      args = []
-      inputs = [ invoker.source ]
-    }
+    script = "//tools/grit/grit.py"
+    inputs = [ invoker.source ]
 
     testonly = defined(invoker.testonly) && invoker.testonly
 
@@ -200,19 +181,19 @@ template("grit") {
       inputs += rebase_path(_rel_inputs, ".", root_build_dir)
     }
 
-    args += [
-              "-i",
-              _rebased_source_path,
-              "build",
-              "-o",
-              rebase_path(_output_dir, root_build_dir),
-              "--depdir",
-              ".",
-              "--depfile",
-              rebase_path(depfile, root_build_dir),
-              "--write-only-new=1",
-              "--depend-on-stamp",
-            ] + _grit_flags
+    args = [
+             "-i",
+             _rebased_source_path,
+             "build",
+             "-o",
+             rebase_path(_output_dir, root_build_dir),
+             "--depdir",
+             ".",
+             "--depfile",
+             rebase_path(depfile, root_build_dir),
+             "--write-only-new=1",
+             "--depend-on-stamp",
+           ] + _grit_flags
 
     # Add brotli executable if using brotli.
     if (defined(invoker.use_brotli) && invoker.use_brotli) {

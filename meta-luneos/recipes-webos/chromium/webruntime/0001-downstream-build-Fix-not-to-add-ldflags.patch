From b8e53bc243fc0fe17463953c429fe07c086072c1 Mon Sep 17 00:00:00 2001
From: Youngsoo Choi <youngsoo.choi@lge.com>
Date: Wed, 10 Jul 2019 15:21:39 -0700
Subject: [PATCH] [downstream][build] Fix not to add ldflags for
 target on host build

:Release Notes:
Fix not to add ldflags for target on host build.

:Detailed Notes:
Since qemux86_64 build has same CPU architecture for host machine and target machine,
there was some conflict when building executables for host. (ex. torque)
This patch disables not to add ldflags which made conflict when building
executables for host machine.

:Testing Performed:
Build succeed

:QA Notes:

:Issues Addressed:

Change-Id: Id70dcd48d0ed11967b192c9241c22eb510098e8c
Reviewed-on: http://gpro.lge.com/247551
Reviewed-by: Lokesh Kumar Goel <lokeshkumar.goel@lge.com>
Tested-by: Lokesh Kumar Goel <lokeshkumar.goel@lge.com>
---
 src/build/config/posix/BUILD.gn | 38 +++++++++++++++++----------------
 1 file changed, 20 insertions(+), 18 deletions(-)

diff --git a/src/build/config/posix/BUILD.gn b/src/build/config/posix/BUILD.gn
index 97113b98d..1f40d4612 100644
--- a/src/build/config/posix/BUILD.gn
+++ b/src/build/config/posix/BUILD.gn
@@ -111,25 +111,27 @@ config("runtime_library") {
     # cflags* will be appended on the compiler command line after
     # 'cflags'."  Because of this, we must set the sysroot flags for
     # all cflags variants instead of using 'cflags' directly.
-    cflags_c += sysroot_flags
-    cflags_cc += sysroot_flags
-    cflags_objc += sysroot_flags
-    cflags_objcc += sysroot_flags
+    if (current_toolchain != host_toolchain) {
+      cflags_c += sysroot_flags
+      cflags_cc += sysroot_flags
+      cflags_objc += sysroot_flags
+      cflags_objcc += sysroot_flags
 
-    # Need to get some linker flags out of the sysroot.
-    ld_paths = exec_script("sysroot_ld_path.py",
-                           [
-                             rebase_path("//build/linux/sysroot_ld_path.sh",
-                                         root_build_dir),
-                             rebase_path(link_sysroot),
-                           ],
-                           "list lines")
-    foreach(ld_path, ld_paths) {
-      ld_path = rebase_path(ld_path, root_build_dir)
-      ldflags += [
-        "-L" + ld_path,
-        "-Wl,-rpath-link=" + ld_path,
-      ]
+      # Need to get some linker flags out of the sysroot.
+      ld_paths = exec_script("sysroot_ld_path.py",
+                             [
+                               rebase_path("//build/linux/sysroot_ld_path.sh",
+                                           root_build_dir),
+                               rebase_path(link_sysroot),
+                             ],
+                             "list lines")
+      foreach(ld_path, ld_paths) {
+        ld_path = rebase_path(ld_path, root_build_dir)
+        ldflags += [
+          "-L" + ld_path,
+          "-Wl,-rpath-link=" + ld_path,
+        ]
+      }
     }
   }
 }
-- 
2.17.1


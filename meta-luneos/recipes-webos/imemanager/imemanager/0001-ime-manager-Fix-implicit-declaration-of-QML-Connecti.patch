From 9d395a7f00f8cd05adc4fc078b1bd2e7cd3e0202 Mon Sep 17 00:00:00 2001
From: Herman van Hazendonk <github.com@herrie.org>
Date: Mon, 30 May 2022 15:14:59 +0200
Subject: [PATCH] ime-manager: Fix implicit declaration of QML Connections

To solve the following types of warnings:

QML Connections: Implicitly defined onFoo properties in Connections are deprecated. Use this syntax instead: function onFoo(<arguments>) { ... }

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
Upstream-Status: Pending

 keyboard-common/BottomArea.qml                |  2 +-
 keyboard-common/LeftFunctionArea.qml          |  2 +-
 keyboard-common/RightFunctionArea.qml         |  2 +-
 maliit-plugin-global/view/LetterButton.qml    |  2 +-
 maliit-plugin-global/view/MiddleLayout.qml    |  2 +-
 maliit-plugin-global/view/NormalKeyboard.qml  |  4 ++--
 maliit-plugin-global/view/NumberButton.qml    |  2 +-
 maliit-plugin-global/view/NumberKeyboard.qml  |  2 +-
 .../view/PredictiveBottom.qml                 |  2 +-
 maliit-plugin-global/view/SymbolButton.qml    |  2 +-
 maliit-plugin-global/view/main.qml            | 24 ++++++++++---------
 11 files changed, 24 insertions(+), 22 deletions(-)

diff --git a/keyboard-common/BottomArea.qml b/keyboard-common/BottomArea.qml
index 857e9cb..50c088e 100755
--- a/keyboard-common/BottomArea.qml
+++ b/keyboard-common/BottomArea.qml
@@ -53,7 +53,7 @@ Item {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (spaceButton.state === "Select"))
                 spaceButton.state = "Focus";
         }
diff --git a/keyboard-common/LeftFunctionArea.qml b/keyboard-common/LeftFunctionArea.qml
index 70988fe..83b81c8 100755
--- a/keyboard-common/LeftFunctionArea.qml
+++ b/keyboard-common/LeftFunctionArea.qml
@@ -362,7 +362,7 @@ Item {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (languageChangeButton.state === "Select"))
                 languageChangeButton.state = "Focus";
             else if (isReleased && (symbolButton.state === "Select"))
diff --git a/keyboard-common/RightFunctionArea.qml b/keyboard-common/RightFunctionArea.qml
index e739b53..ee44f97 100755
--- a/keyboard-common/RightFunctionArea.qml
+++ b/keyboard-common/RightFunctionArea.qml
@@ -175,7 +175,7 @@ Item {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (deleteButton.state === "Select"))
                 deleteButton.state = "Focus";
             else if (isReleased && (enterButton.state === "Select"))
diff --git a/maliit-plugin-global/view/LetterButton.qml b/maliit-plugin-global/view/LetterButton.qml
index ce0552a..40d41a1 100755
--- a/maliit-plugin-global/view/LetterButton.qml
+++ b/maliit-plugin-global/view/LetterButton.qml
@@ -115,7 +115,7 @@ ButtonBase {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (state === "Select"))
                 state = "Focus";
         }
diff --git a/maliit-plugin-global/view/MiddleLayout.qml b/maliit-plugin-global/view/MiddleLayout.qml
index ab3332e..d884e43 100755
--- a/maliit-plugin-global/view/MiddleLayout.qml
+++ b/maliit-plugin-global/view/MiddleLayout.qml
@@ -468,7 +468,7 @@ Item {
             }
             Connections {
                 target: PluginProxy
-                onKeyReleased : {
+                function onKeyReleased() {
                     if (isReleased && predictionMode && (nextButton.state === "Select"))
                         nextButton.state = "Focus";
                 }
diff --git a/maliit-plugin-global/view/NormalKeyboard.qml b/maliit-plugin-global/view/NormalKeyboard.qml
index ec4cbe7..de1b648 100755
--- a/maliit-plugin-global/view/NormalKeyboard.qml
+++ b/maliit-plugin-global/view/NormalKeyboard.qml
@@ -197,13 +197,13 @@ Rectangle {
 
     Connections {
         target: Prediction
-        onActiveChanged: {
+        function onActiveChanged() {
             if (!active) {
                 root.predictionMode = false;
                 root.predictionIndex = 0;
             }
         }
-        onPredictionListChanged: {
+        function onPredictionListChanged() {
             if (predictionMode) {
                 root.predictionIndex = 0;
                 root.drawPredictionLayout();
diff --git a/maliit-plugin-global/view/NumberButton.qml b/maliit-plugin-global/view/NumberButton.qml
index 0e3eb23..6d0c45a 100755
--- a/maliit-plugin-global/view/NumberButton.qml
+++ b/maliit-plugin-global/view/NumberButton.qml
@@ -50,7 +50,7 @@ ButtonBase {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (numberButton.state === "Select"))
                 numberButton.state = "Focus";
         }
diff --git a/maliit-plugin-global/view/NumberKeyboard.qml b/maliit-plugin-global/view/NumberKeyboard.qml
index d4cd6d8..4d54a4f 100755
--- a/maliit-plugin-global/view/NumberKeyboard.qml
+++ b/maliit-plugin-global/view/NumberKeyboard.qml
@@ -212,7 +212,7 @@ Rectangle {
         }
         Connections {
             target: PluginProxy
-            onKeyReleased : {
+            function onKeyReleased() {
                 if (isReleased && (symbolButton.state === "Select"))
                     symbolButton.state = "Focus";
                 else if (isReleased && (deleteButton.state === "Select"))
diff --git a/maliit-plugin-global/view/PredictiveBottom.qml b/maliit-plugin-global/view/PredictiveBottom.qml
index 98d2a05..f546bce 100755
--- a/maliit-plugin-global/view/PredictiveBottom.qml
+++ b/maliit-plugin-global/view/PredictiveBottom.qml
@@ -162,7 +162,7 @@ Item {
             }
             Connections {
                 target: PluginProxy
-                onKeyReleased : {
+                function onKeyReleased() {
                     if (isReleased && constantPrediction && predictionBar.predictionIndex !== -1 && (predictionRepeater.itemAt(predictionBar.predictionIndex).state === "Select")) {
                         predictionRepeater.itemAt(predictionBar.predictionIndex).state = "Focus";
                         predictionBar.predictionIndex = -1;
diff --git a/maliit-plugin-global/view/SymbolButton.qml b/maliit-plugin-global/view/SymbolButton.qml
index 03fb861..40bbd36 100755
--- a/maliit-plugin-global/view/SymbolButton.qml
+++ b/maliit-plugin-global/view/SymbolButton.qml
@@ -30,7 +30,7 @@ ButtonBase {
 
     Connections {
         target: PluginProxy
-        onKeyReleased : {
+        function onKeyReleased() {
             if (isReleased && (state === "Select"))
                 state = "Focus";
         }
diff --git a/maliit-plugin-global/view/main.qml b/maliit-plugin-global/view/main.qml
index dbbfa02..7b06f65 100755
--- a/maliit-plugin-global/view/main.qml
+++ b/maliit-plugin-global/view/main.qml
@@ -299,17 +299,17 @@ Rectangle {
 
     Connections {
         target: PluginProxy
-        onLanguageChanged: {
+        function onLanguageChanged (language) {
             root.label = (langCode === "ko") ? "KOR" : label;
             root.langCode = langCode;
 
             normalKeyboard.setLanguage(language, label, langCode, data);
         }
-        onShowLanguageNotification: {
+        function onShowLanguageNotification () {
             lunaService.showLanguageNotification(label)
         }
 
-        onVisibleChanged: {
+        function onVisibleChanged() {
             if (!visible) {
                 root.reset();
                 if (state === "Normal-Keyboard")
@@ -324,10 +324,10 @@ Rectangle {
             }
         }
 
-        onLanguageCountChanged: {
+        function onLanguageCountChanged(languageCount) {
             normalKeyboard.activateLanguageButton = (languageCount > 1) ? true : false
         }
-        onForceFocusTo: {
+        function onForceFocusTo() {
             switch (label) {
             case "Enter":
                 setFocusToEnter();
@@ -339,21 +339,23 @@ Rectangle {
                 break;
             }
         }
-        onResetRequested: root.reset()
-        onTranslatorChanged: {
+        function onResetRequested() {
+            root.reset();
+        }
+        function onTranslatorChanged(speakLanguage) {
             style.setFontForMenuLocale(PluginProxy.translatorLocale)
             if (speakLanguage == false) return;
             if (inputSource == 0 || visible == false) return; // because reading lang name through toast popup
             ttsService.speakButton(globalStringModel.getStringLangCode(langCode));
         }
-        onCursorVisibleChanged: {
+        function onCursorVisibleChanged() {
             console.warn("IMEManager cursor visible : " + cursorVisible);
             root.pointerVisible = cursorVisible;
             setDefaultFocusOnVirtualKeybaord();
-       }
-       onHidNavKeysPressed: {
+        }
+        function onHidNavKeysPressed: {
             setDefaultFocusOnVirtualKeybaord();
-       }
+        }
     }
 
     function setDefaultFocusOnVirtualKeybaord() {

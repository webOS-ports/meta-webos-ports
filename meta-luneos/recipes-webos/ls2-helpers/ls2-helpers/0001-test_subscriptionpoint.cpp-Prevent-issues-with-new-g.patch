From 02076bdffeca652bf65403da7d2a53bf0e7c2c09 Mon Sep 17 00:00:00 2001
From: Martin Jansa <martin.jansa@lge.com>
Date: Tue, 27 Jun 2017 13:05:11 +0000
Subject: [PATCH] test_subscriptionpoint.cpp: Prevent issues with new gtest

:Release Notes:
This is only temporary change to unblock my builds with Yocto 2.3 Pyro which
contains gtest 1.8.0 instead of older 1.7.0 currently used in master.

:Detailed Notes:
It should be fixed correctly by ls2-helpers owner.

The get() methods return JsonParseContext<T>:
    template<typename T>
    JsonParseContext<T> get(const char* name, T& destination, const std::function<void(const pbnjson::JValue&, T&)>& parserFunc = &parseValueOrDataObject<T>);
on which is then operator bool() called by gtest to evaluate that assert:
    inline operator bool()
    {
        finishParse();
        return !_parser.hasError();
    }
which worked fine with gtest 1.7.0, but with gtest 1.8.0 it fails with;
[ 73%] Building CXX object test/CMakeFiles/test_servicepoint_client.dir/test_servicepoint_client.cpp.o
cd /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/build/test && /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot-native/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-g++    -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/src -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/include/public/ls2-helpers -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/include/glib-2.0 -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/lib/glib-2.0/include -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/include/public -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/src/gtest/include  -march=armv7ve -mthumb -mfpu=neon-vfpv4  -mfloat-abi=hard -mcpu=cortex-a7  --sysroot=/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot  -O2 -pipe -g -feliminate-unused-debug-types -fdebug-prefix-map=/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0=/usr/src/debug/ls2-helpers/1.0.0-4-r0 -fdebug-prefix-map=/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot-native= -fdebug-prefix-map=/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot=  -fvisibility-inlines-hidden  -march=armv7ve -mthumb -mfpu=neon-vfpv4  -mfloat-abi=hard -mcpu=cortex-a7  --sysroot=/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot -std=c++11 -Wall -Wextra -fno-permissive -Wno-unused-parameter -Wno-type-limits, -Wno-missing-field-initializers -Werror=return-type -Werror=reorder -Werror=uninitialized -Wl,--no-undefined -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/include/glib-2.0 -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/lib/glib-2.0/include -DUSE_PMLOG_DECLARATION -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/include/glib-2.0 -I/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/lib/glib-2.0/include -DNDEBUG   -o CMakeFiles/test_servicepoint_client.dir/test_servicepoint_client.cpp.o -c /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/test/test_servicepoint_client.cpp
In file included from /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/test/test_subscriptionpoint.cpp:26:0:
/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/include/gtest/gtest.h: In instantiation of 'testing::AssertionResult::AssertionResult(const T&, typename testing::internal::EnableIf<(! testing::internal::ImplicitlyConvertible<T, testing::AssertionResult>::value)>::type*) [with T = LSHelpers::JsonParseContext<bool>; typename testing::internal::EnableIf<(! testing::internal::ImplicitlyConvertible<T, testing::AssertionResult>::value)>::type = void]':
/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/test/test_subscriptionpoint.cpp:184:3:   required from here
/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/recipe-sysroot/usr/include/gtest/gtest.h:277:25: error: passing 'const LSHelpers::JsonParseContext<bool>' as 'this' argument discards qualifiers [-fpermissive]
       : success_(success) {}
                         ^
In file included from /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/include/public/ls2-helpers/ls2-helpers.hpp:18:0,
                 from /jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/test/test_subscriptionpoint.cpp:27:
/jenkins/mjansa/build-oe-pyro-mcf/BUILD/work/raspberrypi3-oe-linux-gnueabi/ls2-helpers/1.0.0-4-r0/git/include/public/ls2-helpers/jsonparser.hpp:468:9: note:   in call to 'LSHelpers::JsonParseContext<T>::operator bool() [with T = bool]'
  inline operator bool()
         ^~~~~~~~

It seems to be triggered by this change in gtest.h:
   // Used in the EXPECT_TRUE/FALSE(bool_expression).
-  explicit AssertionResult(bool success) : success_(success) {}
+  //
+  // T must be contextually convertible to bool.
+  //
+  // The second parameter prevents this overload from being considered if
+  // the argument is implicitly convertible to AssertionResult. In that case
+  // we want AssertionResult's copy constructor to be used.
+  template <typename T>
+  explicit AssertionResult(
+      const T& success,
+      typename internal::EnableIf<
+          !internal::ImplicitlyConvertible<T, AssertionResult>::value>::type*
+          /*enabler*/ = NULL)
+      : success_(success) {}
+
+  GTEST_DISABLE_MSC_WARNINGS_POP_()
+
+  // Assignment operator.
+  AssertionResult& operator=(AssertionResult other) {
+    swap(other);
+    return *this;
+  }

:Testing Performed:
Only build tested.

:QA Notes:
No change to image.

:Issues Addressed:
[WRP-310] Apply .patch files for hot-fix to corresponding repositories
[WRP-10791] CCC: Various build fixes

Change-Id: I3416d77fa4b5fc3672f5cc4e43fab8c7afe141e5
---
Upstream-Status: Submitted [http://gpro.lge.com/c/webosose/ls2-helpers/+/348043 test_subscriptionpoint.cpp: Prevent issues with new gtest]

 test/test_subscriptionpoint.cpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/test/test_subscriptionpoint.cpp b/test/test_subscriptionpoint.cpp
index aea649d..865c3b8 100644
--- a/test/test_subscriptionpoint.cpp
+++ b/test/test_subscriptionpoint.cpp
@@ -179,12 +179,12 @@ public:
 		LSHelpers::JsonParser replyJSON{reply.getPayload()};
 		EXPECT_TRUE(replyJSON.isValidJson());
 		bool returnValue = false, isSubscribed = false;
-		EXPECT_TRUE(replyJSON.get("returnValue", returnValue));
+		EXPECT_TRUE(replyJSON.get("returnValue", returnValue) != NULL);
 		EXPECT_TRUE(returnValue);
-		EXPECT_TRUE(replyJSON.get("subscribed", isSubscribed));
+		EXPECT_TRUE(replyJSON.get("subscribed", isSubscribed) != NULL);
 		EXPECT_TRUE(isSubscribed);
 		std::string serviceClass;
-		EXPECT_TRUE(replyJSON.get("class", serviceClass));
+		EXPECT_TRUE(replyJSON.get("class", serviceClass) != NULL);
 		EXPECT_EQ(std::string(TEST_CLASS_NAME), serviceClass);
 	}
 
@@ -202,7 +202,7 @@ public:
 		LSHelpers::JsonParser postJSON{reply.getPayload()};
 		EXPECT_TRUE(postJSON.isValidJson());
 		int32_t postId{0};
-		EXPECT_TRUE(postJSON.get("id", postId));
+		EXPECT_TRUE(postJSON.get("id", postId) != NULL);
 		return postId;
 	}
 
@@ -247,12 +247,12 @@ void clientThreadFunc()
 	LSHelpers::JsonParser replyJSON{reply.getPayload()};
 	EXPECT_TRUE(replyJSON.isValidJson());
 	bool returnValue = false, isSubscribed = false;
-	EXPECT_TRUE(replyJSON.get("returnValue", returnValue));
+	EXPECT_TRUE(replyJSON.get("returnValue", returnValue) != NULL);
 	EXPECT_TRUE(returnValue);
-	EXPECT_TRUE(replyJSON.get("subscribed", isSubscribed));
+	EXPECT_TRUE(replyJSON.get("subscribed", isSubscribed) != NULL);
 	EXPECT_TRUE(isSubscribed);
 	std::string serviceClass;
-	EXPECT_TRUE(replyJSON.get("class", serviceClass));
+	EXPECT_TRUE(replyJSON.get("class", serviceClass) != NULL);
 	EXPECT_EQ(std::string(TEST_CLASS_NAME), serviceClass);
 
 	reply = call.get(200);
@@ -260,7 +260,7 @@ void clientThreadFunc()
 	LSHelpers::JsonParser postJSON{reply.getPayload()};
 	EXPECT_TRUE(postJSON.isValidJson());
 	int32_t postId{0};
-	EXPECT_TRUE(postJSON.get("id", postId));
+	EXPECT_TRUE(postJSON.get("id", postId) != NULL);
 	EXPECT_LE(1, postId);
 	++g_counter;
 

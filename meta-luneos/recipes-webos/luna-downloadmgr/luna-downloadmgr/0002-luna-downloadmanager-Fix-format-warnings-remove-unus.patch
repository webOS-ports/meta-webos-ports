From 8a994e02093ba9e37b9b8336e62646a0bf49b64a Mon Sep 17 00:00:00 2001
From: Herman van Hazendonk <github.com@herrie.org>
Date: Wed, 26 Jan 2022 09:58:48 +0100
Subject: [PATCH 2/6] luna-downloadmanager: Fix format warnings & remove unused
 variables and functions

Such as:

/home/herrie/LuneOS/honister/webos-ports/tmp-glibc/work/core2-64-webos-linux/luna-downloadmgr/4.0.0-1+gitAUTOINC+ddab36ffab-r0/git/src/DownloadManager.cpp:2309:16: warning: format '%llu' expects argument of type 'long long unsigned int', but argument 12 has type 'uint64_t' {aka 'long unsigned int'} [-Wformat=]
 2309 |     LOG_DEBUG ("%s: [%s] KB free = %llu, KB total = %llu",__FUNCTION__,path.c_str(),spaceFreeKB,spaceTotalKB);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                       ~~~~~~~~~~~~
      |                                                                                                 |
      |                                                                                                 uint64_t {aka long unsigned int}

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
 src/DownloadManager.cpp  | 18 +++++++++---------
 src/DownloadService.cpp  |  2 +-
 src/DownloadSettings.cpp | 10 +++++-----
 src/DownloadTask.h       |  4 ++--
 src/Utils.cpp            |  2 ++
 5 files changed, 19 insertions(+), 17 deletions(-)

diff --git a/src/DownloadManager.cpp b/src/DownloadManager.cpp
index a10b6c9..4c227de 100644
--- a/src/DownloadManager.cpp
+++ b/src/DownloadManager.cpp
@@ -593,7 +593,7 @@ int DownloadManager::download (const std::string& caller,
         if ((curlSetOptRc = curl_easy_setopt(curlHandle, CURLOPT_RESUME_FROM_LARGE, range.first)) != CURLE_OK )
             LOG_DEBUG ("curl set opt: CURLOPT_RESUME_FROM_LARGE failed [%d]\n",curlSetOptRc);
         else
-            LOG_DEBUG ("Using range: %llu - %llu\n",range.first,range.second);
+            LOG_DEBUG ("Using range: %lu - %lu\n",range.first,range.second);
     }
 
     if (!authToken.empty() && !deviceId.empty()) {
@@ -800,7 +800,7 @@ int DownloadManager::resumeDownload(const DownloadHistoryDb::DownloadHistory& hi
     }
     else
     {
-        LOG_DEBUG ("%s: Will attempt to resume partial file [%s] at pos = %llu",__FUNCTION__,destTempFile.c_str(),completedSize);
+        LOG_DEBUG ("%s: Will attempt to resume partial file [%s] at pos = %lu",__FUNCTION__,destTempFile.c_str(),completedSize);
     }
 
     std::string destFinalFile = "";
@@ -1423,7 +1423,7 @@ size_t DownloadManager::cbHeader(CURL * taskHandle,size_t headerSize,const char
         {
             task->bytesTotal = contentLength + task->bytesCompleted;
             task->setUpdateInterval();
-            LOG_DEBUG ("%s: Fixing up Content-Length to %llu, and this looks like a Resume download",__FUNCTION__,task->bytesTotal);
+            LOG_DEBUG ("%s: Fixing up Content-Length to %lu, and this looks like a Resume download",__FUNCTION__,task->bytesTotal);
         }
         else if (task->bytesCompleted == 0)
         {
@@ -1663,7 +1663,7 @@ size_t DownloadManager::cbReadEvent(CURL* taskHandle,size_t payloadSize,unsigned
 //        return 0; //get out
         _task->m_remove = true;
         task->bytesCompleted = 0;           //file is basically unusable here           TODO: investigate issues with append
-        LOG_DEBUG ("%s: err case: backing up to %llu bytes",__FUNCTION__,task->bytesCompleted);
+        LOG_DEBUG ("%s: err case: backing up to %lu bytes",__FUNCTION__,task->bytesCompleted);
         payloadSize = 0;            //this will kill the transfer when it is returned, below
         goto Return_cbReadEvent;
     }
@@ -1868,7 +1868,7 @@ void DownloadManager::completed_dl(DownloadTask* task)
     }
     else if (task->bytesCompleted < task->bytesTotal) {
         //sizes don't match...maybe a filesys error
-        LOG_DEBUG ("DownloadManager::completed(): Transfer error: bytesCompleted [%llu] < [%llu] bytesTotal...filesys error?",
+        LOG_DEBUG ("DownloadManager::completed(): Transfer error: bytesCompleted [%lu] < [%lu] bytesTotal...filesys error?",
                     task->bytesCompleted,task->bytesTotal);
         LOG_DEBUG ("DownloadManager::completed(): Transfer error: URL failed = %s\n",task->url.c_str());
         resultCode = DOWNLOADMANAGER_COMPLETIONSTATUS_FILECORRUPT;
@@ -2273,12 +2273,12 @@ bool DownloadManager::spaceCheckOnFs(const std::string& path,uint64_t thresholdK
     if (DownloadSettings::instance().dbg_useStatfsFake)
     {
         fs_stats.f_bfree = DownloadSettings::instance().dbg_statfsFakeFreeSizeBytes / fs_stats.f_frsize;
-        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %llu, free blocks simulated to: %llu )",
+        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %lu, free blocks simulated to: %lu )",
                         __FUNCTION__,DownloadSettings::instance().dbg_statfsFakeFreeSizeBytes,fs_stats.f_bfree);
     }
 
     uint64_t kbfree = ( ((uint64_t)(fs_stats.f_bfree) * (uint64_t)(fs_stats.f_frsize)) >> 10);
-    LOG_DEBUG ("%s: [%s] KB free = %llu vs. %llu KB threshold",__FUNCTION__,path.c_str(),kbfree,thresholdKB);
+    LOG_DEBUG ("%s: [%s] KB free = %lu vs. %lu KB threshold",__FUNCTION__,path.c_str(),kbfree,thresholdKB);
     if (kbfree  >= thresholdKB)
         return true;
     return false;
@@ -2300,13 +2300,13 @@ bool DownloadManager::spaceOnFs(const std::string& path,uint64_t& spaceFreeKB,ui
     if (DownloadSettings::instance().dbg_useStatfsFake)
     {
         fs_stats.f_bfree = DownloadSettings::instance().dbg_statfsFakeFreeSizeBytes / fs_stats.f_frsize;
-        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %llu, free blocks simulated to: %llu )",
+        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %lu, free blocks simulated to: %lu )",
                 __FUNCTION__,DownloadSettings::instance().dbg_statfsFakeFreeSizeBytes,fs_stats.f_bfree);
     }
 
     spaceFreeKB = ( ((uint64_t)(fs_stats.f_bavail) * (uint64_t)(fs_stats.f_frsize)) >> 10);
     spaceTotalKB = ( ((uint64_t)(fs_stats.f_blocks) * (uint64_t)(fs_stats.f_frsize)) >> 10);
-    LOG_DEBUG ("%s: [%s] KB free = %llu, KB total = %llu",__FUNCTION__,path.c_str(),spaceFreeKB,spaceTotalKB);
+    LOG_DEBUG ("%s: [%s] KB free = %lu, KB total = %lu",__FUNCTION__,path.c_str(),spaceFreeKB,spaceTotalKB);
     return true;
 }
 
diff --git a/src/DownloadService.cpp b/src/DownloadService.cpp
index 6c442d6..6fab3bd 100644
--- a/src/DownloadService.cpp
+++ b/src/DownloadService.cpp
@@ -1042,7 +1042,7 @@ void DownloadManager::filesystemStatusCheck(const uint64_t& freeSpaceKB,const ui
 {
     uint32_t pctFull = 100 - (uint32_t)(0.5 + ((double)freeSpaceKB / (double)totalSpaceKB) * (double)100.0);
     pctFull = (pctFull <= 100 ? pctFull : 100);
-    LOG_DEBUG ("%s: Percent Full = %u (from free space KB = %llu , total space KB = %llu",__FUNCTION__,pctFull,freeSpaceKB,totalSpaceKB);
+    LOG_DEBUG ("%s: Percent Full = %u (from free space KB = %lu , total space KB = %lu",__FUNCTION__,pctFull,freeSpaceKB,totalSpaceKB);
 
     if (pctFull < DownloadSettings::instance().freespaceLowmarkFullPercent)
         return;
diff --git a/src/DownloadSettings.cpp b/src/DownloadSettings.cpp
index 2b51e1a..345da26 100644
--- a/src/DownloadSettings.cpp
+++ b/src/DownloadSettings.cpp
@@ -61,13 +61,13 @@ static bool localSpaceOnFs(const std::string& path,uint64_t& spaceFreeKB,uint64_
     if (useFake)
     {
         fs_stats.f_bfree = fakeFreeSize / fs_stats.f_frsize;
-        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %llu, free blocks simulated to: %llu )",
+        LOG_DEBUG ("%s: USING FAKE STATFS VALUES! (free bytes specified as: %lu, free blocks simulated to: %lu )",
                 __FUNCTION__,fakeFreeSize,fs_stats.f_bfree);
     }
 
     spaceFreeKB = ( ((uint64_t)(fs_stats.f_bfree) * (uint64_t)(fs_stats.f_frsize)) >> 10);
     spaceTotalKB = ( ((uint64_t)(fs_stats.f_blocks) * (uint64_t)(fs_stats.f_frsize)) >> 10);
-    LOG_DEBUG ("%s: [%s] KB free = %llu, KB total = %llu",__FUNCTION__,path.c_str(),spaceFreeKB,spaceTotalKB);
+    LOG_DEBUG ("%s: [%s] KB free = %lu, KB total = %lu",__FUNCTION__,path.c_str(),spaceFreeKB,spaceTotalKB);
     return true;
 }
 
@@ -257,17 +257,17 @@ void DownloadSettings::load( )
     {
         //make sure the stop mark is sane...it should be: totalSpaceFs - freespaceStopmarkRemainingKBytes > totalSpaceFs * freespaceCriticalmarkFullPercent/100
         uint64_t remainKBat99Pct = (uint64_t)((double)totalSpaceFs * ((double)freespaceCriticalmarkFullPercent/100.0)); //oh good lord, let me count the ways that this leaves room for overflow =(
-        LOG_DEBUG ("Info: space remaining at 99%% for the current filesys is %llu KB",remainKBat99Pct);
+        LOG_DEBUG ("Info: space remaining at 99%% for the current filesys is %lu KB",remainKBat99Pct);
 
         if (remainKBat99Pct < freespaceStopmarkRemainingKBytes)
         {
             freespaceStopmarkRemainingKBytes = remainKBat99Pct;
-            LOG_DEBUG ("(the SpaceRemainStopmarkKB specification was incorrectly set; resetting to the 99%% mark, which is %llu KB)",freespaceStopmarkRemainingKBytes);
+            LOG_DEBUG ("(the SpaceRemainStopmarkKB specification was incorrectly set; resetting to the 99%% mark, which is %lu KB)",freespaceStopmarkRemainingKBytes);
         }
     }
 
 
-    LOG_DEBUG ("Info: Using the following filesystem alert limits: Low = %u%% , Med = %u%% , High = %u%% , Critical = %u%% , stop mark @ %llu KB remaining",
+    LOG_DEBUG ("Info: Using the following filesystem alert limits: Low = %u%% , Med = %u%% , High = %u%% , Critical = %u%% , stop mark @ %lu KB remaining",
             freespaceLowmarkFullPercent,freespaceMedmarkFullPercent,freespaceHighmarkFullPercent,freespaceCriticalmarkFullPercent,freespaceStopmarkRemainingKBytes);
 
     KEY_BOOLEAN("Debug","Fake1x",dbg_fake1xForWan);
diff --git a/src/DownloadTask.h b/src/DownloadTask.h
index 1748cc9..a98641c 100644
--- a/src/DownloadTask.h
+++ b/src/DownloadTask.h
@@ -91,7 +91,7 @@ public:
 
     long getHttpResultCode() { return _httpResultCode;}
     void setHttpResultCode(long httpResultCode) {
-        long tmp = _httpResultCode;
+        //long tmp = _httpResultCode;
         _httpResultCode = httpResultCode;
         return;
     }
@@ -99,7 +99,7 @@ public:
     long getHttpConnectCode() { return _httpConnectCode;}
     void setHttpConnectCode(long httpConnectCode)
     {
-        long tmp = _httpConnectCode;
+        //long tmp = _httpConnectCode;
         _httpConnectCode = httpConnectCode;
         return;
     }
diff --git a/src/Utils.cpp b/src/Utils.cpp
index 586b2c8..ad584b8 100644
--- a/src/Utils.cpp
+++ b/src/Utils.cpp
@@ -54,6 +54,7 @@ bool Utils::make_dir(const std::string &path, bool withParent)
     return false;
 }
 
+/* Disable unused function
 static int rmdir_helper(const char *path, const struct stat *pStat, int flag, struct FTW *ftw)
 {
     switch(flag)
@@ -73,6 +74,7 @@ static int rmdir_helper(const char *path, const struct stat *pStat, int flag, st
 
     return 0;
 }
+*/
 
 void Utils::remove_file(const std::string &path)
 {
-- 
2.37.3.windows.1


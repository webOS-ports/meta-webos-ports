From 22616a0623a59dfa27a6dd7a9fed3811d5a03e82 Mon Sep 17 00:00:00 2001
From: Herrie <Github.com@herrie.org>
Date: Tue, 2 Jan 2024 19:55:20 +0100
Subject: [PATCH] gen-ext-timezones.py: Update for python3

We need to use datetime.now(timezone.utc) instead of datetime.utcnow() as per https://stackoverflow.com/questions/15940280/how-to-get-utc-time-in-python

This solves the issue with UTC offsets being set to 0 incorrectly.

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
Upstream-Status: Pending

 src/gen-ext-timezones.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/gen-ext-timezones.py b/src/gen-ext-timezones.py
index 03c9f6e..3900900 100755
--- a/src/gen-ext-timezones.py
+++ b/src/gen-ext-timezones.py
@@ -18,13 +18,13 @@
 
 import sys, os.path, os
 from getopt import gnu_getopt as getopt
-from datetime import datetime
+from datetime import datetime, timezone
 from itertools import *
 import pytz
 import json
 from abbrevs import abbrevs
 
-standard_year = datetime.utcnow().year
+standard_year = datetime.now(timezone.utc).year
 
 def supplementOmittedTimeZones():
 	# pytz package keeps own timezone list
@@ -75,7 +75,7 @@ def genTimeZones(do_guess = True):
 				(std, summer) = findDST(tz)
 			except Exception as e:
 				sys.stderr.write("Exception: %s\n  Do some magic for %s\n" % (e, tz))
-				std = datetime(datetime.utcnow().year, 1, 1)
+				std = datetime(datetime.now(timezone.utc).year, 1, 1)
 				if tz.dst(std).seconds != 0: summer = std
 				else: summer = None
 			except StopIteration:

From 7768d7720580932851e4785fc678bb50e974009a Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sun, 13 Feb 2022 16:04:35 +0000
Subject: [PATCH] Fix build for Qt 5.15.2

---
 modules/weboscompositor/foreign/webosforeign.cpp |  6 +++++-
 modules/weboscompositor/weboscorecompositor.cpp  |  2 +-
 modules/weboscompositor/webosinputdevice.cpp     |  2 +-
 modules/weboscompositor/weboskeyboard.cpp        | 12 ++++++------
 modules/weboscompositor/weboskeyboard.h          |  2 +-
 modules/weboscompositor/webossurface.cpp         |  3 ++-
 modules/weboscompositor/webossurfaceitem.cpp     |  4 +++-
 modules/weboscompositor/webossurfaceitem.h       |  2 +-
 modules/weboscompositor/weboswaylandseat.cpp     |  5 +++--
 modules/weboscompositor/weboswaylandseat.h       |  2 +-
 10 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/modules/weboscompositor/foreign/webosforeign.cpp b/modules/weboscompositor/foreign/webosforeign.cpp
index d2ad497..7c488e6 100644
--- a/modules/weboscompositor/foreign/webosforeign.cpp
+++ b/modules/weboscompositor/foreign/webosforeign.cpp
@@ -698,6 +698,7 @@ bool WebOSExported::hasSecuredContent()
     if (!m_exportedItem || m_exportedItem->childItems().isEmpty())
         return false;
 
+#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
     foreach(QQuickItem *item, m_exportedItem->childItems()) {
         WebOSSurfaceItem *surfaceItem = qobject_cast<WebOSSurfaceItem *>(item);
         if (surfaceItem && surfaceItem->view()) {
@@ -705,8 +706,11 @@ bool WebOSExported::hasSecuredContent()
                 return true;
         }
     }
-
+    
     return false;
+#else
+    return true;
+#endif
 }
 
 void WebOSExported::setParentOf(QQuickItem *item)
diff --git a/modules/weboscompositor/weboscorecompositor.cpp b/modules/weboscompositor/weboscorecompositor.cpp
index f97b6fb..8e15c2e 100644
--- a/modules/weboscompositor/weboscorecompositor.cpp
+++ b/modules/weboscompositor/weboscorecompositor.cpp
@@ -111,7 +111,7 @@ QWaylandSeat *WebOSCoreCompositorPrivate::seatFor(QInputEvent *inputEvent)
     if (type == QEvent::TouchBegin || type == QEvent::TouchUpdate ||
         type == QEvent::TouchEnd || type == QEvent::TouchCancel) {
         QTouchEvent *touch = static_cast<QTouchEvent *>(inputEvent);
-#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION < QT_VERSION_CHECK(5,15,0)
         if (touch->window())
             return static_cast<WebOSCompositorWindow *>(touch->window())->inputDevice();
 #endif
diff --git a/modules/weboscompositor/webosinputdevice.cpp b/modules/weboscompositor/webosinputdevice.cpp
index 31e7010..cba1dcd 100644
--- a/modules/weboscompositor/webosinputdevice.cpp
+++ b/modules/weboscompositor/webosinputdevice.cpp
@@ -40,7 +40,7 @@ WebOSInputDevice::WebOSInputDevice(QWaylandCompositor *compositor)
         WebOSKeyboard *this_wkeyboard = static_cast<WebOSKeyboard *>(keyboard());
         this_wkeyboard->startGrab(wkeyboard->currentGrab());
     }
-#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION < QT_VERSION_CHECK(5,15,0)
     /* We use multiple keyboard device but use same modifier state */
     updateModifierState(wcompositor->defaultSeat());
 #endif
diff --git a/modules/weboscompositor/weboskeyboard.cpp b/modules/weboscompositor/weboskeyboard.cpp
index 8635a65..70adfd4 100644
--- a/modules/weboscompositor/weboskeyboard.cpp
+++ b/modules/weboscompositor/weboskeyboard.cpp
@@ -80,7 +80,7 @@ void WebOSKeyboard::updateModifierState(uint code, uint32_t state, bool repeat)
         m_grab->modifiers(compositor()->nextSerial(), depressed, latched, locked, grp);
     } else {
         qDebug() << "Updating modifiers for keyboard" << this << depressed << latched << locked << grp;
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
         d->send_modifiers(compositor()->nextSerial(), depressed, latched, locked, grp);
 #else
         d->modifiers(compositor()->nextSerial(), depressed, latched, locked, grp);
@@ -91,7 +91,7 @@ void WebOSKeyboard::updateModifierState(uint code, uint32_t state, bool repeat)
 #endif
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
 void WebOSKeyboard::sendKeyPressEvent(uint code)
 #else
 void WebOSKeyboard::sendKeyPressEvent(uint code, bool repeat)
@@ -102,14 +102,14 @@ void WebOSKeyboard::sendKeyPressEvent(uint code, bool repeat)
         return;
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
     QWaylandKeyboard::sendKeyPressEvent(code);
 #else
     QWaylandKeyboard::sendKeyPressEvent(code, repeat);
 #endif
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
 void WebOSKeyboard::sendKeyReleaseEvent(uint code)
 #else
 void WebOSKeyboard::sendKeyReleaseEvent(uint code, bool repeat)
@@ -120,7 +120,7 @@ void WebOSKeyboard::sendKeyReleaseEvent(uint code, bool repeat)
         return;
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
     QWaylandKeyboard::sendKeyReleaseEvent(code);
 #else
     QWaylandKeyboard::sendKeyReleaseEvent(code, repeat);
@@ -147,7 +147,7 @@ void WebOSKeyboard::endGrab()
     m_grab = nullptr;
     setFocus(m_pendingFocus);
 
-#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION < QT_VERSION_CHECK(5,15,0)
     //Modifier state can be changed during grab status.
     //So send it again.
     d->updateModifierState(this);
diff --git a/modules/weboscompositor/weboskeyboard.h b/modules/weboscompositor/weboskeyboard.h
index cbe942e..1bca8c6 100644
--- a/modules/weboscompositor/weboskeyboard.h
+++ b/modules/weboscompositor/weboskeyboard.h
@@ -44,7 +44,7 @@ public:
     ~WebOSKeyboard() override;
 
     void setFocus(QWaylandSurface *surface) override;
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
     void sendKeyPressEvent(uint code) override;
     void sendKeyReleaseEvent(uint code) override;
 #else
diff --git a/modules/weboscompositor/webossurface.cpp b/modules/weboscompositor/webossurface.cpp
index f222ba0..78e5374 100644
--- a/modules/weboscompositor/webossurface.cpp
+++ b/modules/weboscompositor/webossurface.cpp
@@ -15,7 +15,8 @@
 // SPDX-License-Identifier: Apache-2.0
 
 #include "webossurface.h"
-#include <QtWaylandCompositor/private/qwaylandquicksurface_p.h>
+#include <QtWaylandCompositor/5.15.2/QtWaylandCompositor/private/qwaylandsurface_p.h>
+#include <QtWaylandCompositor/5.15.2/QtWaylandCompositor/private/qwaylandquicksurface_p.h>
 
 class WebOSSurfacePrivate : public QWaylandQuickSurfacePrivate
 {
diff --git a/modules/weboscompositor/webossurfaceitem.cpp b/modules/weboscompositor/webossurfaceitem.cpp
index 792e9b5..e0a9224 100644
--- a/modules/weboscompositor/webossurfaceitem.cpp
+++ b/modules/weboscompositor/webossurfaceitem.cpp
@@ -1461,10 +1461,12 @@ bool WebOSSurfaceItem::hasSecuredContent()
     if (!isMapped())
         return false;
 
+#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
     if (view() && view()->currentBuffer().hasProtectedContent()) {
         qInfo() << "Current view has secured content";
         return true;
     }
+#endif
 
     foreach (WebOSExported *exported, m_exportedElements) {
         if (exported->hasSecuredContent()) {
@@ -1648,7 +1650,7 @@ void WebOSSurfaceItem::setDirectUpdateOnPlane(bool enable)
 }
 
 
-#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION < QT_VERSION_CHECK(5,15,0)
 QSGNode *WebOSSurfaceItem::updatePaintNode(QSGNode *oldNode, UpdatePaintNodeData *data)
 {
     QWaylandBufferRef ref = view()->currentBuffer();
diff --git a/modules/weboscompositor/webossurfaceitem.h b/modules/weboscompositor/webossurfaceitem.h
index 4a56ecb..93195db 100644
--- a/modules/weboscompositor/webossurfaceitem.h
+++ b/modules/weboscompositor/webossurfaceitem.h
@@ -477,7 +477,7 @@ public:
         return (!surface || surface->views().isEmpty()) ? nullptr : qobject_cast<WebOSSurfaceItem*>(surface->views().first()->renderObject());
     }
 
-#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION < QT_VERSION_CHECK(5,15,0)
     QSGNode *updatePaintNode(QSGNode *oldNode, UpdatePaintNodeData *data) override;
 #endif
 
diff --git a/modules/weboscompositor/weboswaylandseat.cpp b/modules/weboscompositor/weboswaylandseat.cpp
index 72f3553..3bbb9d7 100644
--- a/modules/weboscompositor/weboswaylandseat.cpp
+++ b/modules/weboscompositor/weboswaylandseat.cpp
@@ -19,6 +19,7 @@
 
 #include <QtCore/QString>
 #include <QtWaylandCompositor/private/qwaylandseat_p.h>
+#include <QtWaylandCompositor/qwaylandkeymap.h>
 
 WebOSWaylandSeat::WebOSWaylandSeat(QWaylandCompositor *compositor, CapabilityFlags capabilityFlags)
     : QWaylandSeat(compositor, capabilityFlags)
@@ -43,7 +44,7 @@ WebOSWaylandSeat::WebOSWaylandSeat(QWaylandCompositor *compositor, CapabilityFla
 #endif
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
 void WebOSWaylandSeat::setCursorSurface(QWaylandSurface *surface, int hotspotX, int hotspotY, QWaylandClient *qWlClient)
 #else
 void WebOSWaylandSeat::setCursorSurface(QWaylandSurface *surface, int hotspotX, int hotspotY, wl_client *client)
@@ -56,7 +57,7 @@ void WebOSWaylandSeat::setCursorSurface(QWaylandSurface *surface, int hotspotX,
         return;
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
     webos_compositor->setCursorSurface(surface, hotspotX, hotspotY, qWlClient->client());
 #else
     webos_compositor->setCursorSurface(surface, hotspotX, hotspotY, client);
diff --git a/modules/weboscompositor/weboswaylandseat.h b/modules/weboscompositor/weboswaylandseat.h
index 431015d..7a3c5ef 100644
--- a/modules/weboscompositor/weboswaylandseat.h
+++ b/modules/weboscompositor/weboswaylandseat.h
@@ -27,7 +27,7 @@ class WebOSWaylandSeat : public QWaylandSeat
 public:
     WebOSWaylandSeat(QWaylandCompositor *compositor, CapabilityFlags capabilityFlags = DefaultCapabilities);
 
-#if QT_VERSION >= QT_VERSION_CHECK(6,0,0)
+#if QT_VERSION >= QT_VERSION_CHECK(5,15,0)
 public slots:
     void setCursorSurface(QWaylandSurface *surface, int hotspotX, int hotspotY, QWaylandClient *client);
 #else

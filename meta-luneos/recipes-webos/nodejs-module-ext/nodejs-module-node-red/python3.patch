From 4bcf13cb58869902e3d62294af91eeece5c93497 Mon Sep 17 00:00:00 2001
From: Dave Conway-Jones <conway@uk.ibm.com>
Date: Sat, 7 Jul 2018 19:01:14 +0100
Subject: [PATCH] Let nrgpio code work with python 3

(just in case that becomes default)
---
Upstream-Status: Backport [0.19.0 https://github.com/node-red/node-red/commit/4bcf13cb58869902e3d62294af91eeece5c93497]

 nodes/core/hardware/nrgpio.py | 40 ++++++++++++++++-------------------
 1 file changed, 18 insertions(+), 22 deletions(-)

diff --git a/nodes/core/hardware/nrgpio.py b/nodes/core/hardware/nrgpio.py
index 6bbcddbbe..0cde0e4df 100755
--- a/nodes/core/hardware/nrgpio.py
+++ b/nodes/core/hardware/nrgpio.py
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/env python3
 #
 # Copyright JS Foundation and other contributors, http://js.foundation
 #
@@ -23,10 +23,6 @@
 
 bounce = 25;
 
-if sys.version_info >= (3,0):
-    print("Sorry - currently only configured to work with python 2.x")
-    sys.exit(1)
-
 if len(sys.argv) > 2:
     cmd = sys.argv[1].lower()
     pin = int(sys.argv[2])
@@ -34,7 +30,7 @@
     GPIO.setwarnings(False)
 
     if cmd == "pwm":
-        #print "Initialised pin "+str(pin)+" to PWM"
+        #print("Initialised pin "+str(pin)+" to PWM")
         try:
             freq = int(sys.argv[3])
         except:
@@ -54,10 +50,10 @@
                 GPIO.cleanup(pin)
                 sys.exit(0)
             except Exception as ex:
-                print "bad data: "+data
+                print("bad data: "+data)
 
     elif cmd == "buzz":
-        #print "Initialised pin "+str(pin)+" to Buzz"
+        #print("Initialised pin "+str(pin)+" to Buzz")
         GPIO.setup(pin,GPIO.OUT)
         p = GPIO.PWM(pin, 100)
         p.stop()
@@ -76,10 +72,10 @@
                 GPIO.cleanup(pin)
                 sys.exit(0)
             except Exception as ex:
-                print "bad data: "+data
+                print("bad data: "+data)
 
     elif cmd == "out":
-        #print "Initialised pin "+str(pin)+" to OUT"
+        #print("Initialised pin "+str(pin)+" to OUT")
         GPIO.setup(pin,GPIO.OUT)
         if len(sys.argv) == 4:
             GPIO.output(pin,int(sys.argv[3]))
@@ -103,11 +99,11 @@
             GPIO.output(pin,data)
 
     elif cmd == "in":
-        #print "Initialised pin "+str(pin)+" to IN"
+        #print("Initialised pin "+str(pin)+" to IN")
         bounce = float(sys.argv[4])
         def handle_callback(chan):
             sleep(bounce/1000.0)
-            print GPIO.input(chan)
+            print(GPIO.input(chan))
 
         if sys.argv[3].lower() == "up":
             GPIO.setup(pin,GPIO.IN,GPIO.PUD_UP)
@@ -116,7 +112,7 @@ def handle_callback(chan):
         else:
             GPIO.setup(pin,GPIO.IN)
 
-        print GPIO.input(pin)
+        print(GPIO.input(pin))
         GPIO.add_event_detect(pin, GPIO.BOTH, callback=handle_callback, bouncetime=int(bounce))
 
         while True:
@@ -129,7 +125,7 @@ def handle_callback(chan):
                 sys.exit(0)
 
     elif cmd == "byte":
-        #print "Initialised BYTE mode - "+str(pin)+
+        #print("Initialised BYTE mode - "+str(pin)+)
         list = [7,11,13,12,15,16,18,22]
         GPIO.setup(list,GPIO.OUT)
 
@@ -152,7 +148,7 @@ def handle_callback(chan):
                 GPIO.output(list[bit], data & mask)
 
     elif cmd == "borg":
-        #print "Initialised BORG mode - "+str(pin)+
+        #print("Initialised BORG mode - "+str(pin)+)
         GPIO.setup(11,GPIO.OUT)
         GPIO.setup(13,GPIO.OUT)
         GPIO.setup(15,GPIO.OUT)
@@ -190,7 +186,7 @@ def getMouseEvent():
           button = ord( buf[0] ) & pin # mask out just the required button(s)
           if button != oldbutt:  # only send if changed
               oldbutt = button
-              print button
+              print(button)
 
         while True:
             try:
@@ -215,7 +211,7 @@ def getMouseEvent():
                     # type,code,value
                     print("%u,%u" % (code, value))
                 event = file.read(EVENT_SIZE)
-            print "0,0"
+            print("0,0")
             file.close()
             sys.exit(0)
         except:
@@ -225,14 +221,14 @@ def getMouseEvent():
 elif len(sys.argv) > 1:
     cmd = sys.argv[1].lower()
     if cmd == "rev":
-        print GPIO.RPI_REVISION
+        print(GPIO.RPI_REVISION)
     elif cmd == "ver":
-        print GPIO.VERSION
+        print(GPIO.VERSION)
     elif cmd == "info":
-        print GPIO.RPI_INFO
+        print(GPIO.RPI_INFO)
     else:
-        print "Bad parameters - in|out|pwm|buzz|byte|borg|mouse|kbd|ver|info {pin} {value|up|down}"
-        print "  only ver (gpio version) and info (board information) accept no pin parameter."
+        print("Bad parameters - in|out|pwm|buzz|byte|borg|mouse|kbd|ver|info {pin} {value|up|down}")
+        print("  only ver (gpio version) and info (board information) accept no pin parameter.")
 
 else:
-    print "Bad parameters - in|out|pwm|buzz|byte|borg|mouse|kbd|ver|info {pin} {value|up|down}"
+    print("Bad parameters - in|out|pwm|buzz|byte|borg|mouse|kbd|ver|info {pin} {value|up|down}")

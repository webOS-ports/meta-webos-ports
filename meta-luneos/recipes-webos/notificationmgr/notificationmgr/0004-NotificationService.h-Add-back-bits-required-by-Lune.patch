From ed35a86fb2b4d9b36bf4fabebf053482ee9fc842 Mon Sep 17 00:00:00 2001
From: Herrie <Github.com@herrie.org>
Date: Mon, 2 Oct 2023 15:50:55 +0200
Subject: [PATCH] NotificationService.h: Add back bits required by LuneOS

Seems OSE doesn't use these, but we still want them,

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
Upstream-Status: Inappropriate [LuneOS specific]

 src/NotificationService.h | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/src/NotificationService.h b/src/NotificationService.h
index c4cdba6..2945d25 100755
--- a/src/NotificationService.h
+++ b/src/NotificationService.h
@@ -56,39 +56,57 @@ public:
     static bool cb_createToast(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_createAlert(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_createAlertIsAllowed(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_createInputAlert(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_enableToast(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_disableToast(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_closeToast(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_closeAlert(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_closeAllAlerts(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_closeInputAlert(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_enable(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_disable(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_createPincodePrompt(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_closePincodePrompt(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_getSystemSetting(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_setSystemSetting(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_getSystemSettingForCountry(LSHandle* lshandle, LSMessage *msg, void *user_data);
 
     static bool cb_createNotification(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_createRemoteNotification(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_removeNotification(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_removeAllNotification(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_removeRemoteNotification(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_getNotificationInfo(LSHandle* lshandle, LSMessage *msg, void *user_data);
+    static bool cb_getRemoteNotificationInfo(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool cb_launch(LSHandle* lshandle, LSMessage *msg, void *user_data);
     static bool parseDoc(const char *docname);
 
     bool postToastNotification(pbnjson::JValue toastNotificationPayload, bool staleMsg, bool persistentMsg, std::string &errorText);
     bool postToastCountNotification(pbnjson::JValue toastCountPayload, bool staleMsg, bool persistentMsg, std::string &errorText);
     bool postAlertNotification(pbnjson::JValue alertNotificationPayload, std::string &errorText);
+    bool postInputAlertNotification(pbnjson::JValue alertNotificationPayload, std::string &errText);
+    void postPincodePromptNotification(pbnjson::JValue pincodePromptNotificationPayload);
     void postNotification(pbnjson::JValue alertNotificationPayload, bool remove, bool removeAll);
 
     void setUIEnabled(bool enabled);
     void processNotiMsgQueue();
     void processAlertMsgQueue();
     void processToastMsgQueue();
+    void processInputAlertMsgQueue();
+
+public:
+    void resetPincode_message();
+    void setPincode_message(LSMessage *msg);
+    bool getPincode_message(LSMessage **msg);
+    bool checkUnacceptablePincode(const std::string &rPincode);
 
 private:
     void onAlertStatus(bool enabled);
+    void onPincodePromptStatus(bool enabled);
 
 private:
     std::queue<pbnjson::JValue> alertMsgQueue;
+    std::queue<pbnjson::JValue> inputAlertMsgQueue;
 
     static bool alertRespondWithError(LSMessage* message, const std::string& sourceId, const std::string& alertId, const std::string& alertTitle, const std::string& alertMessage, const std::string& errorText);
     static bool alertRespond(LSMessage* msg, const std::string& sourceId, const std::string& alertId, const std::string& alertTitle, const std::string& alertMessage, const pbnjson::JValue& postCreateAlert);
@@ -98,6 +116,10 @@ private:
     const pbnjson::JValue& postCreateAlert = pbnjson::JValue());
 
 private:
+    LSMessage* m_pincode_message;
+    std::string m_tmp_pincode;
+    std::string m_pincode_timestamp;
+
     boost::signals2::scoped_connection m_connAlertStatus;
     bool UI_ENABLED;
     bool BLOCK_ALERT_NOTIFICATION;

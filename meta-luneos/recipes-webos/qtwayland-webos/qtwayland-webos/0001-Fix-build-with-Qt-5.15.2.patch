From 6167c8499d068625ff28d83536a947aa759429a8 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sat, 12 Feb 2022 11:09:32 +0000
Subject: [PATCH] Fix build with Qt 5.15.2

---
 .../webos-wayland-egl/webos-wayland-egl.pro   |  1 +
 .../webos-wayland-egl/weboscursor.cpp         |  8 +++----
 .../webos-wayland-egl/weboscursor_p.h         |  6 ++---
 .../weboseglplatformintegration.h             |  6 +++--
 .../webos-wayland-egl/webosinputdevice.cpp    | 22 +++++++++----------
 .../webos-wayland-egl/webosinputdevice_p.h    |  4 ++--
 .../webos-wayland-egl/webosintegration.cpp    | 16 +++++++-------
 .../webos-wayland-egl/webosintegration_p.h    |  8 +++----
 .../webosnativeinterface.cpp                  |  3 +++
 .../webos-wayland-egl/webosplatformwindow.cpp | 10 +++++----
 .../webos-wayland-egl/webosplatformwindow_p.h | 14 +++++++-----
 src/webos-platform-interface/webosforeign.cpp |  4 ++--
 src/webos-platform-interface/webosshell.cpp   |  2 +-
 .../webosshellsurface.cpp                     |  2 +-
 .../webosshellsurface_p.h                     |  3 +++
 .../webossurfacegroup.cpp                     |  8 +++----
 .../webossurfacegroupcompositor.cpp           |  2 +-
 17 files changed, 66 insertions(+), 53 deletions(-)

diff --git a/src/plugins/platforms/webos-wayland-egl/webos-wayland-egl.pro b/src/plugins/platforms/webos-wayland-egl/webos-wayland-egl.pro
index 101c974..ed81d91 100644
--- a/src/plugins/platforms/webos-wayland-egl/webos-wayland-egl.pro
+++ b/src/plugins/platforms/webos-wayland-egl/webos-wayland-egl.pro
@@ -22,6 +22,7 @@ versionAtLeast(QT_VERSION, 6.0.0) {
     QT += wl_shell_integration-private wayland_egl_client_hw_integration-private
 } else {
     QT += egl_support-private
+    LIBS += -lQt5WaylandClientEglWindow
 }
 
 qtConfig(xkbcommon) {
diff --git a/src/plugins/platforms/webos-wayland-egl/weboscursor.cpp b/src/plugins/platforms/webos-wayland-egl/weboscursor.cpp
index cb72d49..7037a20 100644
--- a/src/plugins/platforms/webos-wayland-egl/weboscursor.cpp
+++ b/src/plugins/platforms/webos-wayland-egl/weboscursor.cpp
@@ -20,7 +20,7 @@
 #include <QGuiApplication>
 #include <QDebug>
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 #include <QtWaylandClient/private/qwaylandinputdevice_p.h>
 #else
 #include <QtWaylandClient/private/qwaylandscreen_p.h>
@@ -28,7 +28,7 @@
 
 #include "weboscursor_p.h"
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 WebOSCursor::WebOSCursor(QWaylandDisplay *display)
     : QWaylandCursor(display)
     , mCustomCursorBuffer(0)
@@ -49,7 +49,7 @@ WebOSCursor::~WebOSCursor()
 
 void WebOSCursor::changeCursor(QCursor *cursor, QWindow *window)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     const Qt::CursorShape newShape = cursor ? cursor->shape() : Qt::ArrowCursor;
 
     // Cursor shapes below need webOS specific handling with revserved hotspots.
@@ -146,7 +146,7 @@ void WebOSCursor::changeCursor(QCursor *cursor, QWindow *window)
 #endif
 }
 
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
 void WebOSCursor::createBitmapCursor(QPixmap cursorPixmap, QPoint hotSpot)
 {
     if (mCustomCursorBuffer != NULL) {
diff --git a/src/plugins/platforms/webos-wayland-egl/weboscursor_p.h b/src/plugins/platforms/webos-wayland-egl/weboscursor_p.h
index 17fca28..04e5da5 100644
--- a/src/plugins/platforms/webos-wayland-egl/weboscursor_p.h
+++ b/src/plugins/platforms/webos-wayland-egl/weboscursor_p.h
@@ -23,7 +23,7 @@
 using QtWaylandClient::QWaylandCursor;
 using QtWaylandClient::QWaylandCursorTheme;
 using QtWaylandClient::QWaylandShmBuffer;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 using QtWaylandClient::QWaylandDisplay;
 #else
 using QtWaylandClient::QWaylandScreen;
@@ -32,14 +32,14 @@ using QtWaylandClient::QWaylandScreen;
 class WebOSCursor : public QWaylandCursor
 {
 public:
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     WebOSCursor(QWaylandDisplay *display);
 #else
     WebOSCursor(QWaylandScreen *screen);
 #endif
     ~WebOSCursor();
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     void changeCursor(QCursor *cursor, QWindow *window) override;
 #else
 private:
diff --git a/src/plugins/platforms/webos-wayland-egl/weboseglplatformintegration.h b/src/plugins/platforms/webos-wayland-egl/weboseglplatformintegration.h
index cbe06c1..b45c7f5 100644
--- a/src/plugins/platforms/webos-wayland-egl/weboseglplatformintegration.h
+++ b/src/plugins/platforms/webos-wayland-egl/weboseglplatformintegration.h
@@ -21,6 +21,8 @@
 
 #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
 #include <QtWaylandEglClientHwIntegration/private/qwaylandeglclientbufferintegration_p.h>
+#elif QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandeglclientbufferintegration.h>
 #else
 #include "qwaylandeglclientbufferintegration.h"
 #endif
@@ -29,7 +31,7 @@ QT_BEGIN_NAMESPACE
 
 using QtWaylandClient::QWaylandEglClientBufferIntegration;
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 class WebOSEglClientBufferIntegration : public QWaylandEglClientBufferIntegration
 {
 public:
@@ -47,7 +49,7 @@ public:
 class WebOSEglPlatformIntegration : public WebOSIntegration
 {
 public:
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     WebOSEglPlatformIntegration()
         : WebOSIntegration()
         , m_client_buffer_integration(new WebOSEglClientBufferIntegration())
diff --git a/src/plugins/platforms/webos-wayland-egl/webosinputdevice.cpp b/src/plugins/platforms/webos-wayland-egl/webosinputdevice.cpp
index d3867f9..4befaf3 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosinputdevice.cpp
+++ b/src/plugins/platforms/webos-wayland-egl/webosinputdevice.cpp
@@ -26,7 +26,7 @@
 #include <QDebug>
 
 #include <QtWaylandClient/private/qwaylanddisplay_p.h>
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 #include <QtWaylandClient/private/qwaylandsurface_p.h>
 #endif
 
@@ -34,7 +34,7 @@
 
 #if QT_CONFIG(xkbcommon)
 #include <xkbcommon/xkbcommon.h>
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 #include <unistd.h>
 #include <fcntl.h>
 #include <sys/mman.h>
@@ -127,7 +127,7 @@ WebOSInputDevice::WebOSKeyboard::WebOSKeyboard(QWaylandInputDevice *device)
 
 #if QT_CONFIG(xkbcommon)
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 static const uint32_t KeyTbl[] = {
     XKB_KEY_Escape,                 Qt::Key_Escape,
     XKB_KEY_Tab,                    Qt::Key_Tab,
@@ -457,7 +457,7 @@ void WebOSInputDevice::WebOSKeyboard::keyboard_key(uint32_t serial, uint32_t tim
 #endif
 
     Keyboard::keyboard_key(serial, time, key, state);
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
     //In WebOS, we don't support repeat key by qtwayland
     stopRepeat();
 #endif
@@ -537,7 +537,7 @@ void WebOSInputDevice::WebOSPointer::pointer_enter(uint32_t serial, struct wl_su
     mEnterSerial = serial;
 
     bool focusChanged = false;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     QWaylandSurface *qwSurface = window->waylandSurface();
     if (mFocus != qwSurface) {
         mFocus = qwSurface;
@@ -563,7 +563,7 @@ void WebOSInputDevice::WebOSPointer::pointer_enter(uint32_t serial, struct wl_su
 
     QWaylandWindow *grab = QWaylandWindow::mouseGrab();
     if (!grab) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
         QtWaylandClient::QWaylandPointerEvent enter(QEvent::Type::Enter, Qt::ScrollBegin, window,
                 parent->getTime(), mSurfacePos, mGlobalPos, mButtons, Qt::NoButton, parent->modifiers());
 #else
@@ -596,7 +596,7 @@ void WebOSInputDevice::WebOSPointer::pointer_motion(uint32_t time, wl_fixed_t su
 {
     PMTRACE_FUNCTION;
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     if (mFocus.isNull())
         return;
 #else
@@ -613,7 +613,7 @@ void WebOSInputDevice::WebOSPointer::pointer_motion(uint32_t time, wl_fixed_t su
         return;
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     QWaylandWindow *window = mFocus->waylandWindow();
     if (window)
         Pointer::pointer_motion(time, surface_x / window->devicePixelRatio(), surface_y / window->devicePixelRatio());
@@ -626,7 +626,7 @@ void WebOSInputDevice::WebOSPointer::pointer_button(uint32_t serial, uint32_t ti
 {
     PMTRACE_FUNCTION;
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     if (mFocus.isNull())
         return;
 #else
@@ -650,7 +650,7 @@ void WebOSInputDevice::WebOSPointer::pointer_axis(uint32_t time, uint32_t axis,
 {
     PMTRACE_FUNCTION;
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     if (mFocus.isNull())
         return;
 #else
@@ -756,7 +756,7 @@ void WebOSInputDevice::WebOSTouch::touch_motion(uint32_t time, int32_t id, wl_fi
 {
     PMTRACE_FUNCTION;
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     if (mFocus.isNull())
         return;
 #else
diff --git a/src/plugins/platforms/webos-wayland-egl/webosinputdevice_p.h b/src/plugins/platforms/webos-wayland-egl/webosinputdevice_p.h
index c4efa97..651e472 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosinputdevice_p.h
+++ b/src/plugins/platforms/webos-wayland-egl/webosinputdevice_p.h
@@ -22,7 +22,7 @@
 using QtWaylandClient::QWaylandInputDevice;
 using QtWaylandClient::QWaylandDisplay;
 using QtWaylandClient::QWaylandWindow;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 using QtWaylandClient::QWaylandSurface;
 #endif
 
@@ -57,7 +57,7 @@ public:
     WebOSKeyboard(QWaylandInputDevice *device);
 
 #if QT_CONFIG(xkbcommon)
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     int keysymToQtKey(xkb_keysym_t keysym, Qt::KeyboardModifiers modifiers, xkb_state *state, xkb_keycode_t code) override;
 #else
     std::pair<int, QString> keysymToQtKey(xkb_keysym_t keysym, Qt::KeyboardModifiers &modifiers) override;
diff --git a/src/plugins/platforms/webos-wayland-egl/webosintegration.cpp b/src/plugins/platforms/webos-wayland-egl/webosintegration.cpp
index d21254a..f3a167f 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosintegration.cpp
+++ b/src/plugins/platforms/webos-wayland-egl/webosintegration.cpp
@@ -34,7 +34,7 @@ static int s_dragDistance = 10;
 using QtWaylandClient::QWaylandClipboard;
 
 WebOSIntegration::WebOSIntegration()
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     : QWaylandIntegration()
 #else
     : QWaylandIntegration(true)
@@ -43,7 +43,7 @@ WebOSIntegration::WebOSIntegration()
     if (qEnvironmentVariableIsSet("WEBOS_DRAG_DISTANCE"))
         s_dragDistance = qgetenv("WEBOS_DRAG_DISTANCE").toInt();
 
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
     mNativeInterface.reset(new WebOSNativeInterface(this));
     mDisplay.reset(new QWaylandDisplay(this));
     mClipboard.reset(new QWaylandClipboard(mDisplay.data()));
@@ -79,10 +79,10 @@ QPlatformWindow *WebOSIntegration::createPlatformWindow(QWindow *window) const
         ::exit(1);
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     // This will initialize shellIntegration if it is not ready yet
     if (!shellIntegration()) {
-        qCritical("Shell integration is not ready", integrationName.data());
+        qCritical("Shell integration is not ready: %s", integrationName.data());
         ::exit(1);
     }
 
@@ -97,7 +97,7 @@ QWaylandScreen *WebOSIntegration::createPlatformScreen(QWaylandDisplay *display,
     return new WebOSScreen(display, version, id);
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 QWaylandCursor *WebOSIntegration::createPlatformCursor(QWaylandDisplay *display) const
 {
     return new WebOSCursor(display);
@@ -109,7 +109,7 @@ QWaylandCursor *WebOSIntegration::createPlatformCursor(QWaylandScreen *screen) c
 }
 #endif
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 QWaylandInputDevice *WebOSIntegration::createInputDevice(QWaylandDisplay *display, int version, uint32_t id) const
 #else
 QWaylandInputDevice *WebOSIntegration::createInputDevice(QWaylandDisplay *display, int version, uint32_t id)
@@ -118,14 +118,14 @@ QWaylandInputDevice *WebOSIntegration::createInputDevice(QWaylandDisplay *displa
     return new WebOSInputDevice(display, version, id);
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 QWaylandNativeInterface *WebOSIntegration::createPlatformNativeInterface()
 {
     return new WebOSNativeInterface(this);
 }
 #endif
 
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
 void WebOSIntegration::initialize()
 {
     // TODO
diff --git a/src/plugins/platforms/webos-wayland-egl/webosintegration_p.h b/src/plugins/platforms/webos-wayland-egl/webosintegration_p.h
index 00975df..9368a16 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosintegration_p.h
+++ b/src/plugins/platforms/webos-wayland-egl/webosintegration_p.h
@@ -19,7 +19,7 @@
 
 #include <QtWaylandClient/private/qwaylandintegration_p.h>
 #include <QtWaylandClient/private/qwaylandscreen_p.h>
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 #include <QtWaylandClient/private/qwaylandnativeinterface_p.h>
 #endif
 
@@ -28,7 +28,7 @@ using QtWaylandClient::QWaylandCursor;
 using QtWaylandClient::QWaylandScreen;
 using QtWaylandClient::QWaylandInputDevice;
 using QtWaylandClient::QWaylandDisplay;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 using QtWaylandClient::QWaylandNativeInterface;
 #endif
 
@@ -40,12 +40,12 @@ public:
 
     QPlatformWindow *createPlatformWindow(QWindow *window) const override;
     QWaylandScreen *createPlatformScreen(QWaylandDisplay *display, int version, uint32_t id) const override;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     QWaylandCursor *createPlatformCursor(QWaylandDisplay *display) const override;
     QWaylandInputDevice *createInputDevice(QWaylandDisplay *display, int version, uint32_t id) const override;
     QWaylandNativeInterface *createPlatformNativeInterface() override;
 #else
-    QWaylandCursor *createPlatformCursor(QWaylandScreen *screen) const override;
+    QWaylandCursor *createPlatformCursor(QWaylandDisplay *display) const override;
     QWaylandInputDevice *createInputDevice(QWaylandDisplay *display, int version, uint32_t id) override;
     void initialize() override;
 #endif
diff --git a/src/plugins/platforms/webos-wayland-egl/webosnativeinterface.cpp b/src/plugins/platforms/webos-wayland-egl/webosnativeinterface.cpp
index 154dd95..bb23e86 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosnativeinterface.cpp
+++ b/src/plugins/platforms/webos-wayland-egl/webosnativeinterface.cpp
@@ -23,6 +23,9 @@
 #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
 #include <QtWaylandEglClientHwIntegration/private/qwaylandglcontext_p.h>
 #include <QtWaylandEglClientHwIntegration/private/qwaylandeglclientbufferintegration_p.h>
+#elif QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandglcontext.h>
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandeglclientbufferintegration.h>
 #else
 #include "qwaylandglcontext.h"
 #include "qwaylandeglclientbufferintegration.h"
diff --git a/src/plugins/platforms/webos-wayland-egl/webosplatformwindow.cpp b/src/plugins/platforms/webos-wayland-egl/webosplatformwindow.cpp
index 78bbd00..c46f002 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosplatformwindow.cpp
+++ b/src/plugins/platforms/webos-wayland-egl/webosplatformwindow.cpp
@@ -22,7 +22,7 @@
 #include <webosshellsurface.h>
 #include <webosshellsurface_p.h>
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 #include <QtWaylandClient/private/qwaylandsurface_p.h>
 #endif
 #include <QtWaylandClient/private/qwaylandshellsurface_p.h>
@@ -32,7 +32,7 @@
 #include <qpa/qwindowsysteminterface.h>
 #include <QtCore/private/qabstractanimation_p.h>
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 WebOSPlatformWindow::WebOSPlatformWindow(QWindow *window,  QWaylandDisplay *display)
     : QWaylandEglWindow(window, display)
 #else
@@ -121,7 +121,7 @@ void WebOSPlatformWindow::setWindowState(Qt::WindowStates state)
         m_shellSurface->setState(state);
 }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 void WebOSPlatformWindow::setVisible(bool visible)
 {
     if (!m_initialized && visible) {
@@ -146,7 +146,9 @@ void WebOSPlatformWindow::setVisible(bool visible)
         }
     }
 }
+#endif
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
 void WebOSPlatformWindow::doHandleFrameCallback()
 {
     QWaylandWindow::doHandleFrameCallback();
@@ -239,7 +241,7 @@ void WebOSPlatformWindow::onOutputTransformChanged()
     }
 }
 
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
 void WebOSPlatformWindow::handleMouseLeave(QWaylandInputDevice *inputDevice)
 {
     if (mWindowDecoration) {
diff --git a/src/plugins/platforms/webos-wayland-egl/webosplatformwindow_p.h b/src/plugins/platforms/webos-wayland-egl/webosplatformwindow_p.h
index f6605c6..f5be833 100644
--- a/src/plugins/platforms/webos-wayland-egl/webosplatformwindow_p.h
+++ b/src/plugins/platforms/webos-wayland-egl/webosplatformwindow_p.h
@@ -20,13 +20,15 @@
 #include <QtCore/qglobal.h>
 #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
 #include <QtWaylandEglClientHwIntegration/private/qwaylandeglwindow_p.h>
+#elif QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandeglwindow.h>
 #else
 #include "qwaylandeglwindow.h"
 #endif
 
 #include <QtWaylandClient/private/qwaylandcursor_p.h>
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
 using QtWaylandClient::QWaylandDisplay;
 #endif
 using QtWaylandClient::QWaylandCursor;
@@ -39,19 +41,19 @@ class WebOSPlatformWindow : public QWaylandEglWindow
 {
     Q_OBJECT
 public:
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     WebOSPlatformWindow(QWindow *window, QWaylandDisplay *display);
 #else
     WebOSPlatformWindow(QWindow *window);
 #endif
 
-#if (QT_VERSION < QT_VERSION_CHECK(5,10,0))
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
     void setWindowState(Qt::WindowState state) override;
 #else
     void setWindowState(Qt::WindowStates state) override;
 #endif
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     void setVisible(bool visible) override;
 #endif
     void setGeometry(const QRect &rect) override;
@@ -80,7 +82,7 @@ private:
     bool setWindowStateInternal(Qt::WindowStates state);
 #endif
 
-#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
     void handleMouseLeave(QWaylandInputDevice *inputDevice) override;
     void restoreMouseCursor(QWaylandInputDevice *device) override;
 #endif
@@ -104,7 +106,7 @@ private:
 #endif
 
     QPointF m_position;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     bool m_initialized = false;
 #endif
 };
diff --git a/src/webos-platform-interface/webosforeign.cpp b/src/webos-platform-interface/webosforeign.cpp
index fe69485..c9ad9ac 100644
--- a/src/webos-platform-interface/webosforeign.cpp
+++ b/src/webos-platform-interface/webosforeign.cpp
@@ -42,7 +42,7 @@ WebOSExported* WebOSForeignPrivate::export_element(QWindow* window, WebOSForeign
         return NULL;
 
     QWaylandWindow* qww = static_cast<QWaylandWindow*>(window->handle());
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     struct ::wl_webos_exported* wlExported = export_element(qww->wlSurface(), exportedType);
 #else
     struct ::wl_webos_exported* wlExported = export_element(qww->object(), exportedType);
@@ -252,7 +252,7 @@ void WebOSImportedPrivate::requestPunchThrough(const QString& contextId)
 
 void WebOSImportedPrivate::attachSurface(QWaylandWindow* surface)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     attach_surface(surface->wlSurface());
 #else
     attach_surface(surface->object());
diff --git a/src/webos-platform-interface/webosshell.cpp b/src/webos-platform-interface/webosshell.cpp
index 41565a0..539a4db 100644
--- a/src/webos-platform-interface/webosshell.cpp
+++ b/src/webos-platform-interface/webosshell.cpp
@@ -105,7 +105,7 @@ QWaylandShellSurface* WebOSShellPrivate::createShellSurface(QWaylandWindow* wayl
 #endif
 
     if (m_wlShell) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
         struct wl_webos_shell_surface* webos_shell_surface = wl_webos_shell_get_shell_surface(m_shell, waylandWindow->wlSurface());
         struct wl_shell_surface *shell_surface = m_wlShell->get_shell_surface(waylandWindow->wlSurface());
 #else
diff --git a/src/webos-platform-interface/webosshellsurface.cpp b/src/webos-platform-interface/webosshellsurface.cpp
index 35fc968..ec7d77d 100644
--- a/src/webos-platform-interface/webosshellsurface.cpp
+++ b/src/webos-platform-interface/webosshellsurface.cpp
@@ -294,7 +294,7 @@ void WebOSShellSurfacePrivate::setInputRegion(const QRegion& region)
                       rect.width()*dpr, rect.height()*dpr);
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     wl_surface *wlsurface = m_parent->wlSurface();
 #else
     wl_surface *wlsurface = static_cast<QtWayland::wl_surface *>(m_parent)->object();
diff --git a/src/webos-platform-interface/webosshellsurface_p.h b/src/webos-platform-interface/webosshellsurface_p.h
index a840e43..eba25e0 100644
--- a/src/webos-platform-interface/webosshellsurface_p.h
+++ b/src/webos-platform-interface/webosshellsurface_p.h
@@ -26,6 +26,9 @@
 #include <QtWlShellIntegration/private/qwaylandwlshellsurface_p.h>
 #elif QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
 #include <QtWlShellSurface/private/qwaylandwlshellsurface_p.h>
+#elif QT_VERSION == QT_VERSION_CHECK(5,15,2)
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandshellsurface_p.h>
+#include <QtWaylandClient/5.15.2/QtWaylandClient/private/qwaylandwlshellsurface_p.h>
 #else
 #include <QtWaylandClient/private/qwaylandwlshellsurface_p.h>
 #endif
diff --git a/src/webos-platform-interface/webossurfacegroup.cpp b/src/webos-platform-interface/webossurfacegroup.cpp
index 9621efe..b72456c 100644
--- a/src/webos-platform-interface/webossurfacegroup.cpp
+++ b/src/webos-platform-interface/webossurfacegroup.cpp
@@ -43,7 +43,7 @@ void WebOSSurfaceGroupPrivate::setAllowAnonymousLayers(bool allow)
 
 void WebOSSurfaceGroupPrivate::attachAnonymousSurface(QWaylandWindow* surface, WebOSSurfaceGroup::ZHint hint)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     attach_anonymous(surface->wlSurface(), (uint32_t)hint);
 #else
     attach_anonymous(surface->object(), (uint32_t)hint);
@@ -68,7 +68,7 @@ void WebOSSurfaceGroupPrivate::webos_surface_group_owner_destroyed()
 
     QMutableListIterator<QPointer<QWaylandWindow> > s(m_attachedSurfaces);
     while (s.hasNext()) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
         detach(s.next().data()->wlSurface());
 #else
         detach(s.next().data()->object());
@@ -81,7 +81,7 @@ void WebOSSurfaceGroupPrivate::webos_surface_group_owner_destroyed()
 
 void WebOSSurfaceGroupPrivate::attachSurface(QWaylandWindow* surface, const QString& layer)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     attach(surface->wlSurface(), layer);
 #else
     attach(surface->object(), layer);
@@ -91,7 +91,7 @@ void WebOSSurfaceGroupPrivate::attachSurface(QWaylandWindow* surface, const QStr
 
 void WebOSSurfaceGroupPrivate::detachSurface(QWaylandWindow* surface)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
     detach(surface->wlSurface());
 #else
     detach(surface->object());
diff --git a/src/webos-platform-interface/webossurfacegroupcompositor.cpp b/src/webos-platform-interface/webossurfacegroupcompositor.cpp
index 2f23524..d18c896 100644
--- a/src/webos-platform-interface/webossurfacegroupcompositor.cpp
+++ b/src/webos-platform-interface/webossurfacegroupcompositor.cpp
@@ -32,7 +32,7 @@ WebOSSurfaceGroupCompositorPrivate::WebOSSurfaceGroupCompositorPrivate(struct wl
 
 WebOSSurfaceGroup* WebOSSurfaceGroupCompositorPrivate::createGroup(QWaylandWindow* window, const QString &name)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 15, 0)
      struct ::wl_webos_surface_group* grp = create_surface_group(window->wlSurface(), name);
 #else
      struct ::wl_webos_surface_group* grp = create_surface_group(window->object(), name);

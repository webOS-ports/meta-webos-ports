From f7b5bad8d68f14afd1ddaf09df575a71022ce89c Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Thu, 17 Mar 2022 18:08:29 +0000
Subject: [PATCH] Allow getAppBasePath also from trusted apps

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>

Upstream-Status: Pending
---
 src/base/AppDescription.h              | 7 +++++++
 src/bus/service/ApplicationManager.cpp | 5 +++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/src/base/AppDescription.h b/src/base/AppDescription.h
index faedc19..3b62508 100644
--- a/src/base/AppDescription.h
+++ b/src/base/AppDescription.h
@@ -237,6 +237,13 @@ public:
             return true;
         return false;
     }
+    
+    bool isTrusted()
+    {
+        string trustLevel = "";
+        JValueUtil::getValue(m_appinfo, "trustLevel", trustLevel);
+        return (trustLevel == "trusted");
+    }
 
     bool isRemovable() const
     {
diff --git a/src/bus/service/ApplicationManager.cpp b/src/bus/service/ApplicationManager.cpp
index fa1cfbb..ec83551 100644
--- a/src/bus/service/ApplicationManager.cpp
+++ b/src/bus/service/ApplicationManager.cpp
@@ -545,8 +545,9 @@ void ApplicationManager::getAppBasePath(LunaTaskPtr lunaTask)
         LunaTaskList::getInstance().removeAfterReply(lunaTask);
         return;
     }
-    if (lunaTask->getCaller() != appId) {
-        lunaTask->setErrCodeAndText(ErrCode_GENERAL, "Not allowed. Allow only for the info of calling app itself.");
+    AppDescriptionPtr appDescFrom = AppDescriptionList::getInstance().getByAppId(lunaTask->getCaller());
+    if (lunaTask->getCaller() != appId && (!appDescFrom || !appDescFrom->isTrusted())) {
+        lunaTask->setErrCodeAndText(ErrCode_GENERAL, "Not allowed. Allow only for the info of calling app itself, or from trusted apps.");
         LunaTaskList::getInstance().removeAfterReply(lunaTask);
         return;
     }

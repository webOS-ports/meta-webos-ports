From 9716bee5ebe1dfd33361c2cc16834b6f4b76f826 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sat, 16 Apr 2022 14:05:57 +0000
Subject: [PATCH] Setup QML style for LuneOS
With Qt6 the style name is the name of the module, with the eventual prefixes. Also, Controls.2 has been removed, and the LuneOS style now lies in QtQuick/Controls subfolder.

Upstream-Status: Pending
---
 src/base/AppDescription.h          | 7 +++++++
 src/bus/client/NativeContainer.cpp | 5 +++++
 2 files changed, 12 insertions(+)

diff --git a/src/base/AppDescription.h b/src/base/AppDescription.h
index 3b62508..e253127 100644
--- a/src/base/AppDescription.h
+++ b/src/base/AppDescription.h
@@ -291,6 +291,13 @@ public:
         return visible;
     }
 
+    bool useLuneOSStyle() const
+    {
+        bool requestLuneOSStyle = false;
+        JValueUtil::getValue(m_appinfo, "useLuneOSStyle", requestLuneOSStyle);
+        return requestLuneOSStyle;
+    }
+
 private:
     static const vector<string> PROPS_PROHIBITED;
     static const vector<string> PROPS_IMAGES;
diff --git a/src/bus/client/NativeContainer.cpp b/src/bus/client/NativeContainer.cpp
index 9adcf76..8ac41ac 100644
--- a/src/bus/client/NativeContainer.cpp
+++ b/src/bus/client/NativeContainer.cpp
@@ -193,6 +193,11 @@ void NativeContainer::launch(RunningAppPtr runningApp, LunaTaskPtr lunaTask)
     runningApp->getLinuxProcess().addEnv("DISPLAY_ID", std::to_string(runningApp->getDisplayId()));
     runningApp->getLinuxProcess().addEnv("LS2_NAME", Logger::format("%s-%d", runningApp->getAppId().c_str(), s_instanceCounter));
 
+    if (AppType::AppType_Native_Qml == type) {
+        if(runningApp->getLaunchPoint()->getAppDesc()->useLuneOSStyle())
+            runningApp->getLinuxProcess().addEnv("QT_QUICK_CONTROLS_STYLE", "QtQuick.Controls.LuneOS");
+    }
+
     runningApp->setLS2Name(Logger::format("%s-%d", runningApp->getAppId().c_str(), s_instanceCounter));
     if (RuntimeInfo::getInstance().getUser().empty())
         runningApp->getLinuxProcess().openStdFile(Logger::format("/var/log/%s-%d", runningApp->getAppId().c_str(), s_instanceCounter++));

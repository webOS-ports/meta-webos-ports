From 9f2d205d3e92483c45c20da28c6fb30eb86275ed Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sun, 5 Jul 2020 08:39:55 +0000
Subject: [PATCH] QThreadData: use libpthread instead of gcc TLS

At least on old armv7 devices (hammerhead, tenderloin...) is seems that using
gcc TLS (with thread_local variables) is being corrupted by the TLS usage of
the libhybris libraries.
So don't use gcc's TLS at all in Qt and go through pthread_get/setspecific API.
It's a bit slower, but at least it doesn't get corrupted.
---
 src/corelib/thread/qthread_unix.cpp | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/src/corelib/thread/qthread_unix.cpp b/src/corelib/thread/qthread_unix.cpp
index 1da68b3130..8758930689 100644
--- a/src/corelib/thread/qthread_unix.cpp
+++ b/src/corelib/thread/qthread_unix.cpp
@@ -109,8 +109,6 @@ Q_STATIC_ASSERT(sizeof(pthread_t) <= sizeof(Qt::HANDLE));
 enum { ThreadPriorityResetFlag = 0x80000000 };
 
 
-static thread_local QThreadData *currentThreadData = nullptr;
-
 static pthread_once_t current_thread_data_once = PTHREAD_ONCE_INIT;
 static pthread_key_t current_thread_data_key;
 
@@ -170,19 +168,18 @@ Q_DESTRUCTOR_FUNCTION(destroy_current_thread_data_key)
 // Utility functions for getting, setting and clearing thread specific data.
 static QThreadData *get_thread_data()
 {
-    return currentThreadData;
+    pthread_once(&current_thread_data_once, create_current_thread_data_key);
+    return (QThreadData *)pthread_getspecific(current_thread_data_key);
 }
 
 static void set_thread_data(QThreadData *data)
 {
-    currentThreadData = data;
     pthread_once(&current_thread_data_once, create_current_thread_data_key);
     pthread_setspecific(current_thread_data_key, data);
 }
 
 static void clear_thread_data()
 {
-    currentThreadData = nullptr;
     pthread_setspecific(current_thread_data_key, nullptr);
 }
 
-- 
2.17.0

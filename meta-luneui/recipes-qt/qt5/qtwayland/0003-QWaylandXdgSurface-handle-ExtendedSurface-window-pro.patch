From ad0259fda7cf979744b2b978d7b5c164416718d7 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Wed, 24 Apr 2019 20:10:08 +0000
Subject: [PATCH] QWaylandXdgSurface: handle ExtendedSurface window properties

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>

---
 .../xdg-shell/qwaylandxdgshell.cpp                 | 14 ++++++++++++++
 .../xdg-shell/qwaylandxdgshell_p.h                 |  3 +++
 2 files changed, 17 insertions(+)

diff --git a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
index b6d23ac1..b30ad64e 100644
--- a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
+++ b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
@@ -45,6 +45,7 @@
 #include <QtWaylandClient/private/qwaylandinputdevice_p.h>
 #include <QtWaylandClient/private/qwaylandscreen_p.h>
 #include <QtWaylandClient/private/qwaylandabstractdecoration_p.h>
+#include <QtWaylandClient/private/qwaylandextendedsurface_p.h>
 
 #include <QtGui/private/qwindow_p.h>
 
@@ -242,6 +243,9 @@ QWaylandXdgSurface::QWaylandXdgSurface(QWaylandXdgShell *shell, ::xdg_surface *s
     Qt::WindowType type = window->window()->type();
     auto *transientParent = window->transientParent();
 
+    if (display && display->windowExtension())
+        m_extendedWindow = new QWaylandExtendedSurface(window);
+
     if (type == Qt::ToolTip && transientParent) {
         setPopup(transientParent);
     } else if (type == Qt::Popup && transientParent && display->lastInputDevice()) {
@@ -266,9 +270,19 @@ QWaylandXdgSurface::~QWaylandXdgSurface()
         delete m_popup;
         m_popup = nullptr;
     }
+    if (m_extendedWindow) {
+        delete m_extendedWindow;
+        m_extendedWindow = nullptr;
+    }
     destroy();
 }
 
+void QWaylandXdgSurface::sendProperty(const QString &name, const QVariant &value)
+{
+    if (m_extendedWindow)
+        m_extendedWindow->updateGenericProperty(name, value);
+}
+
 bool QWaylandXdgSurface::resize(QWaylandInputDevice *inputDevice, Qt::Edges edges)
 {
     if (!m_toplevel || !m_toplevel->isInitialized())
diff --git a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell_p.h b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell_p.h
index 0c98be35..01e61e78 100644
--- a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell_p.h
+++ b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell_p.h
@@ -72,6 +72,7 @@ class QWaylandDisplay;
 class QWaylandWindow;
 class QWaylandInputDevice;
 class QWaylandXdgShell;
+class QWaylandExtendedSurface;
 
 class Q_WAYLAND_CLIENT_EXPORT QWaylandXdgSurface : public QWaylandShellSurface, public QtWayland::xdg_surface
 {
@@ -86,6 +87,7 @@ public:
     void setTitle(const QString &title) override;
     void setAppId(const QString &appId) override;
     void setWindowFlags(Qt::WindowFlags flags) override;
+    void sendProperty(const QString &name, const QVariant &value) override;
 
     bool isExposed() const override;
     bool handleExpose(const QRegion &) override;
@@ -146,6 +148,7 @@ private:
     void setPopup(QWaylandWindow *parent);
     void setGrabPopup(QWaylandWindow *parent, QWaylandInputDevice *device, int serial);
 
+    QWaylandExtendedSurface *m_extendedWindow = nullptr;
     QWaylandXdgShell *m_shell = nullptr;
     QWaylandWindow *m_window = nullptr;
     Toplevel *m_toplevel = nullptr;

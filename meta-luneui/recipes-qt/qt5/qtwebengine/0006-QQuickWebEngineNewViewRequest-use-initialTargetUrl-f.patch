From 59123170dfd31211729619e1b259f3fa6c09dfd9 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Tue, 20 Oct 2015 20:32:08 +0200
Subject: [PATCH] QQuickWebEngineNewViewRequest: use initialTargetUrl for url()

The initial target url is stored in the WebContentsView when the window creation is requested.

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 src/core/web_contents_adapter.cpp                   | 10 ++++++++++
 src/core/web_contents_adapter.h                     |  1 +
 src/core/web_contents_view_qt.h                     |  4 ++++
 src/webengine/api/qquickwebenginenewviewrequest.cpp |  4 ++--
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/src/core/web_contents_adapter.cpp b/src/core/web_contents_adapter.cpp
index 3e500396..59e7c25c 100644
--- a/src/core/web_contents_adapter.cpp
+++ b/src/core/web_contents_adapter.cpp
@@ -741,6 +741,16 @@ QUrl WebContentsAdapter::iconUrl() const
     return QUrl();
 }
 
+QUrl WebContentsAdapter::initialTargetUrl() const
+{
+    content::WebContentsView *contentsView = static_cast<content::WebContentsImpl*>(m_webContents.get())->GetView();
+    if (contentsView) {
+        return toQt(contentsView->getInitialTargetURL());
+    }
+
+    return QUrl();
+}
+
 QString WebContentsAdapter::pageTitle() const
 {
     CHECK_INITIALIZED(QString());
diff --git a/src/core/web_contents_adapter.h b/src/core/web_contents_adapter.h
index e8e5359b..634987bb 100644
--- a/src/core/web_contents_adapter.h
+++ b/src/core/web_contents_adapter.h
@@ -120,6 +120,7 @@ public:
     QString pageTitle() const;
     QString selectedText() const;
     QUrl iconUrl() const;
+    QUrl initialTargetUrl() const;
 
     void undo();
     void redo();
diff --git a/src/core/web_contents_view_qt.h b/src/core/web_contents_view_qt.h
index 0c31c509..4c564e2e 100644
--- a/src/core/web_contents_view_qt.h
+++ b/src/core/web_contents_view_qt.h
@@ -42,6 +42,7 @@
 
 #include "content/browser/renderer_host/render_view_host_delegate_view.h"
 #include "content/browser/web_contents/web_contents_view.h"
+#include "url/gurl.h"
 
 #include "api/qtwebenginecoreglobal_p.h"
 
@@ -71,6 +72,8 @@ public:
 
     virtual void setWindowAdditionalFeatures(const std::vector<base::string16> &additional_features) Q_DECL_OVERRIDE { m_additional_features = additional_features; }
     virtual std::vector<base::string16> getWindowAdditionalFeatures() Q_DECL_OVERRIDE { return m_additional_features; }
+    virtual void setInitialTargetURL(const GURL &initialURL) Q_DECL_OVERRIDE { m_initialURL = initialURL; }
+    virtual GURL getInitialTargetURL() Q_DECL_OVERRIDE { return m_initialURL; }
 
     // content::WebContentsView overrides:
     content::RenderWidgetHostViewBase *CreateViewForWidget(content::RenderWidgetHost* render_widget_host, bool is_guest_view_hack) override;
@@ -135,6 +138,7 @@ public:
     void TakeFocus(bool reverse) override;
 
 private:
+    GURL m_initialURL;
     content::WebContents *m_webContents;
     WebContentsAdapterClient *m_client;
     WebContentsAdapterClient *m_factoryClient;
diff --git a/src/webengine/api/qquickwebenginenewviewrequest.cpp b/src/webengine/api/qquickwebenginenewviewrequest.cpp
index a3698894..2272aa1e 100644
--- a/src/webengine/api/qquickwebenginenewviewrequest.cpp
+++ b/src/webengine/api/qquickwebenginenewviewrequest.cpp
@@ -99,8 +99,8 @@ const QStringList &QQuickWebEngineNewViewRequest::additionalFeatures() const
 
 QUrl QQuickWebEngineNewViewRequest::url() const
 {
-    if (!m_adapter) {
-        return m_adapter->activeUrl();
+    if (m_adapter) {
+        return m_adapter->initialTargetUrl();
     }
     return QUrl();
 }

From 262c62da5e676443e1b1086e1a1b87ec86e9ab8e Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sat, 31 Oct 2015 16:04:01 +0100
Subject: [PATCH] GetScreenInfo: use default screen when no window is available

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 src/core/render_widget_host_view_qt.cpp   | 10 +++++++---
 src/webengine/api/qquickwebengineview.cpp |  2 +-
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/core/render_widget_host_view_qt.cpp b/src/core/render_widget_host_view_qt.cpp
index 40ed7597..f4ba74e3 100644
--- a/src/core/render_widget_host_view_qt.cpp
+++ b/src/core/render_widget_host_view_qt.cpp
@@ -42,6 +42,7 @@
 #include "browser_accessibility_manager_qt.h"
 #include "chromium_overrides.h"
 #include "compositor.h"
+#include "web_contents_view_qt.h"
 #include "qtwebenginecoreglobal_p.h"
 #include "render_widget_host_view_qt_delegate.h"
 #include "type_conversion.h"
@@ -719,9 +720,12 @@ void RenderWidgetHostViewQt::SubmitCompositorFrame(const viz::LocalSurfaceId &lo
 void RenderWidgetHostViewQt::GetScreenInfo(content::ScreenInfo *results) const
 {
     QWindow *window = m_delegate->window();
-    if (!window)
-        return;
-    GetScreenInfoFromNativeWindow(window, results);
+    if( window ) {
+        GetScreenInfoFromNativeWindow(window, results);
+    }
+    else {
+        content::WebContentsView::GetDefaultScreenInfo(results);
+    }
 
     // Support experimental.viewport.devicePixelRatio
     results->device_scale_factor *= dpiScale();
diff --git a/src/webengine/api/qquickwebengineview.cpp b/src/webengine/api/qquickwebengineview.cpp
index 5c8318e8..3971f9e9 100644
--- a/src/webengine/api/qquickwebengineview.cpp
+++ b/src/webengine/api/qquickwebengineview.cpp
@@ -508,7 +508,7 @@ void QQuickWebEngineViewPrivate::unhandledKeyEvent(QKeyEvent *event)
         QCoreApplication::sendEvent(q->parentItem(), event);
 }
 
-void QQuickWebEngineViewPrivate::adoptNewWindow(QSharedPointer<WebContentsAdapter> newWebContents, WindowOpenDisposition disposition, bool userGesture, const QRect &requestedGeometry, const QStringList &additionalFeaturesStringList)
+void QQuickWebEngineViewPrivate::adoptNewWindow(QSharedPointer<WebContentsAdapter> newWebContents, WindowOpenDisposition disposition, bool userGesture, const QRect &requestedGeometry, const QUrl &targetUrl, const QStringList &additionalFeaturesStringList)
 {
     Q_Q(QQuickWebEngineView);
     QQuickWebEngineNewViewRequest request;

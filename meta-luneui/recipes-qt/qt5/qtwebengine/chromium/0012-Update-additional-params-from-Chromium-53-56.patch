From 2d0750b70af7b420e863714c3e8f11ec02bed0a8 Mon Sep 17 00:00:00 2001
From: Herrie <github.com@herrie.org>
Date: Fri, 25 Aug 2017 21:12:16 +0200
Subject: [PATCH] Update additional params from Chromium 53->56

---
 chromium/content/browser/web_contents/web_contents_impl.cc        | 8 ++++++--
 .../third_party/WebKit/public/web/WindowFeaturesStructTraits.cpp  | 1 +
 .../third_party/WebKit/public/web/WindowFeaturesStructTraits.h    | 8 ++++++++
 chromium/third_party/WebKit/public/web/window_features.mojom      | 2 ++
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/chromium/content/browser/web_contents/web_contents_impl.cc b/chromium/content/browser/web_contents/web_contents_impl.cc
index 228b62aecb..c1a74a8316 100644
--- a/chromium/content/browser/web_contents/web_contents_impl.cc
+++ b/chromium/content/browser/web_contents/web_contents_impl.cc
@@ -2094,6 +2094,10 @@ void WebContentsImpl::CreateNewWindow(
       rfh->Init();
     return;
   }
+  
+  std::vector<base::string16> additional_features;
+  for (auto webStr : params.features.additionalFeatures)
+    additional_features.push_back(webStr);
 
   // Create the new web contents. This will automatically create the new
   // WebContentsView. In the future, we may want to create the view separately.
@@ -2138,7 +2142,7 @@ void WebContentsImpl::CreateNewWindow(
 
       // set the additional features required by the LuneOS app
       // (ideally this information should be propagated using the IPC messaging)
-      new_view->setWindowAdditionalFeatures(params.additional_features);
+      new_view->setWindowAdditionalFeatures(additional_features);
       new_view->setInitialTargetURL(params.target_url);
 
       // TODO(brettw): It seems bogus that we have to call this function on the
@@ -2168,7 +2172,7 @@ void WebContentsImpl::CreateNewWindow(
       gfx::Rect initial_rect;
       delegate_->AddNewContents(
           this, new_contents, params.disposition, initial_rect,
-          params.user_gesture, &was_blocked, params.additional_features);
+          params.user_gesture, &was_blocked, additional_features);
     }
     if (!was_blocked) {
       OpenURLParams open_params(params.target_url, params.referrer,
diff --git a/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.cpp b/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.cpp
index 69dce5bc63..27a5fd8cdc 100644
--- a/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.cpp
+++ b/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.cpp
@@ -27,6 +27,7 @@ bool StructTraits<::blink::mojom::WindowFeaturesDataView,
   out->resizable = data.resizable();
   out->fullscreen = data.fullscreen();
   out->dialog = data.dialog();
+  out->additionalFeatures = data.additionalFeatures();
   return true;
 }
 
diff --git a/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.h b/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.h
index ca776ed5a0..0201c84487 100644
--- a/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.h
+++ b/chromium/third_party/WebKit/public/web/WindowFeaturesStructTraits.h
@@ -65,6 +65,14 @@ struct StructTraits<::blink::mojom::WindowFeaturesDataView,
     return features.dialog;
   }
 
+  static std::vector<base::string16> additionalFeatures(const ::blink::WebWindowFeatures& features) {
+    std::vector<base::string16> additional_features;
+    for (auto webStr : features.additionalFeatures) { 
+      additional_features.push_back(webStr); 
+    }
+    return additional_features;
+  }
+
   static bool Read(::blink::mojom::WindowFeaturesDataView,
                    ::blink::WebWindowFeatures* out);
 };
diff --git a/chromium/third_party/WebKit/public/web/window_features.mojom b/chromium/third_party/WebKit/public/web/window_features.mojom
index a26b8a3b44..cb21f157d5 100644
--- a/chromium/third_party/WebKit/public/web/window_features.mojom
+++ b/chromium/third_party/WebKit/public/web/window_features.mojom
@@ -30,4 +30,6 @@ struct WindowFeatures {
     // NOTE: WebWindowFeatures::additionalFeatures is not mirrored by this
     // mojom struct as it's never used by the browser and therefore doesn't need
     // to be sent.
+	// ... but webOS/LuneOS apps need that to send additional info to the OS
+    array<string> additionalFeatures;
 };
-- 
2.11.0.windows.3


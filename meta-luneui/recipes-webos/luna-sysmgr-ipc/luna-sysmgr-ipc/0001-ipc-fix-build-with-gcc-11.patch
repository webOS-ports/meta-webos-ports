From 254f6e609173106359e528e4b1b49968377afc98 Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Thu, 29 Apr 2021 13:52:58 +0200
Subject: [PATCH] ipc: fix build with gcc-11

* https://gcc.gnu.org/gcc-11/porting_to.html
  Ordered pointer comparison with integer
  GCC 11 now issues a diagnostic for ordered comparisons of pointers against constant integers. Commonly this is an ordered comparison against NULL or 0. These should be equality comparisons, not ordered comparisons.

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 src/ipc/PIpcBuffer.cpp | 2 +-
 src/ipc/PIpcMutex.cpp  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/ipc/PIpcBuffer.cpp b/src/ipc/PIpcBuffer.cpp
index 23a4e86..3204820 100644
--- a/src/ipc/PIpcBuffer.cpp
+++ b/src/ipc/PIpcBuffer.cpp
@@ -167,7 +167,7 @@ PIpcBuffer::~PIpcBuffer()
 	// pthread_mutex_destroy is deliberately not called to avoid
 	// the issue of ownership. on Linux pthread_mutex_destroy does
 	// nothing apart from checking that the mutex is unlocked
-    if (m_data > 0) {
+    if (m_data != NULL) {
 
 		if (m_lockCount)
 			unlock();
diff --git a/src/ipc/PIpcMutex.cpp b/src/ipc/PIpcMutex.cpp
index d19c7a2..38e79f7 100644
--- a/src/ipc/PIpcMutex.cpp
+++ b/src/ipc/PIpcMutex.cpp
@@ -108,7 +108,7 @@ PIpcMutex::~PIpcMutex()
 	// the issue of ownership. on Linux pthread_mutex_destroy does
 	// nothing apart from checking that the mutex is unlocked
 	
-    if (m_data > 0)
+    if (m_data != NULL)
 		::shmdt(m_data);
 }
 

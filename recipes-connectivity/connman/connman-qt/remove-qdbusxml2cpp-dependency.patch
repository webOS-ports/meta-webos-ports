commit f76a2a708390d0ed82c086ab62a6c844578d2eb5
Author: Simon Busch <morphis@gravedo.de>
Date:   Tue Oct 23 18:15:25 2012 +0200

    Remove dependency on qdbusxml2cpp utility

diff --git a/libconnman-qt/libconnman-qt.pro b/libconnman-qt/libconnman-qt.pro
index e303473..0b69537 100644
--- a/libconnman-qt/libconnman-qt.pro
+++ b/libconnman-qt/libconnman-qt.pro
@@ -12,8 +12,8 @@ isEmpty(PREFIX) {
 target.path = $$INSTALL_ROOT$$PREFIX/lib
 
 #system(qdbusxml2cpp -c Manager -p manager -N connman-manager.xml)
-system(qdbusxml2cpp -c Service -p service -N connman-service.xml)
-system(qdbusxml2cpp -c Technology -p technology -N connman-technology.xml)
+#system(qdbusxml2cpp -c Service -p service -N connman-service.xml)
+#system(qdbusxml2cpp -c Technology -p technology -N connman-technology.xml)
 
 HEADERS += manager.h \
     service.h \
diff --git a/libconnman-qt/service.cpp b/libconnman-qt/service.cpp
new file mode 100644
index 0000000..8f0551c
--- /dev/null
+++ b/libconnman-qt/service.cpp
@@ -0,0 +1,26 @@
+/*
+ * This file was generated by qdbusxml2cpp version 0.7
+ * Command line was: qdbusxml2cpp -c Service -p service -N connman-service.xml
+ *
+ * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+ *
+ * This is an auto-generated file.
+ * This file may have been hand-edited. Look for HAND-EDIT comments
+ * before re-generating it.
+ */
+
+#include "service.h"
+
+/*
+ * Implementation of interface class Service
+ */
+
+Service::Service(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent)
+    : QDBusAbstractInterface(service, path, staticInterfaceName(), connection, parent)
+{
+}
+
+Service::~Service()
+{
+}
+
diff --git a/libconnman-qt/service.h b/libconnman-qt/service.h
new file mode 100644
index 0000000..7be4d09
--- /dev/null
+++ b/libconnman-qt/service.h
@@ -0,0 +1,95 @@
+/*
+ * This file was generated by qdbusxml2cpp version 0.7
+ * Command line was: qdbusxml2cpp -c Service -p service -N connman-service.xml
+ *
+ * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+ *
+ * This is an auto-generated file.
+ * Do not edit! All changes made to it will be lost.
+ */
+
+#ifndef SERVICE_H_1351008745
+#define SERVICE_H_1351008745
+
+#include <QtCore/QObject>
+#include <QtCore/QByteArray>
+#include <QtCore/QList>
+#include <QtCore/QMap>
+#include <QtCore/QString>
+#include <QtCore/QStringList>
+#include <QtCore/QVariant>
+#include <QtDBus/QtDBus>
+
+/*
+ * Proxy class for interface net.connman.Service
+ */
+class Service: public QDBusAbstractInterface
+{
+    Q_OBJECT
+public:
+    static inline const char *staticInterfaceName()
+    { return "net.connman.Service"; }
+
+public:
+    Service(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);
+
+    ~Service();
+
+public Q_SLOTS: // METHODS
+    inline QDBusPendingReply<> ClearProperty(const QString &name)
+    {
+        QList<QVariant> argumentList;
+        argumentList << QVariant::fromValue(name);
+        return asyncCallWithArgumentList(QLatin1String("ClearProperty"), argumentList);
+    }
+
+    inline QDBusPendingReply<> Connect()
+    {
+        QList<QVariant> argumentList;
+        return asyncCallWithArgumentList(QLatin1String("Connect"), argumentList);
+    }
+
+    inline QDBusPendingReply<> Disconnect()
+    {
+        QList<QVariant> argumentList;
+        return asyncCallWithArgumentList(QLatin1String("Disconnect"), argumentList);
+    }
+
+    inline QDBusPendingReply<QVariantMap> GetProperties()
+    {
+        QList<QVariant> argumentList;
+        return asyncCallWithArgumentList(QLatin1String("GetProperties"), argumentList);
+    }
+
+    inline QDBusPendingReply<> MoveAfter(const QDBusObjectPath &service)
+    {
+        QList<QVariant> argumentList;
+        argumentList << QVariant::fromValue(service);
+        return asyncCallWithArgumentList(QLatin1String("MoveAfter"), argumentList);
+    }
+
+    inline QDBusPendingReply<> MoveBefore(const QDBusObjectPath &service)
+    {
+        QList<QVariant> argumentList;
+        argumentList << QVariant::fromValue(service);
+        return asyncCallWithArgumentList(QLatin1String("MoveBefore"), argumentList);
+    }
+
+    inline QDBusPendingReply<> Remove()
+    {
+        QList<QVariant> argumentList;
+        return asyncCallWithArgumentList(QLatin1String("Remove"), argumentList);
+    }
+
+    inline QDBusPendingReply<> SetProperty(const QString &name, const QDBusVariant &value)
+    {
+        QList<QVariant> argumentList;
+        argumentList << QVariant::fromValue(name) << QVariant::fromValue(value);
+        return asyncCallWithArgumentList(QLatin1String("SetProperty"), argumentList);
+    }
+
+Q_SIGNALS: // SIGNALS
+    void PropertyChanged(const QString &name, const QDBusVariant &value);
+};
+
+#endif
diff --git a/libconnman-qt/technology.cpp b/libconnman-qt/technology.cpp
new file mode 100644
index 0000000..ab8d9a5
--- /dev/null
+++ b/libconnman-qt/technology.cpp
@@ -0,0 +1,26 @@
+/*
+ * This file was generated by qdbusxml2cpp version 0.7
+ * Command line was: qdbusxml2cpp -c Technology -p technology -N connman-technology.xml
+ *
+ * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+ *
+ * This is an auto-generated file.
+ * This file may have been hand-edited. Look for HAND-EDIT comments
+ * before re-generating it.
+ */
+
+#include "technology.h"
+
+/*
+ * Implementation of interface class Technology
+ */
+
+Technology::Technology(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent)
+    : QDBusAbstractInterface(service, path, staticInterfaceName(), connection, parent)
+{
+}
+
+Technology::~Technology()
+{
+}
+
diff --git a/libconnman-qt/technology.h b/libconnman-qt/technology.h
new file mode 100644
index 0000000..a0d07b9
--- /dev/null
+++ b/libconnman-qt/technology.h
@@ -0,0 +1,56 @@
+/*
+ * This file was generated by qdbusxml2cpp version 0.7
+ * Command line was: qdbusxml2cpp -c Technology -p technology -N connman-technology.xml
+ *
+ * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+ *
+ * This is an auto-generated file.
+ * Do not edit! All changes made to it will be lost.
+ */
+
+#ifndef TECHNOLOGY_H_1351008745
+#define TECHNOLOGY_H_1351008745
+
+#include <QtCore/QObject>
+#include <QtCore/QByteArray>
+#include <QtCore/QList>
+#include <QtCore/QMap>
+#include <QtCore/QString>
+#include <QtCore/QStringList>
+#include <QtCore/QVariant>
+#include <QtDBus/QtDBus>
+
+/*
+ * Proxy class for interface net.connman.Technology
+ */
+class Technology: public QDBusAbstractInterface
+{
+    Q_OBJECT
+public:
+    static inline const char *staticInterfaceName()
+    { return "net.connman.Technology"; }
+
+public:
+    Technology(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);
+
+    ~Technology();
+
+public Q_SLOTS: // METHODS
+    inline QDBusPendingReply<> Scan()
+    {
+        QList<QVariant> argumentList;
+        return asyncCallWithArgumentList(QLatin1String("Scan"), argumentList);
+    }
+
+    inline QDBusPendingReply<> SetProperty(const QString &name, const QDBusVariant &value)
+    {
+        QList<QVariant> argumentList;
+        argumentList << QVariant::fromValue(name) << QVariant::fromValue(value);
+        return asyncCallWithArgumentList(QLatin1String("SetProperty"), argumentList);
+    }
+
+Q_SIGNALS: // SIGNALS
+    void PropertyChanged(const QString &name, const QDBusVariant &value);
+};
+
+#endif

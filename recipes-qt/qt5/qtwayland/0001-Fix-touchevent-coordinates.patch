diff --git a/src/client/qwaylandtouch.cpp b/src/client/qwaylandtouch.cpp
index 3dabd1e..516662a 100644
--- a/src/client/qwaylandtouch.cpp
+++ b/src/client/qwaylandtouch.cpp
@@ -111,8 +111,14 @@ void QWaylandTouchExtension::touch_extension_touch(uint32_t time,
     tp.area = QRectF(0, 0, fromFixed(width), fromFixed(height));
     // Got surface-relative coords but need a (virtual) screen position.
     QPointF relPos = QPointF(fromFixed(x), fromFixed(y));
+#if 0
     QPointF delta = relPos - relPos.toPoint();
     tp.area.moveCenter(mTargetWindow->mapToGlobal(relPos.toPoint()) + delta);
+#else
+    // Tofe: the position of the touchpoint is supposed to be relative to the widget that receives it.
+    //       here, it is the window --> keep the coordinates relative to it
+    tp.area.moveCenter(relPos);
+#endif
 
     tp.normalPosition.setX(fromFixed(normalized_x));
     tp.normalPosition.setY(fromFixed(normalized_y));
diff --git a/src/compositor/wayland_wrapper/qwlqttouch.cpp b/src/compositor/wayland_wrapper/qwlqttouch.cpp
index 0110c43..bbb13f9 100644
--- a/src/compositor/wayland_wrapper/qwlqttouch.cpp
+++ b/src/compositor/wayland_wrapper/qwlqttouch.cpp
@@ -104,7 +104,13 @@ bool TouchExtensionGlobal::postTouchEvent(QTouchEvent *event, QWaylandSurfaceVie
             uint32_t state = (tp.state() & 0xFFFF) | (sentPointCount << 16);
             uint32_t flags = (tp.flags() & 0xFFFF) | (int(event->device()->capabilities()) << 16);
 
+#if 0
             QPointF p = tp.pos() - surfacePos; // surface-relative
+#else
+            // Tofe: the position of the touchpoint is supposed to be relative to the widget that receives it.
+            //       here, it is the window --> no need to offset it once more
+            QPointF p = tp.pos(); // surface-relative
+#endif
             int x = toFixed(p.x());
             int y = toFixed(p.y());
             int nx = toFixed(tp.normalizedPos().x());

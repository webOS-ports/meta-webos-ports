From 5a717003345e5f482ebc0cc253bc6b8eb9877953 Mon Sep 17 00:00:00 2001
From: Simon Busch <morphis@gravedo.de>
Date: Sat, 18 Jan 2014 14:00:45 +0100
Subject: [PATCH 7/7] Adjust cast for wayland EGL API change

Since https://github.com/libhybris/libhybris/commit/13581f2282109b73826ad99a6e4ce97468a01894
we have to provide a wl_resource pointer instead of a wl_buffer one.

Signed-off-by: Simon Busch <morphis@gravedo.de>
---
 .../waylandcompositors/wayland-egl/waylandeglintegration.cpp        | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/plugins/waylandcompositors/wayland-egl/waylandeglintegration.cpp b/src/plugins/waylandcompositors/wayland-egl/waylandeglintegration.cpp
index 6e4f0b1..ce025e3 100644
--- a/src/plugins/waylandcompositors/wayland-egl/waylandeglintegration.cpp
+++ b/src/plugins/waylandcompositors/wayland-egl/waylandeglintegration.cpp
@@ -208,7 +208,7 @@ bool WaylandEglIntegration::isYInverted(struct ::wl_resource *buffer) const
 #if defined(EGL_WAYLAND_Y_INVERTED_WL)
     EGLint isYInverted;
     EGLBoolean ret;
-    ret = d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_buffer *>(buffer), EGL_WAYLAND_Y_INVERTED_WL, &isYInverted);
+    ret = d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_resource *>(buffer), EGL_WAYLAND_Y_INVERTED_WL, &isYInverted);
 
     // Yes, this looks strange, but the specification says that EGL_FALSE return
     // value (not supported) should be treated the same as EGL_TRUE return value
@@ -258,8 +258,8 @@ QSize WaylandEglIntegration::bufferSize(struct ::wl_resource *buffer) const
     Q_D(const WaylandEglIntegration);
 
     int width, height;
-    d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_buffer *>(buffer), EGL_WIDTH, &width);
-    d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_buffer *>(buffer), EGL_HEIGHT, &height);
+    d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_resource *>(buffer), EGL_WIDTH, &width);
+    d->egl_query_wayland_buffer(d->egl_display, reinterpret_cast<struct ::wl_resource *>(buffer), EGL_HEIGHT, &height);
 
     return QSize(width, height);
 }
-- 
1.8.3.2


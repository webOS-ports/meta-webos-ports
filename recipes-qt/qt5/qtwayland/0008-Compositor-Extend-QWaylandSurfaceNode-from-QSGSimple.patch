From f0b48cff482b6dcd833ab0664075c4e5fa570cba Mon Sep 17 00:00:00 2001
From: Andrew Knight <andrew.knight@digia.com>
Date: Tue, 15 Oct 2013 18:08:05 +0300
Subject: [PATCH 8/8] Compositor: Extend QWaylandSurfaceNode from
 QSGSimpleTextureNode

Use the convenience base class to remove replicated code and make use
of QSGTextureMaterial's internal optimizations.

Upstream-Status: Applied [backport]
---
 src/compositor/compositor_api/compositor_api.pri   |   6 +-
 .../compositor_api/qwaylandsurfacenode.cpp         |  54 ---------
 .../compositor_api/qwaylandsurfacenode_p.h         |  19 +---
 .../qwaylandsurfacetexturematerial.cpp             | 122 ---------------------
 .../qwaylandsurfacetexturematerial_p.h             |  91 ---------------
 5 files changed, 4 insertions(+), 288 deletions(-)
 delete mode 100644 src/compositor/compositor_api/qwaylandsurfacetexturematerial.cpp
 delete mode 100644 src/compositor/compositor_api/qwaylandsurfacetexturematerial_p.h

diff --git a/src/compositor/compositor_api/compositor_api.pri b/src/compositor/compositor_api/compositor_api.pri
index f0bbe76..245b418 100644
--- a/src/compositor/compositor_api/compositor_api.pri
+++ b/src/compositor/compositor_api/compositor_api.pri
@@ -15,13 +15,11 @@ QT += core-private
 qtHaveModule(quick) {
     SOURCES += \
         compositor_api/qwaylandsurfaceitem.cpp \
-        compositor_api/qwaylandsurfacenode.cpp \
-        compositor_api/qwaylandsurfacetexturematerial.cpp
+        compositor_api/qwaylandsurfacenode.cpp
 
     HEADERS += \
         compositor_api/qwaylandsurfaceitem.h \
-        compositor_api/qwaylandsurfacenode_p.h \
-        compositor_api/qwaylandsurfacetexturematerial_p.h
+        compositor_api/qwaylandsurfacenode_p.h
 
     DEFINES += QT_COMPOSITOR_QUICK
 
diff --git a/src/compositor/compositor_api/qwaylandsurfacenode.cpp b/src/compositor/compositor_api/qwaylandsurfacenode.cpp
index 513704f..4489fd5 100644
--- a/src/compositor/compositor_api/qwaylandsurfacenode.cpp
+++ b/src/compositor/compositor_api/qwaylandsurfacenode.cpp
@@ -53,16 +53,7 @@ QWaylandSurfaceNode::QWaylandSurfaceNode(QWaylandSurfaceItem *item)
     : m_item(item)
     , m_textureUpdated(false)
     , m_useTextureAlpha(false)
-    , m_geometry(QSGGeometry::defaultAttributes_TexturedPoint2D(), 4)
 {
-    m_textureMaterial = QWaylandSurfaceTextureMaterial::createMaterial();
-    m_opaqueTextureMaterial = QWaylandSurfaceTextureOpaqueMaterial::createMaterial();
-
-    m_currentMaterial = m_opaqueTextureMaterial;
-
-    setGeometry(&m_geometry);
-    setMaterial(m_currentMaterial);
-
     if (m_item)
         m_item->m_node = this;
     setFlag(UsePreprocess,true);
@@ -74,8 +65,6 @@ QWaylandSurfaceNode::~QWaylandSurfaceNode()
     QMutexLocker locker(QWaylandSurfaceItem::mutex);
     if (m_item)
         m_item->m_node = 0;
-    delete m_textureMaterial;
-    delete m_opaqueTextureMaterial;
 }
 
 void QWaylandSurfaceNode::preprocess()
@@ -96,53 +85,10 @@ void QWaylandSurfaceNode::preprocess()
 void QWaylandSurfaceNode::updateTexture()
 {
     Q_ASSERT(m_item && m_item->textureProvider());
-
-    //If m_item->useTextureAlpha has changed to true use m_texureMaterial
-    //otherwise use m_opaqueTextureMaterial.
-    if (m_item->useTextureAlpha() != m_useTextureAlpha) {
-        m_useTextureAlpha = m_item->useTextureAlpha();
-        if (m_useTextureAlpha) {
-            m_currentMaterial = m_textureMaterial;
-        } else {
-            m_currentMaterial = m_opaqueTextureMaterial;
-        }
-        setMaterial(m_currentMaterial);
-    }
-
     QSGTexture *texture = m_item->textureProvider()->texture();
     setTexture(texture);
 }
 
-void QWaylandSurfaceNode::setRect(const QRectF &rect)
-{
-    if (m_rect == rect)
-        return;
-    m_rect = rect;
-
-    if (texture()) {
-        QSize ts = texture()->textureSize();
-        QRectF sourceRect(0, 0, ts.width(), ts.height());
-        QSGGeometry::updateTexturedRectGeometry(&m_geometry, m_rect, texture()->convertToNormalizedSourceRect(sourceRect));
-    }
-}
-
-void QWaylandSurfaceNode::setTexture(QSGTexture *texture)
-{
-    if (m_currentMaterial->state()->texture() == texture)
-        return;
-    m_currentMaterial->state()->setTexture(texture);
-
-    QSize ts = texture->textureSize();
-    QRectF sourceRect(0, 0, ts.width(), ts.height());
-    QSGGeometry::updateTexturedRectGeometry(&m_geometry, m_rect, texture->convertToNormalizedSourceRect(sourceRect));
-    markDirty(DirtyMaterial);
-}
-
-QSGTexture *QWaylandSurfaceNode::texture() const
-{
-    return m_currentMaterial->state()->texture();
-}
-
 void QWaylandSurfaceNode::setItem(QWaylandSurfaceItem *item)
 {
     m_item = item;
diff --git a/src/compositor/compositor_api/qwaylandsurfacenode_p.h b/src/compositor/compositor_api/qwaylandsurfacenode_p.h
index 99bca03..523a1cd 100644
--- a/src/compositor/compositor_api/qwaylandsurfacenode_p.h
+++ b/src/compositor/compositor_api/qwaylandsurfacenode_p.h
@@ -42,9 +42,7 @@
 #ifndef QWAYLANDSURFACENODE_H
 #define QWAYLANDSURFACENODE_H
 
-#include "qwaylandsurfacetexturematerial_p.h"
-
-#include <QtQuick/QSGGeometryNode>
+#include <QtQuick/QSGSimpleTextureNode>
 #include <QtQuick/QSGOpaqueTextureMaterial>
 
 QT_BEGIN_NAMESPACE
@@ -52,7 +50,7 @@ QT_BEGIN_NAMESPACE
 class QWaylandSurfaceItem;
 class QSGTexture;
 
-class QWaylandSurfaceNode : public QSGGeometryNode
+class QWaylandSurfaceNode : public QSGSimpleTextureNode
 {
 public:
     QWaylandSurfaceNode(QWaylandSurfaceItem *item = 0);
@@ -61,12 +59,6 @@ public:
     void preprocess();
     void updateTexture();
 
-    void setRect(const QRectF &rect);
-    inline void setRect(qreal x, qreal y, qreal w, qreal h) { setRect(QRectF(x, y, w, h)); }
-
-    void setTexture(QSGTexture *texture);
-    QSGTexture *texture() const;
-
     bool isTextureUpdated() const { return m_textureUpdated; }
     void setTextureUpdated(bool textureUpdated) { m_textureUpdated = textureUpdated; }
 
@@ -78,13 +70,6 @@ private:
     QWaylandSurfaceItem *m_item;
     bool m_textureUpdated;
     bool m_useTextureAlpha;
-
-    QSGGeometry m_geometry;
-    QSGSimpleMaterial<QWaylandSurfaceTextureState> *m_textureMaterial;
-    QSGSimpleMaterial<QWaylandSurfaceTextureState> *m_opaqueTextureMaterial;
-    QSGSimpleMaterial<QWaylandSurfaceTextureState> *m_currentMaterial;
-
-    QRectF m_rect;
 };
 
 QT_END_NAMESPACE
diff --git a/src/compositor/compositor_api/qwaylandsurfacetexturematerial.cpp b/src/compositor/compositor_api/qwaylandsurfacetexturematerial.cpp
deleted file mode 100644
index 9562457..0000000
--- a/src/compositor/compositor_api/qwaylandsurfacetexturematerial.cpp
+++ /dev/null
@@ -1,122 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
-**
-** This file is part of the plugins of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** Commercial License Usage
-** Licensees holding valid commercial Qt licenses may use this file in
-** accordance with the commercial license agreement provided with the
-** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia.  For licensing terms and
-** conditions see http://qt.digia.com/licensing.  For further information
-** use the contact form at http://qt.digia.com/contact-us.
-**
-** GNU Lesser General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU Lesser
-** General Public License version 2.1 as published by the Free Software
-** Foundation and appearing in the file LICENSE.LGPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU Lesser General Public License version 2.1 requirements
-** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Digia gives you certain additional
-** rights.  These rights are described in the Digia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU
-** General Public License version 3.0 as published by the Free Software
-** Foundation and appearing in the file LICENSE.GPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU General Public License version 3.0 requirements will be
-** met: http://www.gnu.org/copyleft/gpl.html.
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qwaylandsurfacetexturematerial_p.h"
-#include <QtGui/QOpenGLContext>
-
-QT_BEGIN_NAMESPACE
-
-static const char wayland_surface_texture_material_vertex[] =
-           "uniform highp mat4 qt_Matrix;                      \n"
-           "attribute highp vec4 qt_VertexPosition;            \n"
-           "attribute highp vec2 qt_VertexTexCoord;            \n"
-           "varying highp vec2 qt_TexCoord;                    \n"
-           "void main() {                                      \n"
-           "    qt_TexCoord = qt_VertexTexCoord;               \n"
-           "    gl_Position = qt_Matrix * qt_VertexPosition;   \n"
-           "}";
-
-
-static const char wayland_surface_texture_opaque_material_fragment[] =
-           "varying highp vec2 qt_TexCoord;                    \n"
-           "uniform sampler2D qt_Texture;                      \n"
-           "uniform lowp float qt_Opacity;                     \n"
-           "void main() {                                      \n"
-           "    gl_FragColor = vec4(texture2D(qt_Texture, qt_TexCoord).rgb, 1.0) * qt_Opacity; \n"
-           "}";
-
-static const char wayland_surface_texture_material_fragment[] =
-           "varying highp vec2 qt_TexCoord;                    \n"
-           "uniform sampler2D qt_Texture;                      \n"
-           "uniform lowp float qt_Opacity;                     \n"
-           "void main() {                                      \n"
-           "    gl_FragColor = texture2D(qt_Texture, qt_TexCoord) * qt_Opacity; \n"
-           "}";
-
-QList<QByteArray> QWaylandSurfaceTextureMaterial::attributes() const
-{
-    QList<QByteArray> attributeList;
-    attributeList << "qt_VertexPosition";
-    attributeList << "qt_VertexTexCoord";
-    return attributeList;
-}
-
-void QWaylandSurfaceTextureMaterial::updateState(const QWaylandSurfaceTextureState *newState, const QWaylandSurfaceTextureState *oldState)
-{
-    Q_UNUSED(oldState);
-    newState->texture()->bind();
-}
-
-const char *QWaylandSurfaceTextureMaterial::vertexShader() const
-{
-    return wayland_surface_texture_material_vertex;
-}
-
-const char *QWaylandSurfaceTextureMaterial::fragmentShader() const
-{
-    return wayland_surface_texture_material_fragment;
-}
-
-QList<QByteArray> QWaylandSurfaceTextureOpaqueMaterial::attributes() const
-{
-    QList<QByteArray> attributeList;
-    attributeList << "qt_VertexPosition";
-    attributeList << "qt_VertexTexCoord";
-    return attributeList;
-}
-
-void QWaylandSurfaceTextureOpaqueMaterial::updateState(const QWaylandSurfaceTextureState *newState, const QWaylandSurfaceTextureState *oldState)
-{
-    Q_UNUSED(oldState);
-    newState->texture()->bind();
-}
-
-const char *QWaylandSurfaceTextureOpaqueMaterial::vertexShader() const
-{
-    return wayland_surface_texture_material_vertex;
-}
-
-const char *QWaylandSurfaceTextureOpaqueMaterial::fragmentShader() const
-{
-    return wayland_surface_texture_opaque_material_fragment;
-}
-
-QT_END_NAMESPACE
diff --git a/src/compositor/compositor_api/qwaylandsurfacetexturematerial_p.h b/src/compositor/compositor_api/qwaylandsurfacetexturematerial_p.h
deleted file mode 100644
index 4cf3df0..0000000
--- a/src/compositor/compositor_api/qwaylandsurfacetexturematerial_p.h
+++ /dev/null
@@ -1,91 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
-**
-** This file is part of the plugins of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** Commercial License Usage
-** Licensees holding valid commercial Qt licenses may use this file in
-** accordance with the commercial license agreement provided with the
-** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia.  For licensing terms and
-** conditions see http://qt.digia.com/licensing.  For further information
-** use the contact form at http://qt.digia.com/contact-us.
-**
-** GNU Lesser General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU Lesser
-** General Public License version 2.1 as published by the Free Software
-** Foundation and appearing in the file LICENSE.LGPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU Lesser General Public License version 2.1 requirements
-** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Digia gives you certain additional
-** rights.  These rights are described in the Digia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU
-** General Public License version 3.0 as published by the Free Software
-** Foundation and appearing in the file LICENSE.GPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU General Public License version 3.0 requirements will be
-** met: http://www.gnu.org/copyleft/gpl.html.
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QWAYLANDSURFACETEXTUREMATERIAL_H
-#define QWAYLANDSURFACETEXTUREMATERIAL_H
-
-#include <QtQuick/QSGSimpleMaterial>
-#include <QtQuick/QSGTexture>
-#include <QtGui/QOpenGLFunctions>
-
-QT_BEGIN_NAMESPACE
-
-class QWaylandSurfaceTextureState {
-public:
-    QWaylandSurfaceTextureState()
-        : m_texture(0)
-    {}
-    void setTexture(QSGTexture *texture) { m_texture = texture; }
-    QSGTexture *texture() const { return m_texture; }
-
-private:
-    QSGTexture *m_texture;
-};
-
-class QWaylandSurfaceTextureMaterial : public QSGSimpleMaterialShader<QWaylandSurfaceTextureState>
-{
-    QSG_DECLARE_SIMPLE_SHADER(QWaylandSurfaceTextureMaterial, QWaylandSurfaceTextureState)
-    public:
-
-        QList<QByteArray> attributes() const;
-
-        void updateState(const QWaylandSurfaceTextureState *newState, const QWaylandSurfaceTextureState *oldState);
-protected:
-        const char *vertexShader() const;
-        const char *fragmentShader() const;
-};
-
-class QWaylandSurfaceTextureOpaqueMaterial : public QSGSimpleMaterialShader<QWaylandSurfaceTextureState>
-{
-    QSG_DECLARE_SIMPLE_SHADER(QWaylandSurfaceTextureOpaqueMaterial, QWaylandSurfaceTextureState)
-    public:
-
-        QList<QByteArray> attributes() const;
-
-        void updateState(const QWaylandSurfaceTextureState *newState, const QWaylandSurfaceTextureState *oldState);
-protected:
-        const char *vertexShader() const;
-        const char *fragmentShader() const;
-};
-
-QT_END_NAMESPACE
-
-#endif // QWAYLANDSURFACETEXTUREMATERIAL_H
-- 
1.8.1.2


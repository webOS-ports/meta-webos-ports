From 4aa8076879038a63524bc44fc09f4232a138b021 Mon Sep 17 00:00:00 2001
From: Simon Busch <morphis@gravedo.de>
Date: Wed, 14 Aug 2013 10:22:01 +0200
Subject: [PATCH 1/5] Implement additional properties for QQuickWebView to
 control injection of user scripts

Upstream-Status: Inappropiate [enable feature]

Signed-off-by: Simon Busch <morphis@gravedo.de>
---
 Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp  | 37 +++++++++++++++++++++-
 Source/WebKit2/UIProcess/API/qt/qquickwebview_p.h  |  8 +++++
 .../WebKit2/UIProcess/API/qt/qquickwebview_p_p.h   |  2 ++
 3 files changed, 46 insertions(+), 1 deletion(-)

diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp b/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
index 07e6068..ad2a113 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
@@ -298,6 +298,8 @@ QQuickWebViewPrivate::QQuickWebViewPrivate(QQuickWebView* viewport)
     , filePicker(0)
     , databaseQuotaDialog(0)
     , colorChooser(0)
+    , userScriptsInjectAtStart(false)
+    , userScriptsForAllFrames(false)
     , m_betweenLoadCommitAndFirstFrame(false)
     , m_useDefaultContentItemSize(true)
     , m_navigatorQtObjectEnabled(false)
@@ -909,7 +911,12 @@ void QQuickWebViewPrivate::updateUserScripts()
         WKRetainPtr<WKStringRef> contents = readUserScript(url);
         if (!contents || WKStringIsEmpty(contents.get()))
             continue;
-        WKPageGroupAddUserScript(pageGroup.get(), contents.get(), /*baseURL*/ 0, /*whitelistedURLPatterns*/ 0, /*blacklistedURLPatterns*/ 0, kWKInjectInTopFrameOnly, kWKInjectAtDocumentEnd);
+
+        WKUserContentInjectedFrames injectedFrames = userScriptsForAllFrames ? kWKInjectInAllFrames :  kWKInjectInTopFrameOnly;
+        WKUserScriptInjectionTime injectionTime = userScriptsInjectAtStart ? kWKInjectAtDocumentStart : kWKInjectAtDocumentEnd;
+
+        WKPageGroupAddUserScript(pageGroup.get(), contents.get(), /*baseURL*/ 0, /*whitelistedURLPatterns*/ 0, /*blacklistedURLPatterns*/ 0,
+                                 injectedFrames, injectionTime);
     }
 }
 
@@ -1465,6 +1472,34 @@ void QQuickWebViewExperimental::setUserScripts(const QList<QUrl>& userScripts)
     emit userScriptsChanged();
 }
 
+bool QQuickWebViewExperimental::userScriptsInjectAtStart() const
+{
+    Q_D(const QQuickWebView);
+    return d->userScriptsInjectAtStart;
+}
+
+void QQuickWebViewExperimental::setUserScriptsInjectAtStart(bool injectAtStart)
+{
+    Q_D(QQuickWebView);
+    d->userScriptsInjectAtStart = injectAtStart;
+    d->updateUserScripts();
+    emit userScriptsInjectAtStartChanged();
+}
+
+bool QQuickWebViewExperimental::userScriptsForAllFrames() const
+{
+    Q_D(const QQuickWebView);
+    return d->userScriptsForAllFrames;
+}
+
+void QQuickWebViewExperimental::setUserScriptsForAllFrames(bool forAllFrames)
+{
+    Q_D(QQuickWebView);
+    d->userScriptsForAllFrames = forAllFrames;
+    d->updateUserScripts();
+    emit userScriptsForAllFramesChanged();
+}
+
 QUrl QQuickWebViewExperimental::remoteInspectorUrl() const
 {
 #if ENABLE(INSPECTOR_SERVER)
diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p.h b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p.h
index 86d68fc..6d1f669 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p.h
@@ -279,6 +279,8 @@ class QWEBKIT_EXPORT QQuickWebViewExperimental : public QObject {
     Q_PROPERTY(QQmlListProperty<QQuickUrlSchemeDelegate> urlSchemeDelegates READ schemeDelegates)
     Q_PROPERTY(QString userAgent READ userAgent WRITE setUserAgent NOTIFY userAgentChanged)
     Q_PROPERTY(QList<QUrl> userScripts READ userScripts WRITE setUserScripts NOTIFY userScriptsChanged)
+    Q_PROPERTY(bool userScriptsInjectAtStart READ userScriptsInjectAtStart WRITE setUserScriptsInjectAtStart NOTIFY userScriptsInjectAtStartChanged)
+    Q_PROPERTY(bool userScriptsForAllFrames READ userScriptsForAllFrames WRITE setUserScriptsForAllFrames NOTIFY userScriptsForAllFramesChanged)
     Q_PROPERTY(QUrl remoteInspectorUrl READ remoteInspectorUrl NOTIFY remoteInspectorUrlChanged FINAL)
     Q_ENUMS(NavigationRequestActionExperimental)
     Q_FLAGS(FindFlags)
@@ -326,6 +328,10 @@ public:
     void setDeviceHeight(int);
     QList<QUrl> userScripts() const;
     void setUserScripts(const QList<QUrl>& userScripts);
+    bool userScriptsInjectAtStart() const;
+    void setUserScriptsInjectAtStart(bool);
+    bool userScriptsForAllFrames() const;
+    void setUserScriptsForAllFrames(bool);
     QUrl remoteInspectorUrl() const;
 
     QWebKitTest* test();
@@ -385,6 +391,8 @@ Q_SIGNALS:
     void enterFullScreenRequested();
     void exitFullScreenRequested();
     void userScriptsChanged();
+    void userScriptsInjectAtStartChanged();
+    void userScriptsForAllFramesChanged();
     void preferredMinimumContentsWidthChanged();
     void remoteInspectorUrlChanged();
     void textFound(int matchCount);
diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
index f1ce171..f8931ba 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
@@ -210,6 +210,8 @@ protected:
     QQmlComponent* colorChooser;
 
     QList<QUrl> userScripts;
+    bool userScriptsInjectAtStart;
+    bool userScriptsForAllFrames;
 
     bool m_betweenLoadCommitAndFirstFrame;
     bool m_useDefaultContentItemSize;
-- 
1.8.1.2

